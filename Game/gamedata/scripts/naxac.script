-- -*- mode: lua; encoding: windows-1251 -*-

function process_fix()
	local fx = 1
	while naxac_fix["fix_"..fx] ~= nil do
		fx = fx + 1
	end
	fx = fx - 1

	local fix = amk.load_variable( "nfx", 0 )
	if fix == fx then return end

	amk.save_variable( "nfx", fx )

	if fix == 0 then return end

	this.spawn_ids_update()

	local fn = ""
	for i = fix+1, fx, 1 do
		fn = "fix_"..tostring( i )
		if naxac_fix[ fn ] then
			log("~ [naxac.process_fix] work fix#%s", tostring( i ))
			naxac_fix[ fn ]()
			log("- Successfully")
		end
	end
end

function spawn_ids_update()
	local fs = getFS()
	local ex = fs:exist("$game_scripts$", "spawn_ids.script")
	if not (ex and ex.modif ~= 0) then
		return
	end

	local t = {}
	_G.spawn_ids = t

	local filename = fs:update_path("$game_scripts$", "spawn_ids.script")

	local file = io.open(filename, "r")
	local n = 0
	local tmp = {}
	local key, value = "", 0
	if file then
		for line in file:lines() do
			if string.find(line, "^%-%-%-") then
				n = n - 1
				line = ""
			elseif string.find(line, "^%-%-%+") then
				line = string.sub( line, (string.find(line, "[%w_]")) )
				key, value = string.match(line, "^([%w_]+)%s*=%s*(%d+)")
				if key and value then
					value = tonumber(value) + n
					n = n + 1
					t[key] = value
				end
			else
				key, value = string.match(line, "^([%w_]+)%s*=%s*(%d+)")
				if key and value then
					value = tonumber(value) + n
					t[key] = value
					line = key.." = "..tostring(value)
				end
			end
			if line ~= "" then
				table.insert(tmp, line)
			end
		end
		file:close(file)
	end

	file = io.open(filename, "w")
	if file then
		for i, v in ipairs(tmp) do
			file:write(v, "\n")
		end
		file:close(file)
	end
end
---------------------------------------------------------------------------------------
function treasure_ss_1()
	local items = {
		['subway_scaner_doc2'] = 1
	}
	naxac.create_treasure( vector():set( -394.92098999023,0.49698415398598,52.124488830566 ), 146089, 3664, items )
end
function treasure_ss_2()
	local obj = AI:create_free( "inventory_box", vector():set(447.53710449219,31.134944915771,-455.5447265625),1427937,3745 )
	local code = ""
	for i = 1,10 do
		code = code..tostring( math.random( 0, 9 ) )
	end
	local t = {}
	t.visual_name = "physics\\equipment_cache\\equipment_seif_01_case"
	t.custom_data = "[logic]\n"..
					"cfg = scripts\\code_inventory_box.ltx\n"..
					"[password]\n"..
					"code = "..code
	netpk:modify( obj, t, netpk.fState )
	zamok.restore(obj, 1, code)

	AI:create( "zamok", obj.position, obj.m_level_vertex_id, obj.m_game_vertex_id, obj.id )
	AI:create( "device_scaner", obj.position, obj.m_level_vertex_id, obj.m_game_vertex_id, obj.id )
	AI:create( "subway_scaner_doc3", obj.position, obj.m_level_vertex_id, obj.m_game_vertex_id, obj.id )
end
function ss_teleports()
	AI:create( "ss_tele_1", vector():set(-427.43768310547,35.865772247314,-323.46566772461),137286,3664)
	AI:create( "ss_tele_2", vector():set(-418.9528503418,0.43205073475838,17.969646453857),146089,3664)
	AI:create( "ss_tele_3", vector():set(-394.98583984375,0.49851682782173,56.047332763672),146089,3664)
end
function del_ss_teleports()
	bind_mteleport.del_teleport( "ss_tele_1" )
	bind_mteleport.del_teleport( "ss_tele_2" )
	bind_mteleport.del_teleport( "ss_tele_3" )
end
function del_dar_tele_ao()
	bind_mteleport.del_teleport( "dar_tele_ao_1" )
	bind_mteleport.del_teleport( "dar_tele_ao_2" )
end
function del_lim_fenrir_tele()
	bind_mteleport.del_teleport( "snp_fenrir_tele_limansk" )
end

-- Спавним тайник Сыча в Х-10
function treasure_sysh_spawn()
	local items = {
		['ammo_gauss'] = 1,
		['sysh_document'] = 1,
		['antirad'] = 4,
		['medkit_scientic'] = 2,
		['af_kol_4'] = 1
	}
	naxac.create_treasure( vector():set(-1.9939445257187,-34.253723144531,27.17742729187),
		4256, 2777, items, "treasure", "sych_taynik_hint")
end

-- Делаем Боцмана непереводимым в оффлайн...
function set_udav_online()
	local obj = AI:story_object( story_ids.generators_udav )
	if obj then
		obj.job_online = true
		obj.job_online_condlist = nil
	end
end
-- ...а теперь обратно
function set_udav_default()
	local obj = AI:story_object( story_ids.generators_udav )
	if obj then
		obj.job_online = nil
		obj.job_online_condlist = nil
	end
end
-- Запускаем фриплей
function after_credits()
	-- не знаю, зачем это, но пусть будет
	if not db.gameover_credits_started then return end
	db.gameover_credits_started = nil

	if not has_alife_info("snp_rings_done") then
		get_console():execute("main_menu on")
		get_console():execute("disconnect")
		return
	end

	if not has_alife_info("naxac_freeplay_start") then
		Actor:give_info_portion("naxac_freeplay_start")
		
		local not_del = {
			["bolt"] = true,
			["wpn_binoc"] = true,
			["device_pda"] = true,
			['netpacket_pda'] = true,
			["device_torch"] = true
		}
		local obj
		Actor:iterate_inventory(function(actor, item)
			obj = AI:object(item:id())
			if obj and not_del[item:section()] == nil then
				AI:release(obj, true)
			end
		end,
		Actor)
		
		Actor:give_money(1000-Actor:money())
		
		level.disable_input()
		start_small_timer(2000, this.tele_to_escape)
	end
end
function tele_to_escape()
	u3_utils.savegame("Финал")
	start_small_timer(3000, function () teleport_manager.jumpTo("exit_ao2") end)
end
------------------------------------------------------------------------------------------
-- Склонение слова в зависимости от числа. Автор - Charsi
function declension(num,a1,a2,a3)
	return ( num%10==1 and num%100~=11 ) and a1
		or ( num%10>=2 and num%10<=4 and ( num%100 < 10 or num%100 >= 20 ) and a2
		or a3 )
end
-- получаем название модели из строки визуала
function get_model_name(visual)
	return ( string.match(visual, "^.-([^\\]+)$"):gsub("%.ogf", "") )
end
-- Перезаписываем логику рестриктора, если он в онлайне - переинициализируем
function rewrite_restr_logic( obj_name, logic )
	local obj = AI:object( obj_name )
	if obj then
		local cd = logic and "[logic]\ncfg = "..logic or ""
		netpk:modify( obj, {custom_data =	cd}, netpk.fState )
		local rest = level.object_by_id( obj.id )
		if rest then
			local st = db.storage[rest:id()]
			st = {}
			xr_logic.initialize_obj( rest, st, false, Actor, modules.stype_restrictor, (logic or "scripts\\dummy.ltx") )
		end
	end
end

-- Закрываем тайник на замок
function close_lock_box(box_id, code)
	local se_box = AI:object(box_id)
	if se_box == nil then
		log("! [naxac.close_lock_box]: box [%s] not found!", box_id)
		return
	end

	-- если пароль не задан, то сгенерируем случайный из семи цифр
	if code == nil then
		code = ""
		for i = 1,7 do
			code = code..tostring( math.random(0,9) )
		end
	end

	local data = netpk:get(se_box, netpk.fState)
	local cd = netpk:parse_custom_data(data.custom_data)
	cd.password = { code = code }
	cd.logic = { cfg = "scripts\\code_inventory_box.ltx" }
	data.custom_data = netpk:gen_custom_data(cd)
	netpk:set(se_box, data)

	local box = level.object_by_id(box_id)
	local num = 0

	if box then
		local zz = AI:create( "zamok", Actor:position(), Actor:level_vertex_id(), Actor:game_vertex_id(), Actor:id() )
		start_small_timer(500, function()
			local obj = level.object_by_id(zz.id)
			if obj then
				Actor:transfer_item(obj, box)
			end
		end)
		local st = db.storage[box_id]
		st = {}
		xr_logic.initialize_obj(box, st, false, Actor, modules.stype_item, "scripts\\code_inventory_box.ltx")
	else
		AI:create( "zamok", se_box.position, se_box.m_level_vertex_id, se_box.m_game_vertex_id, box_id )
		num = 1
	end

	zamok.restore(se_box, num, code)

	return code
end

-- Спавним тайник по заданным координатам
function create_treasure( pos, lv, gv, items, mapspot, hint )
	local ruck = AI:create_free( "m_inventory_box", pos, lv, gv )

	local id = ruck.id
	for sect, n in pairs(items) do
		for i = 1, n do
			AI:create(sect, pos, lv, gv, id)
		end
	end

	local t = netpk:get( ruck, netpk.fState )
	t.custom_data  = "[logic]\n".."cfg = scripts\\new_inventory_box.ltx"
	t.object_flags = bit_and( t.object_flags, bit_not(197) )
	netpk:set( ruck, t )

	if mapspot then
		level.map_add_object_spot_ser( id, mapspot, (hint or "Тайник") )
	end
	return ruck
end
-----------------------------------------------------------------------------------------------
local pi = math.pi
local pi2 = pi*2
local chk_sec = pi2/16
function angle_clamp(angle)
	if angle < 0 then
		return angle + pi2
	elseif angle > pi2 then
		return angle - pi2
	else
		return angle
	end
end
-- проверка для логики: с той ли стороны мы приближаемся к объекту,
-- проверяется сектор 45 градусов по заданному углу поворота
-- 0 - с востока, 1/2*pi - с севера, pi - с запада, 3/2*pi - с юга
-- on_info = {=naxac.check_direction(2.89)}
function check_direction(actor, npc, p)
	local check_angle = tonumber( p[1] )
	local angle = actor:position():sub(npc:position()):getH() + pi/2
	local chk_max = angle_clamp(check_angle + chk_sec)
	local chk_min = angle_clamp(check_angle - chk_sec)
--	log("[naxac.check_direction]: check_angle = %s, angle = %s, min = %s, max = %s", check_angle, angle, chk_min, chk_max)
	if chk_max < chk_min then
		return not (chk_max < angle and chk_min > angle)
	end
	return chk_max > angle and chk_min < angle
end
-----------------------------------------------------------------------------------------------
-- Изменение имени ГГ
local new_name = nil
function hero_rename_start(name)
	new_name = name
	-- запишем новое имя в серверный объект актёра
	netpk:modify( AI:actor(), {
		character_name = name
	}, netpk.fState )
end
function hero_rename( pk )
	if not new_name then return end
	-- запишем новое имя в клиентский объект актёра, смещение [39]
	local t = {}
	pk:r_seek(0)
	table.insert( t, pk:r_u16() )		-- 2 байта
	for i = 1,37 do
		table.insert( t, pk:r_u8() )	-- + ещё 37 раз по 1
	end
	local n = pk:r_stringZ()			-- читаем имя
--	log( "old name of hero: [%s]", n )
	table.insert( t, new_name )			-- сохраняем вместо старого новое
	while not pk:r_eof() do				-- вычитываем остаток пакета побайтово
		table.insert( t, pk:r_u8() )
	end

	pk:w_begin(t[1])					-- теперь записываем всё обратно
	for i = 2, #t, 1 do
		n = t[i]
		if type( n ) == "string" then
			pk:w_stringZ( n )
		else
			pk:w_u8( n )
		end
	end

	log( "- New name of hero successfully saved" )
end

function hero_rename_agrund()
	this.hero_rename_start("Стрелок")
	news_manager.cancel_task("storyline_eliminate_gunslinger")
end

function cancel_monolith_task(actor, npc)
	news_manager.cancel_task("sar_monolith")
end
----------------------------------------------------------------------------------
-- by Shadows aka Ray Twitty
function camera_rotate_on_position(pos, speed, action, ...)
	if pos and speed >= 1 and speed <= 20 then
		local args = {...}
		local dev = device()
		local current_dir = dev.cam_dir:mul(level.get_target_dist())
		local end_dir = pos:sub(dev.cam_pos)
		local current_angle = -current_dir:getH()
		local end_angle = -end_dir:getH()
		if vector():crossproduct(end_dir, dev.cam_dir).y > 0 then
			speed = -speed
		end
		level.add_call(
			function()
				if current_angle > 1.57 then
					current_angle = -4.71
				elseif current_angle < -4.71 then
					current_angle = 1.57
				end
				current_angle = current_angle + speed / 1000
				Actor:set_camera_direction(vector():set(current_angle, 0, 0))
				return math.abs(current_angle - end_angle) < 0.01
			end,
			function()
				if action then
					loadstring("return function(args) "..action.."(unpack(args)) end")()(args)
				end
			end
		)
	end
end
----------------------------------------------------------------------------------
-- Расстояние между точками на глобальной карте.
-- Используется для рассчёта траты заряда телепортаторов при перемещении.
--[[local max_dist = false
function get_map_dist_from_actor( vertex_id )
	local actor_gv = Actor:game_vertex_id()
	if not GGraph:valid_vertex_id( actor_gv ) then
		actor_gv = n_vertexes.get_nearest_gv( Actor:position() )
	end

	local pos1 = GGraph:vertex( vertex_id ):game_point()
	local pos2 = GGraph:vertex( actor_gv ):game_point()
	local dist = pos1:distance_to(pos2)
	
	if not max_dist then
		max_dist = 0
		local i, j, m_dist = 0, 0, 0
		while GGraph:valid_vertex_id( i ) do
			pos1 = GGraph:vertex( i ):game_point()
			while GGraph:valid_vertex_id( j ) do
				m_dist =  GGraph:vertex( j ):game_point():distance_to( pos1 )
				if m_dist > max_dist then
					max_dist = m_dist
				end
				j = j + 1
			end
			i = i + 1
		end
		max_dist = max_dist * 0.8
	end

--	log("[get_map_dist_from_actor]: dist = %s, max_dist = %s", dist, max_dist)
	return dist, max_dist
end
]]
local max_dist = false
function get_map_dist( start_level, start_pos, to_level, to_pos )
	local ini = game_ini()

	local function GetGlobalPos( level_name, pos )
		local global_rect = ini:r_rect(level_name, "global_rect") or Frect():set(-10, -10, 0, 0)
		local bound_rect = ini:r_rect(level_name, "bound_rect") or Frect():set(-10, -10, 0, 0)
		local zoom = global_rect:width() / bound_rect:width()
		local res = vector2()
		res.x = ( pos.x - bound_rect.x1 ) * zoom + global_rect.x1
		res.y = ( bound_rect:height() - ( pos.z - bound_rect.y1 ) ) * zoom + global_rect.y1
		return res
	end

	local pos1 = GetGlobalPos( start_level, start_pos )
	local pos2 = GetGlobalPos( to_level, to_pos )
	local dist = pos1:distance_to(pos2)

	if not max_dist then
	--	local r =  ini:r_rect("global_map", "bound_rect")
	--	max_dist = math.sqr( r:height()^2 + r:width()^2 ) *0.9
		max_dist = ini:r_rect("global_map", "bound_rect"):height() *0.9
	end

--	log("[get_map_dist_from_actor]: dist = %s, max_dist = %s", dist, max_dist)

	return dist, max_dist
end
----------------------------------------------------------------------------------
function get_actor_pursuit()
--	log("[naxac.get_actor_pursuit]")
	local pos = Actor:position()
	local be
	local enemies = {}
	for id, obj in pairs(db.creatures) do
		if id~=0 and obj and AI:object(id) and obj:is_alive() and obj:see(Actor) then
			be = obj:best_enemy()
			if be and be:id() == 0
				and obj:position():distance_to(pos) < math.random(20, 70)
			then
				-- if IsStalker(obj) then
					xr_wounded.custom_change(id)
				-- end
				table.insert(enemies, id)
			end
		end
	end
	amk.save_variable("pursuit", enemies)
--	table.print(enemies)
end
function set_actor_pursuit()
	local enemies = amk.load_table("pursuit")
	if #enemies > 0 then
		local lv, gv = Actor:level_vertex_id(), Actor:game_vertex_id()
		local obj
		for i, v in ipairs(enemies) do
			obj = AI:object(v)
			if obj then
				-- if not IsStalker(obj) then
					-- xr_wounded.custom_change(v)
				-- end
				AI:teleport_object("", 
					Actor:position():add( vector_rotate_y( Actor:direction(), math.random(40, 320) ):mul( math.random( 15, 20 ) ) ),
					lv, gv, v)
			end
		end
	end
	amk.del_variable("pursuit")
end
----------------------------------------------------------------------------------
local rnd_tbl = {}

function get_precondition_rnd(count, name, reset)
	local t = rnd_tbl[name]
	if t == nil then
		t = {}
		rnd_tbl[name] = t
		t.num = nil
	end

	local ret = t.num
	if ret == nil then
		ret = math.random( 1, count )
		t.num = ret
	end

	if reset then
		t.count = (t.count or 0) + 1
		if t.count == count then
			t.num = nil
			t.count = 0
		end
	end

	return ret
end
-- Гарик, смена фраз
function bar_guard_precond_1(first_speaker, second_speaker)
	return get_precondition_rnd(3, second_speaker:name(), true) == 1
end
function bar_guard_precond_2(first_speaker, second_speaker)
	return get_precondition_rnd(3, second_speaker:name(), true) == 2
end
function bar_guard_precond_3(first_speaker, second_speaker)
	return get_precondition_rnd(3, second_speaker:name(), true) == 3
end
---------------------------------
local used_timeout = 0
function lc_from_generators_to_warlab(actor, npc)
	if used_timeout > time_global() then return end
	used_timeout = time_global() + 2000

	local func_yes = function()
		level_changers.create_teleport_on_actor(
			vector():set(5.89471292495728,9.42465782165527,22.2922420501709),
			5450,
			3210,
			vector():set(0,3.04576086997986,0)
		)
	end
	local text = string.format(
		game.translate_string( "st_sr_level_changer" ),
		game.translate_string( "generators" ),
		game.translate_string( "warlab" )
	)
	ShowMessageBox("yes_no_alarm", text, func_yes)
end

function messer_bandit_friend(fs, ss)
	level_community_relation_by_sid(story_ids.val_sos_stalker, "l04_darkvalley", "bandit", 1500)
end

function val_escort_bandit_friend(fs, ss)
	level_community_relation_by_sid(story_ids.val_escort_captive, "l04_darkvalley", "bandit", 1500)
	level_community_relation_by_sid(story_ids.val_escort_nap1, "l04_darkvalley", "bandit", 1500)
end

function level_community_relation_by_sid(sid, level, community, relation)
	local npc = AI:story_object(sid)
	if npc then
		local npc_id = npc.id
		local obj
		for i = 1, 65534 do
			obj = AI:object(i)
			if obj and obj:clsid() == clsid.script_stalker
				and object_level_name(obj) == level
				and obj:community() == community
			then
				relation_registry.set_goodwill(npc_id, i, relation)
				relation_registry.set_goodwill(i, npc_id, relation)
			end
		end
	end
end

function escape_make_peace()
	local gulag1 = xr_gulag.get_gulag("esc2_bandit_les")
	if gulag1 then
		local gulags_to_peace = {"amk_embankment", "esc_bridge"}
		for i, v in ipairs(gulags_to_peace) do
			local gulag2 = xr_gulag.get_gulag(v)
			if gulag2 then
				for id1 in pairs(gulag1.npc_info) do
					for id2 in pairs(gulag2.npc_info) do
						relation_registry.set_goodwill(id1, id2, 1500)
						relation_registry.set_goodwill(id2, id1, 1500)
						-- log("escape_make_peace: %s to %s", AI:object(id1):name(), AI:object(id2):name())
					end
				end
			end
		end
	end
end

function check_sak_lager(npc)
	if level.name() ~= "l04_darkvalley"
		or npc:character_community() ~= "bandit"
	then
		return
	end

	local gulag = xr_gulag.get_gulag("sak_lager")
	if gulag then	
		local npc_id = npc:id()
		for id in pairs(gulag.npc_info) do
			relation_registry.set_goodwill(npc_id, id, 1500)
			relation_registry.set_goodwill(id, npc_id, 1500)
		end
	end
end

function val_watchtowers_online()
	if level.name() ~= "l04_darkvalley" then
		start_real_timer("run", 20, "naxac.val_watchtowers_online()")
		return
	end

	for i = 1, 4 do
		local gname = "val_watchtower"..i
		local g = xr_gulag.get_gulag(gname)
		if g then
			for id in pairs(g.npc_info) do
				local o = AI:object(id)
				if o then
					netpk:modify(o, {object_flags = -65}, netpk.fConvert)
				end
			end
		end
	end
end

function agro_arhara_friends(npc_id)
	local t = {
		"yakut_agro",
		"stalker_yakut1",
		"stalker_yakut2",
		"stalker_yakut3",
		"stalker_yakut4",
		"stalker_yakut5"
	}
	for i, v in ipairs(t) do
		obj = AI:object(v)
		if obj and obj:alive() then
			relation_registry.set_goodwill(npc_id, obj.id, 1500)
			relation_registry.set_goodwill(obj.id, npc_id, 1500)
		end
	end
end
function voyaki_arhara_friends()
	local nepisi = {
		"agro_chsovoy_trezv",
		"agro_piyn_soldier1",
		"trezv_kapitan",
		"agro_piyn_soldier2"
	}
	local obj
	for i, v in ipairs(nepisi) do
		obj = AI:object(v)
		if obj and obj:alive() then
			agro_arhara_friends(obj.id)
		end
	end
end

function check_val_prisoner_ransom(actor, npc)
	if Actor:dont_has_info("val_prisoner_ransom_done") then
		Actor:give_info_portion("val_prisoner_ransom_fail")
		relation_registry.set_community_goodwill("bandit", Actor:id(), -1500)
		return
	end

	level_community_relation_by_sid(story_ids.val_prisoner, "l04_darkvalley", "bandit", 1500)
	dialogs_darkvalley.voronin_ransom_sms()
end
function del_aes_flames()
	local obj
	for i = 1, 65534 do
		obj = AI:object(i)
		if obj and obj:section_name() == "zone_flame_small"
			and object_level_name(obj) == "l12_stancia"
			and obj:name() ~= "zone_flame_small_0038"
		then
			AI:release(obj, true)
		end
	end
end
function ros_flames_off()
	local names = {
		["zone_flame_0000"] = true,
		["zone_flame_0001"] = true,
		["zone_flame_0002"] = true,
		["zone_flame_small_0005"] = true,
		["zone_flame_small_0006"] = true,
		["zone_flame_small_0007"] = true,
		["zone_flame_small_0008"] = true,
		["zone_flame_small_0010"] = true
	}
	local obj
	for i = 1, 65534 do
		obj = AI:object(i)
		if obj and names[obj:name()]
			and object_level_name(obj) == "l06_rostok"
		then
			AI:release(obj, true)
		end
	end
end
function pri_electra_koleso_off()
	for i = 1, 20 do
		obj = AI:object( string.format("pri_zone_witches_galantine_koleso_00%02d", i) )
		if obj then
			AI:release(obj, true)
		end
	end
end
function pri_electra_koleso_on()
	for i = 1, 20 do
		obj = AI:object( string.format("pri_zone_witches_galantine_koleso_00%02d", i) )
		if not obj then
			AI:create( spawn_ids.pri_zone_witches_galantine_koleso + i - 1 )
		end
	end
end
