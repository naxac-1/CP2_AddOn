-- -*- mode: lua; encoding: windows-1251 -*-
function marsh_band_spawn()
	if not Actor:has_info("marsh_band_spawn") then
		local v = vector()
		AI:create_free("agr_bandit_respawn_1",v:set(299.289,0.59365,-122.695),331636,3531)
		AI:create_free("agr_bandit_respawn_2",v:set(299.289,0.59365,-122.695),331636,3531)
		AI:create_free("gar_bandit_respawn_2",v:set(299.289,0.59365,-122.695),331636,3531)
		AI:create_free("ds_bandit_respawn_2",v:set(299.289,0.59365,-122.695),331636,3531)
		AI:create_free("ds_bandit_respawn_3",v:set(252.754,0.3090138,-145.589),296792,3510)
		AI:create_free("val_bandit_respawn_4",v:set(252.754,0.3090138,-145.589),296792,3510)
		AI:create_free("val_bandit_respawn_4",v:set(252.754,0.3090138,-145.589),296792,3510)
		AI:create_free("val_bandit_respawn_4",v:set(252.754,0.3090138,-145.589),296792,3510)
		AI:create_free("marsh_nebo_ambush1",v:set(37.800182342,1.1534446,-201.8684),158865,3442)
		AI:create_free("marsh_nebo_ambush2",v:set(37.800182342,1.1534446,-201.8684),158865,3442)
		AI:create_free("marsh_nebo_ambush3",v:set(37.800182342,1.1534446,-201.8684),158865,3442)
		AI:create_free("marsh_nebo_ambush4",v:set(37.800182342,1.1534446,-201.8684),158865,3442)
		AI:create_free("prov_ruk",v:set(-3.481797,3.3647267818451,12.3242),137219,3418)
		spawn_prohod_lim()
		spawn_prohod_hos()
		Actor:give_info_portion("marsh_band_spawn")
	end
end

function main_braad(npc)
	npc:set_character_community("ecolog", 0, 0)
	npc:set_relation(game_object.friend, Actor)
	Actor:give_info_portion( "freeman_braad_one" )
end

function setGulagEnemy()
	local obj = AI:object("rostok_stalker")
	if obj then
		AI:create("wpn_mp5",obj.position,obj.m_level_vertex_id,obj.m_game_vertex_id,obj.id)
		AI:create("wpn_val",obj.position,obj.m_level_vertex_id,obj.m_game_vertex_id,obj.id)
		AI:create_ammo("ammo_5.56x45_ss190",obj.position,obj.m_level_vertex_id,obj.m_game_vertex_id,obj.id,30)
	end
end

function bloodsucker()
	local v = vector()
	AI:create_free("bloodsucker_strong",v:set(147.087142945,-0.00357154117,59.948166),39508,1228)
	AI:create_free("bloodsucker_strong",v:set(147.087142945,-0.00357154117,59.948166),39508,1228)
	AI:create_free("bloodsucker_strong",v:set(147.087142945,-0.00357154117,59.948166),39508,1228)
end

function main_friend(fs, ss)
	local npc = (fs:id() == 0) and ss or fs
	npc:set_relation(game_object.friend, Actor)
end

function zombie_blow()
	local v = vector()
	AI:create_free("burer_strong",v:set(-108.363,21.564,-35.483),312,1529)
	AI:create_free("m_poltergeist_dd",v:set(-108.363,21.564,-35.483),312,1529)
	AI:create_free("bloodsucker_effector",v:set(-146.986,-19.088,-72.524),1082,1457)
	AI:create_free("cat_strong",v:set(-85.379,-19.090,-49.233),9988,1495)
	AI:create_free("cat_strong",v:set(-85.379,-19.090,-49.233),9988,1495)
	AI:create_free("cat_strong",v:set(-85.379,-19.090,-49.233),9988,1495)
	AI:create_free("cat_strong",v:set(-85.379,-19.090,-49.233),9988,1495)
	AI:create_free("cat_strong",v:set(-86.602,-19.090,-171.465),9340,1455)
	AI:create_free("cat_strong",v:set(-86.602,-19.090,-171.465),9340,1455)
end

function zasada_for()
	local v = vector()
	AI:create_free("electro_chimera",v:set(12.886095046997,-16.55083847,175.3548889),320050,1697)
	AI:create_free("new_electro_chimera",v:set(12.886095046997,-16.55083847,175.3548889),320050,1697)
	AI:create_free("fire_chimera",v:set(12.886095046997,-16.55083847,175.3548889),320050,1697)
	AI:create_free("chimera_x_ray",v:set(12.886095046997,-16.55083847,175.3548889),320050,1697)
end

function radar_man()
	local v = vector()
	AI:create_free("m_controller_old_fat",v:set(-61.979244232178,-21.8962020874,35.8896102905),195,2727)
	AI:create_free("m_controller_old",v:set(0.86928582191467,-23.69577599,1.777916193),6155,2703)
	AI:create_free("zombie_babka_normal",v:set(0.86928582191467,-23.69577599,1.777916193),6155,2703)
	AI:create_free("zombie_babka_strong",v:set(0.86928582191467,-23.69577599,1.777916193),6155,2703)
	AI:create_free("zombie_immortal",v:set(0.86928582191467,-23.69577599,1.777916193),6155,2703)
	AI:create_free("zombie_normal",v:set(0.86928582191467,-23.69577599,1.777916193),6155,2703)
	AI:create_free("zombie_normal",v:set(0.86928582191467,-23.69577599,1.777916193),6155,2703)
	AI:create_free("zombie_immortal",v:set(0.86928582191467,-23.69577599,1.777916193),6155,2703)
	AI:create_free("zombie_blow",v:set(0.86928582191467,-23.69577599,1.777916193),6155,2703)
	AI:create_free("zombie_normal",v:set(0.86928582191467,-23.69577599,1.777916193),6155,2703)
end

function killactor ()
	local sids = {
		story_ids.mil_trader_gavr,
		story_ids.mil_gavr_bodyguard1,
		story_ids.mil_gavr_bodyguard2,
		story_ids.tamaz_body2
	}
	local npc
	for i, sid in ipairs(sids) do
		npc = level_object_by_sid (sid)
		if npc and npc:alive() then
		   npc:set_relation(game_object.enemy, Actor) 
		end
	end
end

function killactor_spawn()
	local v = vector()
	AI:create_free("killer_boevik2",v:set(43.09783554,-8.13079166,14.410468),345215,1582)
	AI:create_free("killer_boevik1",v:set(59.50757599,-8.5839643,9.3478708),358211,1570)
	AI:create_free("killer_boevik3",v:set(59.52076721,-8.7670116,22.850177765),358227,1559)
	AI:create_free("killer_boevik4",v:set(40.780555725,-8.319325447,19.2897949),343015,1582)
	AI:create_free("killer_boevik5",v:set(46.9849434,-8.1420059,20.492004),348191,1582)
	AI:create_free("killer_boevik6",v:set(51.40478897,-8.08700466,13.5054283),351374,1582)
end

function sorok_pda()
	return inventory.search("device_pda_npc",40) ~= false
end
   
   
function sorok_pda_sdal(first_speaker, second_speaker)
	inventory.out_items("device_pda_npc",40) 
end

function chern_dogs()
	local v = vector()
	AI:create_free("psy_dog_radar",v:set(338.74279785,-46.47824478,-163.8179168),86443,2086)
	AI:create_free("psy_dog_radar",v:set(338.74279785,-46.47824478,-163.8179168),86443,2086)
	AI:create_free("psy_dog_radar",v:set(354.486083984,-45.66619491577,-213.2041015625),95066,1872)
	AI:create_free("psy_dog_radar",v:set(354.486083984,-45.66619491577,-213.2041015625),95066,1872)
end

function create_monstr()
	local position = Actor:position()
	position.x = position.x + 13
	AI:create_free("burer_strong",	position, Actor:level_vertex_id(), Actor:game_vertex_id())
	AI:create_free("burer_strong",	position, Actor:level_vertex_id(), Actor:game_vertex_id())
end			
			
function kill_npc(sid)
local npc = level_object_by_sid (story_ids.yakut_agro)
    if npc == nil or npc:alive () == false then
       return 
    end    
    npc:kill(npc)
end


function take_yakut_agro2_spot()
	sak.add_spot_of_docent(9650)
end


function new_comp()
	local obj = AI:object("komp_blok_0001")
	if obj then
		local pos, lv, gv = obj.position, obj.m_level_vertex_id, obj.m_game_vertex_id
		AI:release(obj, true)
		AI:create_free("computer_new", pos, lv, gv)
	end
end

function release_actor_items()
    local obj
	shiftCheckDropItem()
	Actor:iterate_inventory(
		function(dummy,item)
			-- Документы Воронина спецом вынесены отдельно, т.к. почему-то через protected_items 2 штуки все равно удалялись 
			if item:section()~="zone_docs" and 
				not protected_items.actor_items_keep(item:section()) then
				-- удаление вещи
				obj = AI:object(item:id())
				if obj then AI:release(obj, true) end
			end
		end
	,Actor)

	sleep_manager.main(5+amk.load_variable("gg_need_sleep_nrg",0))

	AI:create_free("medkit",vector():set(66.125068664551,-8.0152215957642,16.54740524292),364537,1582)
	AI:create_free("bread",vector():set(66.125068664551,-8.0152215957642,16.54740524292),364537,1582)
end	

function release_actor_money()
  local num = Actor:money() 
  Actor:give_money(-num)
end

function friendactor(community1, community2)
relation_registry.set_community_goodwill ("stalker", "actor", 2000)
end

function atak_larger_have(task, info)
  if Actor and Actor:has_info("snip_esc1_dead") and
	Actor:has_info("snip_esc2_dead") and
	Actor:has_info("snip_esc3_dead") and
	Actor:has_info("snip_esc4_dead") and
	Actor:has_info("snip_esc5_dead") and
	Actor:has_info("snip_esc6_dead")and
	Actor:has_info("snip_esc7_dead") and
	Actor:has_info("snip_esc8_dead") and
	Actor:has_info("snip_esc9_dead") and
	Actor:has_info("snip_esc10_dead") and
	Actor:has_info("snip_esc11_dead") and
	Actor:has_info("snip_esc12_dead") ~= nil then
		return Actor:give_info_portion("atak_larger_have") ~= nil   
  end
return false
end

function zahar_naemnik_have(task, info)
  if Actor and Actor:has_info("naem_zahar1_dead") and
	Actor:has_info("naem_zahar2_dead") and
	Actor:has_info("naem_zahar3_dead") and
	Actor:has_info("naem_zahar4_dead") and
	Actor:has_info("naem_zahar5_dead") and
	Actor:has_info("naem_zahar6_dead") ~= nil then
		return Actor:give_info_portion("zahar_naemnik_have") ~= nil   
  end
return false
end

function sms_new()
--	Actor:give_info_portion("sms_new_dan1")
	news_manager.send_tip("sms_new_dan1_text", 0, "zahar", 20000)
end

function sms_new1()
--	Actor:give_info_portion("sms_new_dan2")
	news_manager.send_tip("sms_new_dan2_text", 0, "prizrak", 20000)
end

function actor_has_money_30000()
  return Actor:money()>=30000
end

function give_money_30000(t1,t2)
  local npc=t1
  if npc:id()==Actor:id() then
    npc=t2
  end
  dialogs.relocate_money(npc,30000,"out")
end

function delete_smart()
  local se_obj = AI:object("esc2_bloodsucker1")
  if se_obj then
    AI:release(se_obj, true)
  end
  local se_obj = AI:object("ros_smart_stalker1")
  if se_obj then
    AI:release(se_obj, true)
  end
end

function spawn_church_band()
	local v = vector()
	AI:create("add_church_ban1",v:set(294.5813,7.1353683,-153.27551),327543,3531)
	AI:create("add_church_ban2",v:set(294.5813,7.1353683,-153.27551),327543,3531)
	AI:create("add_church_ban3",v:set(294.5813,7.1353683,-153.27551),327543,3531)
end

function sed_village()
	local obj = AI:object("marsh_small_nebo") 
	if obj then
		amk.add_spot_on_map(obj.id,"blue_location","Пост Чистого неба") 
		remove_dyak()
	end
end

function remove_village()
	local obj = AI:object("marsh_small_nebo")
	if obj then
		level.map_remove_object_spot(obj.id,"blue_location")
	end
end

function sed_dyak()
	local obj = AI:object("dyak") 
	if obj then
		amk.add_spot_on_map(obj.id,"blue_location","Дьяк")
	end
end

function remove_dyak()
	local obj = AI:object("dyak")
	if obj then
		level.map_remove_object_spot(obj.id,"blue_location")
	end
end

-- правка вылета и неубирания худа при взятии рюкзака калмыка - перенесено в калбек на подъем
function mina_band(obj)
end
function mina_band3()	
	local obj = Actor:object("grenade_rgd5_new")
	if obj then
		del_obj_by_id(obj:id())
	end
end


-- правка вылета и неубирания худа при взятии рюкзака калмыка - перенесено в калбек на подъем
function kalmyak_tele( actor, npc)
end
function kalmyak_tele2()
	level.add_pp_effector ("blink.ppe", 234, false)       
	level.add_pp_effector("teleport.ppe", 2006, false) 
	Actor:set_actor_position(patrol("kalmyak_tele_walk"):point(0))
	local dir = patrol("kalmyak_tele_walk"):point(0):sub(patrol("kalmyak_tele_look"):point(0))
	Actor:set_actor_direction(-dir:getH())
	Actor:give_info_portion("kalmyak_vstreca_start")

	-- отберём все шмотки у ГГ и положим их в ящик под замок
	local obj = AI:object("mar_smart_terrain_5_8_box")
	if not obj then return end
	local box_id = obj.id
	local box = level.object_by_id(box_id)
	if not box then return end

	-- оставим предметы на поясе и броник, а то всё-таки в радиацию лезть, мы ж не звери
	local outfit_id = actor_outfit and actor_outfit:id()
	shiftCheckDropItem()
	Actor:iterate_inventory(function (actor, item)
		if not ( protected_items.actor_items_keep( item:section() )
			or Actor:is_on_belt(item)
			or outfit_id == item:id() )
		then
			actor:transfer_item(item, box)
		end
	end,
	Actor)

	local code = naxac.close_lock_box( box_id )
	amk.save_variable("kalmyk_code", code)
end
------------------------------ НЕ ИСПОЛЬЗУЕТСЯ!
function delete_obj_restrictor()
  local se_obj = AI:object("marsh_havan_restr")
  if se_obj then
    AI:release(se_obj, true)
  end
end

function spawn_havan_restr2()
	netpk:create_restrictor(
		vector():set(-4.2143630981445,3.3634412288666,12.2967), 136894, 3418,
		"[logic]\ncfg = scripts\\new\\nebo\\marsh_havan_restr2.ltx",
		3.0
	)
end

local out_object
local in_object

function ograblen_kalm(actor,npc)
	local inv_box_1 = level_object_by_sid(story_ids.kalmyak)
	out_object = Actor
	in_object = inv_box_1
	shiftCheckDropItem()
	Actor:inventory_for_each(transfer_object_item)
end

function vozvrat_kalm(actor,npc)
	local inv_box_1 = level_object_by_sid(story_ids.kalmyak)
	in_object = Actor
	out_object = inv_box_1
	shiftCheckDropItem()
	out_object:inventory_for_each(transfer_object_item)
end

function transfer_object_item(item)
out_object:transfer_item(item, in_object)
--dbg.log("transfer item=%s from %s to %s", item:name(), out_object:name(), in_object:name())
end 
------------------------------ НЕ ИСПОЛЬЗУЕТСЯ!
function kalmyak_vrag(actor, npc)
    xr_gulag.setGulagEnemy ("kalmyak_marsh", actor)
end

function kalmyak_spawn()
	local obj = AI:create_free("kalmyak_ruk",vector():set(-199.24903869629,0.60609865188599,130.58129),38203,3383)
	amk.add_spot_on_map(obj.id,"crlc_big","Рюкзак Калмыка")
	local angle = math.random(0, 2000*math.pi) /1000
	local logic = "[logic]\n"..
		"active = sr_idle\n"..
		"[sr_idle]\n"..
		"on_actor_inside = sr_idle@check_dir\n"..
		"on_info = {+kalmyak_need_done} nil\n"..
		"[sr_idle@check_dir]\n"..
		"on_info = {!naxac.check_direction("..tostring(angle)..")} sr_teleport\n"..
		"on_info2 = {+kalmyak_need_done} nil\n"..
		"[sr_teleport]\n"..
		"point1 = kalmyak_ruk_walk\n"..
		"look1 = kalmyak_ruk_look\n"..
		"timeout = 0\n"..
		"on_actor_outside = sr_idle\n"..
		"on_info = {+kalmyak_need_done} nil"
	netpk:create_restrictor(
		vector():set(-199.24903869629,0.60609865188599,130.58129),38203,3383,
		logic, 15.0
	)
--	create_kalmyak_restr()
--	set_kalmyak_ruk()
end

function create_kalmyak_restr()
	local v = vector()
	local points = {
		{ v:set( -194.6745300293,0.58615601062775,133.2268 ),38203,3383 },
		{ v:set(-190.16891479492,-0.44136956334114,125.738),38203,3383 },
		{ v:set(-192.65054321289,-0.32059952616692,119.033),38203,3383 },
		{ v:set(-201.21597290039,0.26242354512215,116.694),38203,3383 },
		{ v:set(-206.72094726563,-0.32424575090408,123.919),37907,3383 },
		{ v:set(-203.21374511719,-0.32538011670113,137.027),37907,3383 }
	}
	
	for i, v in ipairs( points ) do
		netpk:create_restrictor(
			v[ 1 ], v[ 2 ], v[ 3 ],
			"[logic]\ncfg = scripts\\new\\nebo\\kalmyak_restr"..i..".ltx",
			3.0
		)
	end
end


function set_kalmyak_ruk()
end

function remove_kalmyak_ruk()
end

function set_kalmyak()
	local obj = AI:object("kalmyak_marsh") 
	if obj then
		amk.add_spot_on_map(obj.id,"crlc_big","Предположительное местонахождение Калмыка")
	end
end

function remove_kalmyak()
	local obj = AI:object("kalmyak_marsh") 
	if obj then
		level.map_remove_object_spot(obj.id,"crlc_big")
	end
end

------НЕ ЗАБУДЬ ДОБАВИТЬ ФАЙЛЫ ЛОГИКИ
function kontr_marsh_restr()
	local v = vector()
	local points = {
		{ v:set(-171.56242370605,0.78741002082825,391.19),56846,3371 },
		{ v:set(-170.94248962402,1.1991214752197,404.29232),57320,3361 },
		{ v:set(-192.83070373535,1.0270764827728,396.1445),45298,3361 },
		{ v:set(-204.17848205566,0.53202784061432,404.1797),39196,3361 },
		{ v:set(-189.07986450195,1.2418839931488,418.6262),46761,3361 },
		{ v:set(-175.13674926758,1.3927493095398,423.0242),54657,3361 }
	}
	for i, v in ipairs( points ) do
		netpk:create_restrictor(
			v[ 1 ], v[ 2 ], v[ 3 ],
			"[logic]\ncfg = scripts\\new\\nebo\\kontr_marsh_restr"..i..".ltx",
			53.0
		)
	end
end
------НЕ ЗАБУДЬ ДОБАВИТЬ ФАЙЛЫ ЛОГИКИ

function spawn_red_mozg()
end

function set_red_contr()
	-- правка по потере мозга при сейв/лоаде
	netpk:create_restrictor(
		vector():set(-175.13674926,1.3927493095,423.02426147),54657,3361,
		"[logic]\nactive = sr_idle\n[sr_idle]\non_actor_inside = nil %=braad_test.spawn_red_contr%",
		50.0
	)
	
	local obj = AI:object("marsh_controller") 
	if obj then
		amk.add_spot_on_map(obj.id,"crlc_big","Предположительное местонахождение контролера")
	end
end

function spawn_red_contr()
	AI:create_free("kontrik_red_mozg",vector():set(-175.13674926,1.3927493095,423.02426147),54657,3361)
	for i=1,3 do
		AI:create_free("zombie_hell"..tostring(math.random(15)),vector():set(-175.13674926,1.3927493095,423.02426147),54657,3361)
	end
end

function remove_red_contr()
	local obj = AI:object("marsh_controller") 
	if obj then
		level.map_remove_object_spot(obj.id,"crlc_big")
	end
end

-----------------------УНИКАЛЬНАЯ ЖИВОТИНА-----------------------------------------------------------
function spawn_rad_red_burer1()
	local obj = AI:object("rad_red_burer1") 
	if obj then
		AI:create("mutant_burer_red_hand",obj.position,obj.m_level_vertex_id,obj.m_game_vertex_id,obj.id)
	end
end

function spawn_rad_red_krovosos1()
	local obj = AI:object("rad_red_krovosos1")
	if obj then 
		AI:create("mutant_krovosos_red_jaw",obj.position,obj.m_level_vertex_id,obj.m_game_vertex_id,obj.id)
	end
end

function spawn_mil_red_burer1()
	local obj = AI:object("mil_red_burer1") 
        if obj then
		AI:create("mutant_burer_red_hand",obj.position,obj.m_level_vertex_id,obj.m_game_vertex_id,obj.id)
	end
end

function spawn_mil_red_krovosos1()
	local obj = AI:object("mil_red_krovosos1") 
	if obj then
		AI:create("mutant_krovosos_red_jaw",obj.position,obj.m_level_vertex_id,obj.m_game_vertex_id,obj.id)
	end
end

function spawn_agr_red_burer1()
	local obj = AI:object("agr_red_burer1")
	if obj then
		AI:create("mutant_burer_red_hand",obj.position,obj.m_level_vertex_id,obj.m_game_vertex_id,obj.id)
	end
end

function spawn_agr_red_krovosos1()
	local obj = AI:object("agr_red_krovosos1")
	if obj then
		AI:create("mutant_krovosos_red_jaw",obj.position,obj.m_level_vertex_id,obj.m_game_vertex_id,obj.id)
	end
end

function spawn_val_red_burer1()
	local obj = AI:object("val_red_burer1")
	if obj then
		AI:create("mutant_burer_red_hand",obj.position,obj.m_level_vertex_id,obj.m_game_vertex_id,obj.id)
	end
end

function spawn_val_red_krovosos1()
	local obj = AI:object("val_red_krovosos1")
	if obj then 
		AI:create("mutant_krovosos_red_jaw",obj.position,obj.m_level_vertex_id,obj.m_game_vertex_id,obj.id)
	end
end

-----------------------УНИКАЛЬНАЯ ЖИВОТИНА-----------------------------------------------------------

function kashei_spawn()
	AI:create_free("sveeblov_ruk",vector():set(406.22711181641,3.4233021736145,236.834),407402,3546)
end

function friendactornebo(community1, community2)
	relation_registry.set_community_goodwill ("nebo", "actor", 400)
end


function kot_krovosos()
	local position = Actor:position()
	position.x = position.x + 25
	AI:create_free("bloodsucker_strong",position, Actor:level_vertex_id(), Actor:game_vertex_id())
	AI:create_free("burer_strong",position, Actor:level_vertex_id(), Actor:game_vertex_id())
end

function spawn_blizn_krug1()
	local obj = AI:object("blizn_krug1")
	if obj then
		AI:create("mono_note",obj.position,obj.m_level_vertex_id,obj.m_game_vertex_id,obj.id)
	end
end
------------------------------------------------------ищем монолитовцев вешаем метки------------------------------
function set_televizor()
	local obj = AI:object("marsh_pust_restr") 
	if obj then
		amk.add_spot_on_map(obj.id,"crlc_big","Предполагаемое местонахождение монолитовцев №1")
	end
	obj = AI:object("dog_marsh") 
	if obj then
		amk.add_spot_on_map(obj.id,"crlc_big","Предполагаемое местонахождение монолитовцев №2")
	end
	obj = AI:object("bloodsuker_mar2") 
	if obj then
		amk.add_spot_on_map(obj.id,"crlc_big","Предполагаемое местонахождение монолитовцев №3")
	end
	obj = AI:object("bloodsuker_mar3") 
	if obj then
		amk.add_spot_on_map(obj.id,"crlc_big","Предполагаемое местонахождение монолитовцев №4")
	end
	obj = AI:object("marsh_zombi_hutor") 
	if obj then
		amk.add_spot_on_map(obj.id,"crlc_big","Предполагаемое местонахождение монолитовцев №5")
	end
end

function set_televizor2()
end

function set_televizor3()
end

function set_televizor4()
end

function set_televizor5()
end

function remove_televizor()
	local obj = AI:object("marsh_pust_restr")
	if obj then
		level.map_remove_object_spot(obj.id,"crlc_big")
	end
	obj = AI:object("dog_marsh")
	if obj then
		level.map_remove_object_spot(obj.id,"crlc_big")
	end
	obj = AI:object("bloodsuker_mar2")
	if obj then
		level.map_remove_object_spot(obj.id,"crlc_big")
	end
	obj = AI:object("bloodsuker_mar3")
	if obj then
		level.map_remove_object_spot(obj.id,"crlc_big")
	end
	obj = AI:object("marsh_zombi_hutor")
	if obj then
		level.map_remove_object_spot(obj.id,"crlc_big")
	end
end

function remove_televizor2()
end

function remove_televizor3()
end

function remove_televizor4()
end

function remove_televizor5()
end



------------------------------------------------------ищем монолитовцев вешаем метки------------------------------
function set_kot()
	local obj = AI:object("kot") 
	if obj then
		amk.add_spot_on_map(obj.id,"crlc_big","Кот")
	end
end

function remove_kot()
	local obj = AI:object("kot")
	if obj then
		level.map_remove_object_spot(obj.id,"crlc_big")
	end
end


function set_giant()
	local obj = AI:object("gigant_red_strong1") 
	if obj then
		amk.add_spot_on_map(obj.id,"crlc_big","Уникальный псевдогигант")
	end
end

function remove_giant()
	local obj = AI:object("gigant_red_strong1")
	if obj then
		level.map_remove_object_spot(obj.id,"crlc_big")
	end
end


function luis_killself()
	local se_npc = AI:object("brat_luis")
	if se_npc then
		local npc = level.object_by_id(se_npc.id)
		if npc then
			npc:kill(npc)
			local snd_obj = xr_sound.get_safe_sound_object([[weapons\colt\colt1911_shoot]])
			snd_obj:play_no_feedback(Actor, sound_object.s2d, 0, vector(), 1.0)
		end
	end
end

function francuz_killself()
	local se_npc = AI:object("francuz")
	if se_npc then
		local npc = level.object_by_id(se_npc.id)
		if npc then
			npc:kill(npc)
			local snd_obj = xr_sound.get_safe_sound_object([[weapons\colt\colt1911_shoot]])
			snd_obj:play_no_feedback(Actor, sound_object.s2d, 0, vector(), 1.0)
		end
	end
end

function zahar_na_limansk()
  -- создается переход c АС В ЛИМАНСК
	if (not has_alife_info(	"level_newlimansk" )) then
		level_changers.create_level_changer("lc_military_to_limansk")
        Actor:give_info_portion("level_newlimansk")
	end
end

function spawn_zombi_restr1()
	local v = vector()
    if level.name()=="limansk" and not Actor:has_info("lim_spawn_restr1") then 
		AI:create("lim_sniper",v:set(36.775608062744,28.541257858276,197.56105041504),46539,3003)
		AI:create("lim_sniper_ohr1",v:set(3.7273268699,13.70157623291,196.73896789551),26776,3010)
		AI:create("lim_sniper_ohr2",v:set(15.121144294,13.698766708374,196.21144104004),34620,3010)
		AI:create("lim_sniper_ohr3",v:set(4.3583545684,17.090801239014,198.5705871582),27241,3010)
		AI:create("zombi_restr1",v:set(5.4863138198853,10.999716758728,155.81025695801),28057,3010)
		AI:create("zombi_restr2",v:set(5.4863138198853,10.999716758728,155.81025695801),28057,3010)
		AI:create("zombi_restr3",v:set(5.4863138198853,10.999716758728,155.81025695801),28057,3010)
		AI:create("zombi_restr4",v:set(5.4863138198853,10.999716758728,155.81025695801),28057,3010)
		AI:create("zombi_restr5",v:set(5.4863138198853,10.999716758728,155.81025695801),28057,3010)
    Actor:give_info_portion("lim_spawn_restr1")
    end
end


function spawn_zombi_restr2()
	local v = vector()
    if level.name()=="limansk" and not Actor:has_info("lim_spawn_restr2") then 
		AI:create("zombi_restr1",v:set(5.4863138198853,10.999716758728,155.81025695801),28057,3010)
		AI:create("zombi_restr2",v:set(5.4863138198853,10.999716758728,155.81025695801),28057,3010)
		AI:create("zombi_restr3",v:set(5.4863138198853,10.999716758728,155.81025695801),28057,3010)
		AI:create("zombi_restr4",v:set(5.4863138198853,10.999716758728,155.81025695801),28057,3010)
		AI:create("zombi_restr5",v:set(5.4863138198853,10.999716758728,155.81025695801),28057,3010)
    Actor:give_info_portion("lim_spawn_restr2")
    end
end

function spawn_zombi_restr3()
	local v = vector()
    if level.name()=="limansk" and not Actor:has_info("lim_spawn_restr3") then 
		AI:create("zombi_restr1",v:set(5.4863138198853,10.999716758728,155.81025695801),28057,3010)
		AI:create("zombi_restr2",v:set(5.4863138198853,10.999716758728,155.81025695801),28057,3010)
		AI:create("zombi_restr3",v:set(5.4863138198853,10.999716758728,155.81025695801),28057,3010)
		AI:create("zombi_restr4",v:set(5.4863138198853,10.999716758728,155.81025695801),28057,3010)
		AI:create("zombi_restr5",v:set(5.4863138198853,10.999716758728,155.81025695801),28057,3010)
    Actor:give_info_portion("lim_spawn_restr3")
    end
end

function spawn_glushitel()
local obj = AI:create_free("glushitel",vector():set(-6.2885980606079,13.082293510437,195.33584594727),21733,3010)
end

function drop_actor(obj)
   if obj:section() == "glushitel" and Actor:has_info("borman_glushitel_restr") then
      Actor:give_info_portion("borman_glushitel_have")
   end 
end

function start(first_speaker, second_speaker)
--	local actor, trader
--	if Actor and Actor:id() == first_speaker:id() then
--		actor = first_speaker
--		trader = second_speaker
--	else
--		actor = second_speaker
--		trader = first_speaker
--	end
--	dialogs.relocate_item_section(trader, "glushitel", "out")
	inventory.out_items("glushitel", 1)
	local gtime = amk.game_minutes()
	amk.save_variable("glushitel_reload", gtime + 300)
--	clear_glushitel(actor)
end

function is_reload_ready(first_speaker, second_speaker)
	local gtime = amk.game_minutes()
	local ftime = amk.load_variable("glushitel_reload", 0)
	if gtime >= ftime then
		return true
	else
		return false
	end
end

function is_reload_not_ready(first_speaker, second_speaker)
	local gtime = amk.game_minutes()
	local ftime = amk.load_variable("glushitel_reload", 0)
	if gtime <= ftime then
		return true
	else
		return false
	end
end

function clear_glushitel(person)
	if person and person:object("glushitel") then
		del_obj_by_id(person:object("glushitel"):id())
	end
end

function clear_reload(first_speaker, second_speaker)
	amk.del_variable("glushitel_reload")
end

function start_kalmyak(first_speaker, second_speaker)
	local gtime = amk.game_minutes()
	amk.save_variable("kalmyak_lekar", gtime + math.random(11, 12) * 60)
end

function is_lekar_ready(first_speaker, second_speaker)
	local gtime = amk.game_minutes()
	local ftime = amk.load_variable("kalmyak_lekar", 0)
	if gtime >= ftime then
		return true
	else
		return false
	end
end

function is_lekar_not_ready(first_speaker, second_speaker)
	local gtime = amk.game_minutes()
	local ftime = amk.load_variable("kalmyak_lekar", 0)
	if gtime <= ftime then
		return true
	else
		return false
	end
end


function clear_lekar(first_speaker, second_speaker)
	amk.del_variable("kalmyak_lekar")
end


function set_xalyava()
	local obj = AI:object("esc_xalyava") 
	if obj then
		amk.add_spot_on_map(obj.id,"crlc_big","Место сделки")
	end
end

-- Нейтралим наймов с военными, чтобы не мешали
function begin_xalyava()
	local obj
	for a=1,8 do
		obj = AI:object("xalyava_naem"..a)
		if obj then
			relation_registry.set_community_goodwill("military", obj.id, 5000)
		--	get_console():execute("load ~~~ name: "..obj:name())
		end
	end
end

function remove_xalyava()
	local obj = AI:object("esc_xalyava")
	if obj then
		level.map_remove_object_spot(obj.id,"crlc_big")
	end
end


function speech_xalyava()
news_manager.send_tip("speech_xalyava",nil,nil,20000)    
end
-----------------------------turell---------------------------------------------------
function test_turrel()
	local info_name = "info_turret_escape_spawn"
   if (xr_logic.pstor_retrieve(Actor, info_name, false) == false) and 
   AI and (level.name() == "l01_escape") then
   xr_logic.pstor_store(Actor, info_name, true)
   dbglog("test_turrel(%s)",info_name)
turret_mgun.create_turret("turret_nato",level_name, vector():set(-201.338,-20.307,-147.54),"bandit", "", 200,100) end
end

function turrel()
	if AI then
       turret_mgun.create_turret("turret_army", "l01_escape", vector():set(-191.44,-18.49,-151.513),62977,46, "military", "esc_blokpost", 120, 90)
   end
end

function alife_dir(section,position,levelvertex,gamevertex,direction)
	local obj = AI:create(section,position,levelvertex,gamevertex)
	amk.add_spot_on_map(obj.id,"crlc_big","TRENOGA")
end

function lim_turrel()
    if not Actor:has_info("lim_spawn_lim_turrel") then 
alife_dir("trenoga_lim1",vector():set(61.824359893799,14.957581520081,246.21290588379),58766,3021,
          vector():set(0.17578122019768,0,0.98442924022675))
    Actor:give_info_portion("lim_spawn_lim_turrel")
    end
end

-----------------------------turell---------------------------------------------------

function drink_vodka()
	Actor:eat(Actor:object("vodka"))
end

function rabi_mad()
    local obj = AI:object("rabi")
	if obj then
		local npc = level.object_by_id(obj.id)
		if npc then
			npc:set_character_community("zombied", 0, 0)
		end
	end
end

function spawn_prohod_lim()
    if not Actor:has_info("info_spawn_lim_teleport") then 
		AI:create("lim_zone_teleport1",vector():set(40.821,11.0686,215.0173),48310,3020)
		AI:create("lim_zone_teleport2",vector():set(49.1074,2.948,300.0252),51380,3022)
		Actor:give_info_portion("info_spawn_lim_teleport")
	end
end


function del_lim()
    if level.name() == "limansk" and not Actor:has_info("info_del_lim_teleport") then 
		local obj_id = xr_logic.pstor_retrieve(Actor, "lim_zone_teleport1", -1, true)
		if not bind_mteleport.del_teleport("lim_zone_teleport1") then
			log("! [braad_test.del_lim]: lim_zone_teleport1 not found")
		end
		obj_id = xr_logic.pstor_retrieve(Actor, "lim_zone_teleport2", -1, true)
		if not bind_mteleport.del_teleport("lim_zone_teleport2") then
			log("! [braad_test.del_lim]: lim_zone_teleport2 not found")
		end
		Actor:give_info_portion("info_del_lim_teleport")
		-- доставим Кота в Госпиталь
		local obj = AI:story_object( story_ids.kot )
		if obj then
			local sm = AI:object( "hos_stalker" )
			if sm then
				AI:teleport_object( "", sm.position, sm.m_level_vertex_id, sm.m_game_vertex_id, obj.id )
			end
		end
		if not has_alife_info("warlab_stalker_oso_spawn") then
			news_manager.send_tip("del_lim_remmind_sms",15,nil,30000)
		end
	end
end 

function speech_teleport()
	news_manager.send_tip("speech_teleport",15,nil,30000)  
	Actor:give_info_portion("nebo_kurier_first")  
end

function kurier_dead()
    local obj = AI:object("nebo_kurier")
	if obj then
		local npc = level.object_by_id(obj.id)
		if npc then
			npc:kill(npc)
		end
	end
end

function kurier_health(obj)
    if Actor and Actor.health then
		if Actor.health < 1 then
		    Actor.health = Actor.health + 0.6
		end
	end  
end 

function actor_sleep_in_do()
sleep_manager.main(5+amk.load_variable("gg_need_sleep_nrg",0))
end

function eat_aptec()
	Actor:eat(Actor:object("medkit_scientic"))
end

function eat_antirad()
	Actor:eat(Actor:object("antirad"))
end

function doctor_dal()
inventory.give_items("medkit_scientic",1)
inventory.give_items("antirad",1)
end

function spawn_prohod_hos()
    if not Actor:has_info("info_spawn_hos_teleport") then 
		local v = vector()
		AI:create("hos_zone_teleport1",v:set(-86.273,25.844,674.829),3736,3044)
		AI:create("hos_zone_teleport2",v:set(-104.113,34.25,615.65),127,3028)
		AI:create("hos_zone_teleport3",v:set(-92.780,33.493,719.939),1801,3034)
		Actor:give_info_portion("info_spawn_hos_teleport")
	end
end

--function black_doctor_init_dialod()
   --local black_doctor = level_object_by_sid(story_ids.black_doctor)
   --Actor:run_talk_dialog(black_doctor)
--end

--function actor_sleep_black_doctor()
--sleep_manager.main(5+amk.load_variable("gg_need_sleep_nrg",0))
--bl_doc_tele( actor, npc)
--end

--function bl_doc_tele( actor, npc)
   --level.add_pp_effector ("blink.ppe", 234, false)       
   --level.add_pp_effector("teleport.ppe", 2006, false) 
   --Actor:set_actor_position(patrol("black_vozvrat_walk"):point(0))
   --local dir = patrol("black_vozvrat_look"):point(0):sub(patrol("black_vozvrat_look"):point(0))
   --Actor:set_actor_direction(-dir:getH())
   --xr_effects.enable_ui(Actor, nil)
--end

function delete_black_doctor()
  local se_obj = AI:object("black_doctor")
  if se_obj then
    AI:release(se_obj, true)
  end
end	

function test_kolmogor()
--local npc,obj
--    for i=0,65534 do
--       npc = level.object_by_id(i)
--        if npc and npc:name() == "nebo_kurier" and npc.health >= 0,5 then
--           npc.health = -0.5 --здесь у НПЦ отнимется 0.5 здоровья
--        end
--    end
end 

function spawn_shadowman()
local obj = AI:create_free("shadowman_ruk",vector():set(23.914667129517,3.9985284805298,26.488586425781),80890,3263)
end


function speech_shadowman()
news_manager.send_tip("speech_shadowman",nil,nil,30000)  
end

function shadowman_red_spn1() 
	local v = vector()
    if not Actor:has_info("shadowman_red_spn1") then
	AI:create("boar_normal_sh1",v:set(-9.1997413635254,0.043906480073929,-36.546310424805),60673,3290)
	AI:create("boar_normal_sh2",v:set(-9.1997413635254,0.043906480073929,-36.546310424805),60673,3290)
	AI:create("boar_normal_sh3",v:set(-9.1997413635254,0.043906480073929,-36.546310424805),60673,3290)
	AI:create("boar_normal_sh4",v:set(-9.1997413635254,0.043906480073929,-36.546310424805),60673,3290)
	AI:create("boar_normal_sh5",v:set(-9.1997413635254,0.043906480073929,-36.546310424805),60673,3290)
	AI:create("snork_normal_sh1",v:set(-22.176950454712,0.78433322906494,18.689910888672),49490,3263)
	AI:create("snork_normal_sh2",v:set(-22.176950454712,0.78433322906494,18.689910888672),49490,3263)
	AI:create("snork_normal_sh3",v:set(-22.176950454712,0.78433322906494,18.689910888672),49490,3263)
	AI:create("snork_normal_sh4",v:set(-22.176950454712,0.78433322906494,18.689910888672),49490,3263)
	AI:create("snork_normal_sh5",v:set(-22.176950454712,0.78433322906494,18.689910888672),49490,3263)
    Actor:give_info_portion("shadowman_red_spn1") 
	end
end

function shadowman_red_spn2() 
	local v = vector()
    if not Actor:has_info("shadowman_red_spn2") then
	AI:create("boar_normal_sh6",v:set(-9.1997413635254,0.043906480073929,-36.546310424805),60673,3290)
	AI:create("boar_normal_sh7",v:set(-9.1997413635254,0.043906480073929,-36.546310424805),60673,3290)
	AI:create("boar_normal_sh8",v:set(-9.1997413635254,0.043906480073929,-36.546310424805),60673,3290)
	AI:create("boar_normal_sh9",v:set(-9.1997413635254,0.043906480073929,-36.546310424805),60673,3290)
	AI:create("boar_normal_sh10",v:set(-9.1997413635254,0.043906480073929,-36.546310424805),60673,3290)
	AI:create("snork_normal_sh6",v:set(-22.176950454712,0.78433322906494,18.689910888672),49490,3263)
	AI:create("snork_normal_sh7",v:set(-22.176950454712,0.78433322906494,18.689910888672),49490,3263)
	AI:create("snork_normal_sh8",v:set(-22.176950454712,0.78433322906494,18.689910888672),49490,3263)
	AI:create("snork_normal_sh9",v:set(-22.176950454712,0.78433322906494,18.689910888672),49490,3263)
	AI:create("snork_normal_sh10",v:set(-22.176950454712,0.78433322906494,18.689910888672),49490,3263)
    Actor:give_info_portion("shadowman_red_spn2") 
	end
end

function shadowman_red_spn3() 
	local v = vector()
    if not Actor:has_info("shadowman_red_spn3") then
	AI:create("boar_normal_sh11",v:set(-9.1997413635254,0.043906480073929,-36.546310424805),60673,3290)
	AI:create("boar_normal_sh12",v:set(-9.1997413635254,0.043906480073929,-36.546310424805),60673,3290)
	AI:create("boar_normal_sh13",v:set(-9.1997413635254,0.043906480073929,-36.546310424805),60673,3290)
	AI:create("boar_normal_sh14",v:set(-9.1997413635254,0.043906480073929,-36.546310424805),60673,3290)
	AI:create("boar_normal_sh15",v:set(-9.1997413635254,0.043906480073929,-36.546310424805),60673,3290)
	AI:create("snork_normal_sh11",v:set(-22.176950454712,0.78433322906494,18.689910888672),49490,3263)
	AI:create("snork_normal_sh12",v:set(-22.176950454712,0.78433322906494,18.689910888672),49490,3263)
	AI:create("snork_normal_sh13",v:set(-22.176950454712,0.78433322906494,18.689910888672),49490,3263)
	AI:create("snork_normal_sh14",v:set(-22.176950454712,0.78433322906494,18.689910888672),49490,3263)
	AI:create("snork_normal_sh15",v:set(-22.176950454712,0.78433322906494,18.689910888672),49490,3263)
    Actor:give_info_portion("shadowman_red_spn3") 
	end
end

--------------------------------------------------------ГРИБЫ---------------------------------------------------------------
function grib_respawn()
	local timeh = level.get_time_hours()
	local times = level.get_time_minutes()
	if (timeh == 22 and times < 10)  then
		if Actor:dont_has_info("info_respawn_grib") then
			del_mushroom()
			spawn_grib()
			Actor:give_info_portion("info_respawn_grib")
		end
	elseif (timeh == 23 and times < 10) then
		if Actor:has_info("info_respawn_grib") then
			Actor:disable_info_portion("info_respawn_grib")
		end
	end
end	

function spawn_grib()
	local grib_points={
		{position={x=-284.4497,y=-18.2044,z=193.8524},gv=1789,lv=56319}, ---military
		{position={x=-355.6864,y=-3.100588,z=151.18237},gv=1793,lv=4240},  ---military
		{position={x=-269.84619,y=-11.2427,z=-71.7646},gv=10,lv=3200},  -- escape
		{position={x=-201.4213,y=-7.3733,z=-45.88},gv=68,lv=51172},  -- escape
		{position={x=-174.16,y=-3.36,z=-13.652},gv=69,lv=76187},  -- escape
		{position={x=-100.404,y=3.5878,z=77.947},gv=81,lv=160506},  -- escape
		{position={x=-52.189,y=4.272,z=250.807},gv=173,lv=227393},  -- escape
		{position={x=32.6452,y=1.899,z=383.063},gv=173,lv=227393},  -- escape
		{position={x=465.1087,y=1.222,z=-178.309},gv=3554,lv=451363},  -- marsh
		{position={x=399.41339,y=0.3934,z=-169.761},gv=3547,lv=402755},  -- marsh
		{position={x=342.558,y=8.3023,z=-108.475},gv=3533,lv=357939},  -- marsh
		{position={x=272.111,y=0.548,z=-43.373},gv=3526,lv=310746},  -- marsh
		{position={x=291.1808,y=0.548,z=36.855},gv=3527,lv=325573},  -- marsh
		{position={x=367.14099,y=1.8678,z=161.486},gv=3539,lv=376678},  -- marsh
		{position={x=387.748,y=3.5888,z=287.368},gv=3540,lv=393779},  -- marsh
		{position={x=297.117,y=1.696,z=288.828},gv=3529,lv=329916},  -- marsh
		{position={x=205.688,y=0.727,z=285.857},gv=3499,lv=262506},  -- marsh
		{position={x=173.0422,y=1.435,z=355.277},gv=3491,lv=238394},  -- marsh
		{position={x=214.362,y=0.6504,z=412.3115},gv=3488,lv=268283},  -- marsh
		{position={x=217.9902,y=7.394,z=516.679},gv=3485,lv=270887},  -- marsh
		{position={x=142.997,y=0.535,z=-248.0656},gv=684,lv=374191},  -- agroprom
		{position={x=70.2182,y=-0.972,z=-234.066},gv=433,lv=305517},  -- agroprom
		{position={x=63.0578,y=-1.14418,z=-149.503},gv=641,lv=299132},  -- agroprom
		{position={x=-74.09,y=0.466,z=58.15},gv=528,lv=166791},  -- agroprom
		{position={x=-29.9080,y=2.2372,z=103.523},gv=588,lv=210656},  -- agroprom
		{position={x=12.6909,y=2.3448,z=92.3616},gv=476,lv=252867},  -- agroprom
		{position={x=81.1135,y=16.0997,z=132.682},gv=508,lv=316629},  -- agroprom
		{position={x=106.297,y=13.690,z=125.696},gv=508,lv=340894},  -- agroprom
		{position={x=123.6996,y=10.369,z=165.9576},gv=504,lv=357641},  -- agroprom
		{position={x=85.8348,y=10.5479,z=188.9713},gv=686,lv=321367},  -- agroprom
		{position={x=319.6008,y=-47.9699,z=-195.063},gv=2082,lv=76027},  -- radar
		{position={x=316.0666,y=-48.0291,z=-133.312},gv=2092,lv=74170},  -- radar
		{position={x=307.758,y=-50.2595,z=-245.0376},gv=2078,lv=69567},  -- radar
		{position={x=308.800,y=-49.135,z=-315.755},gv=2073,lv=69851},  -- radar
		{position={x=372.8744,y=-51.6907,z=-344.82},gv=2068,lv=105583},  -- radar
		{position={x=419.1445,y=-49.5586,z=-310.8674},gv=2066,lv=133749},  -- radar
		{position={x=352.3292,y=-47.796,z=-115.3638},gv=2093,lv=94080},  -- radar
		{position={x=395.896,y=-52.4274,z=-92.122},gv=2036,lv=122268},  -- radar
		{position={x=440.01821,y=-49.07274,z=-55.515},gv=2038,lv=143343},  -- radar
		{position={x=380.7494,y=-48.7936,z=-231.103},gv=2102,lv=111292},  -- radar
		{position={x=422.2033,y=-55.075,z=-259.047},gv=2106,lv=135222},  -- radar
		{position={x=466.6009,y=-48.3848,z=-219.513},gv=2059,lv=153140},  -- radar
		{position={x=487.1975,y=-49.9339,z=-185.659},gv=2056,lv=160751},  -- radar
		{position={x=109.0610,y=-0.6083,z=23.1811},gv=909,lv=305618},  -- darkvalley
		{position={x=161.0832,y=6.02887,z=-9.5908},gv=916,lv=361563},  -- darkvalley
		{position={x=177.67697,y=0.0723,z=-80.587},gv=919,lv=378637},  -- darkvalley
		{position={x=140.8797,y=0.14625,z=-210.068},gv=927,lv=338700},  -- darkvalley
		{position={x=174.1159,y=8.4689,z=-420.6929},gv=941,lv=374683},  -- darkvalley
		{position={x=156.46878,y=4.2590,z=-467.606},gv=941,lv=356378},  -- darkvalley
		{position={x=93.6686,y=1.662,z=-469.5579},gv=949,lv=288081},  -- darkvalley
		{position={x=18.3328,y=1.2652,z=-453.902},gv=952,lv=195541},  -- darkvalley
		{position={x=-76.9337,y=-0.73359,z=-395.521},gv=839,lv=83950},  -- darkvalley
		{position={x=-129.5605,y=0.86102,z=-344.974},gv=845,lv=28054},  -- darkvalley
		{position={x=-131.9178,y=-0.8644,z=-276.884},gv=848,lv=26173},  -- darkvalley
		{position={x=203.9575,y=4.3727,z=203.835},gv=2885,lv=351940},  -- puzir
		{position={x=182.1907,y=14.3156,z=168.909},gv=2885,lv=335133},  -- puzir
		{position={x=106.863,y=4.8457,z=141.5648},gv=2885,lv=274853},  -- puzir
		{position={x=60.0144,y=-0.001477,z=108.286},gv=2885,lv=238003},  -- puzir
		{position={x=46.0673,y=-0.0032,z=57.7905},gv=2885,lv=226374},  -- puzir
		{position={x=-9.9488,y=11.51488,z=-12.7767},gv=2882,lv=180062},  -- puzir
		{position={x=54.212,y=8.6488,z=-83.8907},gv=2884,lv=232601},  -- puzir
		{position={x=99.8832,y=0.12282,z=-94.3717},gv=2884,lv=269168},  -- puzir
		{position={x=102.5485,y=-0.00115,z=-136.3648},gv=2884,lv=270778},  -- puzir
		{position={x=-310.1566,y=-8.9571,z=30.3318},gv=2889,lv=338006},  -- aver
		{position={x=-249.7383,y=-27.5183,z=127.1921},gv=2893,lv=441876},  -- aver
		{position={x=-254.2902,y=11.043003,z=-3.8713},gv=2893,lv=434616},  -- aver
		{position={x=-165.4225,y=26.00623,z=6.20755},gv=2894,lv=585369},  -- aver
		{position={x=-94.820632,y=17.82067,z=39.2792},gv=2894,lv=708197},  -- aver
		{position={x=4.8559,y=-45.3861,z=111.9942},gv=2895,lv=873123},  -- aver
		{position={x=43.3978,y=-39.5448,z=166.2731},gv=2895,lv=943483},  -- aver
		{position={x=109.7717,y=-40.9248,z=260.0759},gv=2899,lv=1062136},  -- aver
		{position={x=217.1144,y=1.8175,z=186.544},gv=2901,lv=1250174},  -- aver
		{position={x=-27.02234,y=-0.8796,z=-294.626},gv=3274,lv=44437},  -- red_forest
		{position={x=17.7548,y=1.2997,z=-98.825},gv=3288,lv=77292},  -- red_forest
		{position={x=-4.83979,y=0.2346,z=-155.3056},gv=3282,lv=64796},  -- red_forest
		{position={x=7.52476,y=-2.52619,z=-265.6032},gv=3291,lv=71635},  -- red_forest
		{position={x=100.37268,y=-1.5567,z=-290.506},gv=3300,lv=101983},  -- red_forest
		{position={x=177.61671,y=-1.304368,z=-290.01339},gv=3314,lv=118739},  -- red_forest
		{position={x=179.43177,y=-1.16113,z=-46.8759},gv=3317,lv=119698},  -- red_forest
		{position={x=193.84136,y=-4.73345,z=10.9854},gv=3317,lv=126615},  -- red_forest
		{position={x=215.8037,y=1.2874,z=102.9057},gv=3319,lv=137614},  -- red_forest
		{position={x=194.8108,y=-1.7354,z=62.4528},gv=3318,lv=127327}  -- red_forest
	}

	local n = math.random(23,  33)
	for i = 1,n do
	    local a = table.remove( grib_points, math.random(#grib_points) )
		AI:create_free("mushroom", vector():set(a.position.x, a.position.y, a.position.z), a.lv, a.gv)
	end
end

function del_mushroom()
	local actorpos = Actor:position()
	local actor_lvl = level.name()
	local obj, lvl
	for a=1,65534 do
		obj=AI:object(a)
	    if obj and obj:section_name() == "mushroom"
			and obj.parent_id == 65535
		then
			lvl = object_level_name(obj)
			if lvl ~= actor_lvl or obj.position:distance_to(actorpos) > 100 then
				AI:release(obj,true)
			end
	    end
	end
end

function check_grib()
	local grib = amk.load_table("mux")
	local game_hours = amk.game_hours()
	local grib_time = 24
	local obj, sobj, condition
	local del = {}

	for id, h in pairs(grib) do
		sobj = AI:object(id)
		if sobj == nil or sobj:section_name() ~= "mushroom" then
			table.insert(del, id)
		else
			if (game_hours - h) >= grib_time then
				AI:release(sobj, true)
				table.insert(del, id)
			else
				condition = (grib_time - game_hours + h)/grib_time
				netpk:modify(sobj, {condition = condition}, netpk.fState)
				obj = level.object_by_id(id)
				if obj then
					obj:set_condition(condition)
				end
			end
		end
	end

	for i, v in ipairs(del) do
		grib[v] = nil
	end

	if table.size(grib) == 0 then
		amk.del_variable("mux")
		return
	end

	amk.save_table("mux", grib)
	start_game_timer("mux", 0, 1, 0)
end
--------------------------------------------------------ГРИБЫ---------------------------------------------------------------

function set_green()
	local obj = AI:object("green_forest") 
	if obj then
		amk.add_spot_on_map(obj.id,"crlc_big","Охотники")
	end
end

function remove_green()
	local obj = AI:object("green_forest")
	if obj then
		level.map_remove_object_spot(obj.id,"crlc_big")
	end
end

function grab_set1(actor, npc)
    xr_gulag.setGulagEnemy ("grab_mitya_marsh", actor)
end

function grab_set11()
	local npc, se_npc
	for i = 1, 5 do
		se_npc = AI:object("grab_stal"..i)
		if se_npc then
			npc = level.object_by_id(se_npc.id)
			if npc then npc:set_character_community("bandit", 0, 0) end
		end
	end
	Actor:give_info_portion("klyak_forest_doc_scene")
end

function grab_set2()
end

function grab_set3()
end

function grab_set4()
end

function grab_set5()
end

function mitya_kill()
	local se_npc = AI:object("mitya")
	if se_npc then
		npc = level.object_by_id(se_npc.id)
		if npc then
			npc:kill(npc)
			local snd_obj = xr_sound.get_safe_sound_object([[weapons\colt\colt1911_shoot]])
			snd_obj:play_no_feedback(Actor, sound_object.s2d, 0, vector(), 1.0) 
		end
	end
end

function mitya_sms()
news_manager.send_tip("mitya_sms",nil,nil,30000)  
Actor:give_info_portion("mitya_dead_sms_sidor")
end

function spawn_green()
local obj = AI:create_free("green_ruk",vector():set(228.335338,-7.298178,67.8218),143611,3319)
end

function clear_actor(npc)
    Actor:iterate_inventory(__del_item, Actor)
	friendactorstalker()
end

function __del_item(npc, item)
    local section = item:section()

    if protected_items.actor_items_keep(section) == true then
        return false
    end
--    npc:mark_item_dropped(item)
   del_obj_by_id(item:id())
end

function friendactorstalker()
relation_registry.set_community_goodwill ("stalker", "actor", 400)
relation_registry.set_community_goodwill ("green", "actor", 100)
end

function actor_has_money_50000()
  return Actor:money()>=50000
end

function give_money_50000(t1,t2)
  local npc=t1
  if npc:id()==Actor:id() then
    npc=t2
  end
  dialogs.relocate_money(npc,50000,"out")
end

function actor_has_money_10000()
  return Actor:money()>=10000
end

function give_money_10000(t1,t2)
  local npc=t1
  if npc:id()==Actor:id() then
    npc=t2
  end
  dialogs.relocate_money(npc,10000,"out")
end

function speech_test()
--Actor:give_info_portion("mitya_dead_sms_sidor")
end

function del_kot_marsh()
	local se_obj = AI:object("kot")
	if se_obj then
		Actor:give_info_portion("bkot_spawn")
	end
end	

function spawn_zombi_forest() 
	local v = vector()
    if not Actor:has_info("info_contr_spawn") then  
		AI:create_free("zombie_beee",v:set(-139.66778564453,-6.2611632347107,-57.55558013916),7320,3240)
		AI:create_free("zombie_beee",v:set(-139.66778564453,-6.2611632347107,-57.55558013916),7320,3240)
		AI:create_free("zombie_beee",v:set(-139.66778564453,-6.2611632347107,-57.55558013916),7320,3240)
		AI:create_free("zombie_beee",v:set(-166.70251464844,2.2021112442017,-43.638122558594),4559,3240)
		AI:create_free("zombie_beee",v:set(-166.70251464844,2.2021112442017,-43.638122558594),4559,3240)
		AI:create_free("zombie_beee",v:set(-166.70251464844,2.2021112442017,-43.638122558594),4559,3240)
		AI:create_free("zombie_beee",v:set(-150.7121887207,2.2457160949707,-32.752670288086),6685,3240)
		AI:create_free("zombie_beee",v:set(-150.7121887207,2.2457160949707,-32.752670288086),6685,3240)
		AI:create_free("zombie_beee",v:set(-150.7121887207,2.2457160949707,-32.752670288086),6685,3240)
    Actor:give_info_portion("info_contr_spawn")
   end	
end

function spawn_denis()
	local v = vector()
	AI:create("killer_denis1",v:set(-154.03199768066,2.179135799408,-29.984512329102),6074,3240)
	AI:create("killer_denis2",v:set(-168.93768310547,2.1791498661041,-25.87652015686),4320,3240)
	AI:create("killer_denis3",v:set(-153.88787841797,2.1781146526337,-38.099498748779),6064,3240)
	AI:create("killer_denis4",v:set(-150.86233520508,2.3751785755157,-45.025329589844),6540,3240)
	AI:create("killer_denis5",v:set(-157.27326965332,2.2941052913666,-50.785617828369),5652,3240)
	AI:create("killer_denis6",v:set(-115.58462524414,2.3102631568909,-55.957679748535),9854,3240)
	AI:create("killer_denis7",v:set(-112.0415725708,2.3187811374664,-54.043090820313),10286,3240)
	AI:create("killer_denis8",v:set(-103.67635345459,2.3016946315765,-56.758888244629),11667,3250)
	AI:create("killer_denis9",v:set(-164.65612792969,2.2453947067261,-42.774707794189),4821,3240)
end


function set_tunel()
	local obj = AI:object("contr_forest_restr") 
	if obj then
		amk.add_spot_on_map(obj.id,"crlc_big","Заброшенная шахта")
	end
end

function remove_tunel()
	local obj = AI:object("contr_forest_restr")
	if obj then
		level.map_remove_object_spot(obj.id,"crlc_big")
	end
end

function spawn_ag_restr()
	netpk:create_restrictor(
		vector():set(-163.7038269043,0.33191874623299,-299.45358276367),73168,447,
		"[logic]\ncfg = scripts\\new\\nebo\\ag_restr.ltx",
		60.0
	)
end

--function spawn_blizn_krug_dead() 
--local obj = AI:create("mono_dead_doc",vector():set(245.210,4.360,55.923),292294,3516)
--end 

function gener_na_boloto_vert()
  -- вертушечный переход1
	if (not has_alife_info(	"gener_na_boloto" )) then
		level_changers.create_teleport_on_actor(
			vector():set(237.60340881348,26.244289398193,621.69653320313),
			208062, 3484
		)
		Actor:give_info_portion("gener_na_boloto")
	end
end

function boloto_na_gener_vert()
  -- вертушечный переход2
	if (not has_alife_info(	"boloto_na_gener" )) then
		level_changers.create_teleport_on_actor(
			vector():set(-102.54923248291,37.5275001525879,-466.853424072266),
			216969, 3096
		)
		Actor:give_info_portion("boloto_na_gener")
	end
end

function sarcofag_derevny()
  -- фото-переход
	if (not has_alife_info(	"sarcofag_derevny" )) then
		level_changers.create_teleport_on_actor(
			vector():set(73.263496398926,2.371077299118,-67.258171081543),
			35739, 3335
		)
		Actor:give_info_portion("sarcofag_derevny")
	end
end


function control_monol_svalka()
  -- молния-переход
	if (not has_alife_info("control_monol_svalka" )) then
		level_changers.create_teleport_on_actor(
			vector():set(-57.10103225708,17.666576385498,17.847587585449),
			137004, 319
		)
		Actor:give_info_portion("control_monol_svalka")
	end
end

function saxar_perexod()
  -- Сахар-переход
	if (not has_alife_info("saxar_perexod" )) then
		spawn_restrictor.saxar_perexod_sr()
		Actor:give_info_portion("saxar_perexod")
	end
end

function mozg_yantar()
  -- мозг-переход
	if (not has_alife_info("mozg_yantar" )) then
		level_changers.create_teleport_on_actor(
			vector():set(45.247611999512,9.7975540161133,-59.355667114258),
			62547, 1505
		)
		Actor:give_info_portion("mozg_yantar")
	end
end

function BitvaKL_rukzak() 
	local obj = AI:create_free("bitvakl_ruk",vector():set(201.8493347168,-2.1620719432831,-79.324325561523),129996,3316)
end

function checking_taken_item60(obj)
  if obj:section()=="bitvakl_pda" then 
    if not has_alife_info("bitvakl_xvatit_spawn") then 
	  Actor:give_info_portion("bitvakl_xvatit_spawn")
	  -- Звуковое сопровождение
	  local snd_obj = xr_sound.get_safe_sound_object([[monsters\controller\controller_script_attack_0]])
      snd_obj:play_no_feedback(Actor, sound_object.s2d, 0, vector(), 1.0)
	  
	  amk.drop_item(Actor,obj)
	  amk.remove_item(obj)

	  this.bitvakl_spawn()
	  spawn_restrictor.bitvakl_sr1()
	end
  end
end

local klpoints={
    {
        position={x=179.3902130127,y=-2.5856237411499,z=-67.094398498535},
        gv=3316,
        lv=119687
        },
    {
        position={x=232.40454101563,y=-1.7396693229675,z=-57.155769348145},
        gv=3316,
        lv=145476
        },
    {
        position={x=261.00622558594,y=-1.1188377141953,z=-96.045272827148},
        gv=3315,
        lv=156751
        },
    {
        position={x=237.57501220703,y=-4.7059030532837,z=-143.82832336426},
        gv=3315,
        lv=147314
        },
    {
        position={x=198.4962310791,y=-7.1063375473022,z=-139.28036499023},
        gv=3315,
        lv=129206
        },
    {
        position={x=200.56958007813,y=-6.1743240356445,z=-40.731639862061},
        gv=3317,
        lv=130430
        },
    {
        position={x=171.90243530273,y=-3.933501958847,z=-113.88834381104},
        gv=3315,
        lv=116166
        }
}
function bitvakl_spawn()
    local a, se_obj
	news_manager.send_tip("bitvakl_spawn_sms",nil,nil,30000)    
	se_obj = AI:create_free("af_blood_green",vector():set(220.36111450195,-11.267262458801,-101.5218963623),138102,3315)
	for i=1,table.getn(klpoints) do
		a = klpoints[i]
		se_obj = AI:create_free("m_controller_normal", vector():set(a.position.x,a.position.y,a.position.z), a.lv, a.gv)
		for i=1,1 do
			se_obj = AI:create_free("zombie_normal", vector():set(a.position.x,a.position.y,a.position.z), a.lv, a.gv)
			se_obj = AI:create_free("zombie_hell10", vector():set(a.position.x,a.position.y,a.position.z), a.lv, a.gv)
			se_obj = AI:create_free("zombie_hell11", vector():set(a.position.x,a.position.y,a.position.z), a.lv, a.gv)
			se_obj = AI:create_free("zombie_hell12", vector():set(a.position.x,a.position.y,a.position.z), a.lv, a.gv)
			se_obj = AI:create_free("zombie_hell13", vector():set(a.position.x,a.position.y,a.position.z), a.lv, a.gv)
			se_obj = AI:create_free("zombie_immortal", vector():set(a.position.x,a.position.y,a.position.z), a.lv, a.gv)
		end
	end
end

function lima_dead_city()
  	if (not has_alife_info("lima_dead_city" )) then
		level_changers.create_teleport_on_actor(
			vector():set(-239.38876342773,-2.0321259498596,300.58901977539),
			100962,
			3593,
			vector():set(0,-2,0)
		)
		local news_text = "%c[gray2]Новый путь!\\n%c[white]Лиманск >> Мёртвый Город"
		Actor:give_game_news(news_text, "ui\\ui_iconsTotal", Frect():set(913,752,83,47), 0, 10000)
	end
end

function dead_city_atpeshka()
  	if (not has_alife_info("dead_city_atpeshka" )) then
		level_changers.create_level_changer("lc_dead_city_to_atp_timing")
        Actor:give_info_portion("dead_city_atpeshka")
		Actor:give_info_portion("spawn_atp_presledovateli")
    end
end

function gar_pri1()
      -- создается переход с НЗ в Восточную Припять - не используется.
	if (not has_alife_info(	"info_gar_pri1" )) then
		level_changers.create_level_changer("lc_aver_to_east_pripyat")
        Actor:give_info_portion("info_gar_pri1")
	end
end

function yan_pri1()
      -- создается переход с Янтаря в Восточную Припять
	if (not has_alife_info(	"info_yan_pri1" )) then
		level_changers.create_level_changer("lc_yantar_to_east_pripyat")
        Actor:give_info_portion("info_yan_pri1")
	end
end

function pri1_forest()
      -- создается переход с Восточной Припяти в Забытый Лес
	if (not has_alife_info(	"info_pri1_forest" )) then
		level_changers.create_level_changer("lc_east_pripyat_to_aver")
		Actor:give_info_portion("info_pri1_forest")
	end
end

function pri1_lab()
      -- создается переход с Восточной Припяти в X-8
	if (not has_alife_info(	"info_pri1_lab" )) then
		level_changers.create_level_changer("lc_east_pripyat_to_labx8")
        Actor:give_info_portion("info_pri1_lab")
	end
end

function lab_under()
      -- создается переход с Х8 в Путепровод Припять-1.
	if (not has_alife_info(	"info_lab_under" )) then
		level_changers.create_level_changer("lc_labx8_to_jup_underground")
        Actor:give_info_portion("info_lab_under")
	end
end

function under_pri1()
      -- создается переход из Путепровода Припять-1 в Восточную Припять.
	if (not has_alife_info(	"info_under_pri1" )) then
		level_changers.create_level_changer("lc_jup_underground_to_east_pripyat")
        Actor:give_info_portion("info_under_pri1")
	end
end

function pri1_jup()
      -- создается переход с Восточной Припяти на Юпитер.
	if (not has_alife_info(	"info_pri1_jup" )) then
		level_changers.create_level_changer("lc_east_pripyat_to_jupiter")
        Actor:give_info_portion("info_pri1_jup")
	end
end

function jup_under()
      -- создается переход с Юпитера в Путепровод Припять-1. 
	if (not has_alife_info(	"info_jup_under" )) then
		level_changers.create_level_changer("lc_jupiter_to_jup_underground")
        Actor:give_info_portion("info_jup_under")
	end
end

function pri1_zaton()
      -- создается переход с Восточной Припяти на Затон. 
	if (not has_alife_info(	"info_pri1_zaton" )) then
		level_changers.create_level_changer("lc_east_pripyat_to_zaton")
        Actor:give_info_portion("info_pri1_zaton")
	end
end

function sva_chaes2()
      -- создается переход со Свалки в Восточную Припять. И другие переходы.
	if (not has_alife_info(	"info_sva_chaes2" )) then
		level_changers.create_level_changer("lc_garbage_to_east_pripyat")
		level_changers.create_level_changer("lc_zaton_to_east_pripyat")
		level_changers.create_level_changer("lc_labx8_to_east_pripyat")
        Actor:give_info_portion("info_sva_chaes2")
	end
end

function pri_pri1()
	-- создается переход с Восточной Припяти в Центральную Припять.
	level_changers.create_level_changer("lc_east_pripyat_to_pripyat")
	-- создается переход с Центральной Припяти в Восточную Припять.
	level_changers.create_level_changer("lc_pripyat_to_east_pripyat")
end

function zat_jup()
      -- создается переход с Затона на Юпитер. 
	if (not has_alife_info(	"info_zat_jup" )) then
		level_changers.create_level_changer("lc_zaton_to_jupiter")
        Actor:give_info_portion("info_zat_jup")
	end
end

function jup_zat()
      -- создается переход с Юпитера в Затон. 
	if (not has_alife_info(	"info_jup_zat" )) then
		level_changers.create_level_changer("lc_jupiter_to_zaton")
        Actor:give_info_portion("info_jup_zat")
	end
end

function jup_pri()
	-- создается переход с Юпитера в Восточную Припять.
	if (not has_alife_info(	"info_jup_pri" )) then
		level_changers.create_level_changer("lc_jupiter_to_east_pripyat")
        Actor:give_info_portion("info_jup_pri")
	end
end

function lab_sar()
	-- создается переход с Лабиринта в Саркофаг. 
	level_changers.create_level_changer("lc_labrint_to_sarkofag")
end

function yan_aes1()
		-- создается переход с Янтаря на ЧАЭС1.
	level_changers.create_level_changer("lc_yantar_to_aes")
end

function kor_bar_pri()
	-- создается переход с Кордона в Бар.
	level_changers.create_level_changer("lc_escape_to_bar")
	-- создается переход с Бара на Кордон.
	level_changers.create_level_changer("lc_bar_to_escape")
	-- создается переход с Бара в Центральную Припять.
	level_changers.create_level_changer("lc_bar_to_pripyat")
	-- создается переход с Центральной Припяти в Бар.
	level_changers.create_level_changer("lc_pripyat_to_bar")
end


