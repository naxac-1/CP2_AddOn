-- -*- mode: lua; encoding: windows-1251 -*-
local zamok_code = game_options.ZamokUICode
local only_box = game_options.LockBoxOnly

local zamok_box = {}
local can_lock_visuals = {
	[ "equipment_box_01_case" ]             = true,
	[ "equipment_box_02_case" ]             = true,
	[ "equipment_box_03_case" ]             = true,
	[ "equipment_electric_box_01_case" ]    = true,
	[ "equipment_electric_box_02_case" ]    = true,
	[ "equipment_hatch_01_case" ]           = true,
	[ "equipment_hatch_02_case" ]           = true,
	[ "equipment_instrument_case_01_case" ] = true,
	[ "equipment_seif_01_case" ]            = true,
	[ "equipment_seif_02_case" ]            = true,
	[ "equipment_seif_03_case" ]            = true,
	[ "equipment_zaz968_case" ]             = true,
	[ "expl_dinamit" ]                      = true,
	[ "seif_01" ]                           = true
}

function restore(se_box, zamok_count, code)
	local box_id = se_box.id
	local t = zamok_box[box_id]
	if t == nil then
		t = {}
		zamok_box[box_id] = t
		if zamok_code then
			if code then
				t.code = code
				table.insert(amk_offline_alife.protected.ids, box_id)
			else
				local data = netpk:get(se_box, netpk.fState)
				local cd = netpk:parse_custom_data(data.custom_data)
				if cd[ "password" ] then
				--	log1("add protected box: "..se_box:name())
					t.code = cd[ "password" ][ "code" ]
					table.insert(amk_offline_alife.protected.ids, box_id)
				end
			end
		else
			table.insert(amk_offline_alife.protected.ids, box_id)
		end
		t.count = zamok_count or 1
	else
		t.count = t.count + (zamok_count or 1)
	end
end

function on_options_change()
	zamok_code = game_options.ZamokUICode
	only_box = game_options.LockBoxOnly
end

function remove( box, item )
	local box_id = box:id()
	local t = zamok_box[ box_id ]
	if t == nil then return end

	if t.count > 1 then
		 t.count =  t.count - 1
	else	-- проверим, стоит ли ящик под защитой
		for i, v in pairs( amk_offline_alife.protected.ids ) do
			if v == box_id then
				if zamok_code then
					this.change_box_data( box_id )
				end
				table.remove( amk_offline_alife.protected.ids, i )
				--amk_offline_alife.update_tables( level.name() )
				ShowMessageBox("ok_info", "st_zamok_open_box", false, false, 2000)
				break
			end
		end
		zamok_box[ box_id ] = nil
	end
end

function add( item )
	local sitem = AI:object( item:id() ) -- получаем серверный объект
	if sitem == nil then return end		-- если удалили замок, то ничего не делаем
	local pid = sitem.parent_id
	local se_box = AI:object( pid ) -- получаем серверный объект хозяина
	if se_box ~= nil and se_box:clsid() == clsid.inventory_box then
		check_box( nil, pid )
	end
end

function check_box( box, box_id )
	local t = zamok_box[ box_id ]
	if t == nil then		-- если в тайнике ещё нет замков
		local obj = box or level.object_by_id( box_id )
		if obj == nil then return end
	
		zamok_box[ box_id ] = { count = 1 }
		if only_box then
			local visual = naxac.get_model_name( obj:get_visual_name() )
			if can_lock_visuals[ visual ] == nil then
				ShowMessageBox("ok_alarm", "st_zamok_cant_close_box")
				return
			end
		end
	
		if not zamok_code then
			table.insert( amk_offline_alife.protected.ids, box_id )
			--amk_offline_alife.update_tables(level.name())
			ShowMessageBox("ok_info", "st_zamok_close_box", false, false, 2000)
			return
		end
	
		BlockUIDescr( true )
		ShowMessageBox(
			"yes_no_info", "st_zamok_close_question",
			function() this.codelock( obj, 1 ) end
		)
	else	-- иначе - ничего не делаем
		t.count = t.count + 1
	end
end

function add_in_fake_box(box)
	local box_id = box:id()
	local se_box = AI:object( box_id )
	if se_box and se_box:clsid() == clsid.inventory_box then
		check_box(box, box_id)
	end
end

function remove_offline( box_id )
	local t = zamok_box[ box_id ]
	if t == nil then return end

	if t.count > 1 then
		 t.count =  t.count - 1
	else	-- проверим, стоит ли ящик под защитой
		for i, v in pairs( amk_offline_alife.protected.ids ) do
			if v == box_id then
				if zamok_code then
					this.change_box_data( box_id )
				end
				table.remove( amk_offline_alife.protected.ids, i )
				break
			end
		end
		zamok_box[ box_id ] = nil
	end
end


class "codelock"

function codelock:__init( box, mode )
	BlockUIDescr(true)
	self.cls = self

	self.object = box
	self.install = ( mode == 1 )

	if not self.install then
		hotkeys.clear_used_box()
		self.code = ""
		local se_box = AI:object( box:id() )
		local data = netpk:get( se_box, netpk.fStat )
		local cd = netpk:parse_custom_data( data.custom_data )
		if cd.password and cd.password.code then
			self.code = cd.password.code
			if not cd.zamok then
				self.zamok_fix = true
			end
		end

		self.is_fake_box = ( cd.storage ~= nil )
	end

	level.start_stop_menu( ui_numpad.numpad( self ), true )
end

function codelock:Quit()
	self.cls = nil
	BlockUIDescr(false)
end

function codelock:OnNumberReceive( text, mode )
--	log( "codelock: code = %s", text )
	if self.zamok_fix then
		if mode then
			start_small_timer( 300, this.actor_open_box, self.object, self.is_fake_box )
		else
			self.object:set_nonscript_usable( true )
		end
		zamok.change_box_data(self.object:id(), true)
		self:Quit()
		return
	end

	if #text == 0 or mode == false then
		self:Quit()
		return
	end

	local box_id = self.object:id()
	if self.install then
		local t = zamok_box[ box_id ]
		if t then t.code = text end

		local se_box = AI:object( box_id )
		local data = netpk:get(se_box, netpk.fState)
		local cd = netpk:parse_custom_data(data.custom_data)
		cd.logic = { cfg = "scripts\\code_inventory_box.ltx" }
		cd.password = { code = text }
		data.custom_data = netpk:gen_custom_data(cd)
		netpk:set( se_box, data, netpk.fState )

		table.insert( amk_offline_alife.protected.ids, box_id )
		--amk_offline_alife.update_tables(level.name())
		ShowMessageBox("ok_info", "st_zamok_close_box", false, false, 2000)

		-- Перезагружаем логику
		local st = db.storage[ box_id ]
		st = {}
		xr_logic.initialize_obj( self.object, st, false, Actor, modules.stype_item, "scripts\\code_inventory_box.ltx" )
	else
		if self.code == text then
			start_small_timer( 300, this.actor_open_box, self.object, self.is_fake_box )
		else
			self.object:set_nonscript_usable( true )
		end
	end

	self:Quit()
end

function actor_open_box( box, is_fake )
	box:set_nonscript_usable( true )
	if is_fake then
		level.start_stop_menu( ui_invbox_new.UICarBodyNew( box ), true )
	else
		hotkeys.on_use( box, Actor )
		Actor:open_inventory_box( box )
	end
end


-- Вызывается при открытии тайника из логики, если на нём стоит замок
function show_codelock(actor, box)
	local se_box = AI:object( box:id() )
	if se_box then
	--	log1("show_codelock for se_box: "..se_box:name())
		box:set_nonscript_usable( false )
		this.codelock( box, 0 )
	end
end

-- Забираем тайник вместе с содержимым на 'kUSE + Shift'
-- Вызывается из логики
function transfer_all(actor, box)
	if not ShiftPressed() then return false end
	
	box:set_nonscript_usable( false )
	shiftCheckDropItem()

	local n = box:inv_box_count()
	if n>0 then
		local item
		for i=0,n-1 do
			item = box:object_from_inv_box(i)
			box:transfer_item(item, actor)
		end
	end
	local se_box = AI:object(box:id())
	if se_box then AI:release(se_box, true) end
	AI:create("treasure_item", vector():set(0,0,0), 0, 0, 0)
	hotkeys.clear_used_box()
end

-- Перезагрузка логики ящика без перевода в оффлайн
function change_box_data(box_id, is_fake)
	local se_box = AI:object(box_id)
	if se_box then
	--	log1("box found: "..se_box:name())
		local inifilename = nil
		local data = netpk:get(se_box, netpk.fState)
		local cd = netpk:parse_custom_data(data.custom_data)
		if se_box:section_name() == "m_inventory_box" then	-- самопальный тайник
			local path = ""
			if is_fake or ui_invbox_new.get_active_box() == box_id then
				path = "scripts\\new_inventory_box_1.ltx"
			else 
				path = "scripts\\new_inventory_box.ltx"
			end
			cd.logic = { cfg = path }
			inifilename = path
		else		-- какой-то другой
			cd = {}
			inifilename = "scripts\\treasure_inventory_box.ltx"
		end
		data.custom_data = netpk:gen_custom_data(cd)
		netpk:set(se_box, data, netpk.fState)
		-- Перезагружаем логику
		if se_box.online then
			local box = level.object_by_id(box_id)
			if not box then return end
			local st = db.storage[box_id]
			st = {}
			xr_logic.initialize_obj(box, st, false, Actor, modules.stype_item, inifilename)
		end
	end
end

function reliability_code_check( box_id )
	if not zamok_code then return 1.00 end

	local t = zamok_box[ box_id ]
	if not (t and t.code) then return 0 end

	local n = #t.code
	if n == 0 then return 0 end

	for j = 0, 9, 1 do
		local s, i = string.gsub( t.code, tostring(j), "" )
		if i == n then return 0
		elseif i/n >= 0.8 then n = n - 1 end
	end

	return math.min( ( n^2 / 55 ) - 0.02, 1.00 )
end

-------------------------------------------------------------------------------
function has_active_codes()
	for id, v in pairs( zamok_box ) do
		if v.code and #v.code > 0 then
			return true
		end
	end
	return false
end

function has_pay_medkits()
	return inventory.search( "medkit_scientic", 10 )
		and inventory.search( "soporific", 5 )
end
function out_pay_medkits()
	inventory.out_items( "medkit_scientic", 10 )
	inventory.out_items( "soporific", 5 )
end

local phrase_id = 10
local function gen_phrase_id_str()
	phrase_id = phrase_id + 1
	return tostring( phrase_id )
end

function init_code_dialog( dlg )
	dlg:AddPhrase( "codelock_dialog_0", "0", "", -10000 )

	dlg:AddPhrase( "codelock_dialog_1", "1", "0", -10000 )

	local phr = dlg:AddPhrase( "codelock_dialog_2", "2", "1", -10000 )
	local phrase_script = phr:GetPhraseScript()
	phrase_script:AddAction( "zamok.out_pay_medkits" )

	dlg:AddPhrase( "codelock_dialog_3", "3", "2", -10000 )

	local text = ""
	local sobj, lname
	local p1, p2, p3
	for id, v in pairs( zamok_box ) do
		if v.code and #v.code > 0 then
			sobj = AI:object( id )
			if sobj then
				lname = object_level_name( sobj )
				text = news_main.get_point_description( lname, sobj.position )
				p1 = gen_phrase_id_str()
				dlg:AddPhrase( text, p1, "3", -10000 )

				text = "Тааак, погоди, вижу там какой-то тайничок, точно... Ага... Цифры, цифры, цифры... Так, записывай скорее, и больше не забывай.\\n"..v.code.."\\nУф, что-то аж голова разболелась..."
				p2 = gen_phrase_id_str()
				dlg:AddPhrase( text, p2, p1, -10000 )

				p3 = gen_phrase_id_str()
				dlg:AddPhrase( "codelock_dialog_1000", p3, p2, -10000 )
			end
		end
	end
end

