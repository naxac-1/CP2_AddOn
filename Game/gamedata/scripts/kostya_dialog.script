-- -*- mode: lua; encoding: windows-1251 -*-
-- stealth
function stealth_start()
	if Actor:has_info("stealth1_done") then return end
	start_real_timer("run",1.0,"kostya_dialog.stealth_start2()")
end
function stealth_start2()
	level.add_pp_effector ("teleport.ppe", 2006, false)
	xr_sound.get_safe_sound_object([[anomaly\teleport_work_1]]):play_no_feedback(Actor, sound_object.s2d, 0, vector(), 1.0)
	AI:create("tm_brother_labirint",vector():set(-313.31903076172,62.234169006348,202.46311950684),38734,2987)
	Actor:set_actor_position( vector():set(-314.30554199219,62.228775024414,204.15815734863) )
end
function stealth_rest()
	local custom = "[logic]\ncfg = scripts\\labirint\\seif_restr_stealth.ltx"
	netpk:create_restrictor( vector():set(-319.69119262695,52.752014160156,195.46728515625), 34557, 2987, custom )
end
function stealth1_have()
	local obj = snp.object_by_section_offline("arhara_seif")
	if obj then
		AI:release(obj, true)
	end
	news_manager.relocate_item("out", "arhara_seif")
end
function stealth1_done()
	start_real_timer( "run",0.5,"kostya_dialog.stealth1_done2()" )
end
function stealth1_done2()
	level.add_pp_effector ("teleport.ppe", 2006, false)
	xr_sound.get_safe_sound_object([[anomaly\teleport_work_1]]):play_no_feedback(Actor, sound_object.s2d, 0, vector(), 1.0)
	local obj = snp.object_by_section("tm_brother_labirint")
	if obj then
		local sobj = AI:object(obj:id())
		if sobj then
			AI:release(sobj, true)
		end
	end
	tm_brother_2chaes_spawn()
end
function tm_brother_2chaes_spawn()
	local se_obj = AI:create("tm_brother_2chaes",vector():set(84.960639953613,8.7271690368652,113.30625152588),56965,2566)
	set_story_id(se_obj, story_ids.tm_brother_2chaes)
	return se_obj
end
function stealth2_done()
	AI:create_free("s_inventory_box_stealth1",vector():set(157.05128479004,12.03516960144,82.391082763672),39526,1229)
	AI:create_free("s_inventory_box_stealth2",vector():set(-73.545913696289,15.663717269897,2.5357427597046),129042,319)
	AI:create_free("s_inventory_box_stealth3",vector():set(-136.37683105469,9.9986381530762,-196.55345275879),102496,629)
	AI:create_free("s_inventory_box_stealth4",vector():set(3.6388249874115,-7.1780724525452,-17.246803207397),312192,1585)
	AI:create_free("s_inventory_box_stealth5",vector():set(23.35853767395,0.18157379329205,-24.917425918579),209456,1046)
end
function stealth5_done()
	inventory.give_items("arhara_seif",1)
	local obj = AI:story_object(story_ids.tm_brother_2chaes)
	if obj then
		AI:release(obj, true)
	end
end
-- проверка на провал при убийстве, сняти амулета или одевании маскхалата
function stealth_fail_task(victim, who)
	if Actor:has_info("stealth2_done")
		and Actor:dont_has_info("stealth_find_pda_done")
		and ( (not who) or who:id() == Actor:id() )
	then
		Actor:give_info_portion("stealth_find_pda_fail")
	end
end
-- подъем рюкзака
function stealth_on_take(box)
	local section = box:section()
	if string.find(section, "s_inventory_box_stealth") then
		Actor:give_info_portion("stealth_find_pda_have"..string.sub(section,24,24))
	end
end
-- сдача ПДА
function stealth_find_pda_done()
	inventory.out_items_all("stealth_pda")
end
function stealth_blow_sidor_done()
	inventory.give_items("wpn_aks74_kalibr_ves_otdaca",1)
	inventory.give_items("wpn_gp100",1)
	braad_test.lab_sar()
end

function krest_topor()
	local b = {
		{position={x=-90.577209472656,y=4.2523427009583,z=89.188056945801},gv=2881,lv=115499},
		{position={x=116.68508911133,y=-0.00091594457626343,z=103.09552001953},gv=2885,lv=282454},
		{position={x=44.239944458008,y=-0.0053302049636841,z=16.853719711304},gv=2885,lv=224518}
	}
    local a = table.random( b )
    AI:create("skelet_ded", vector():set(a.position.x,a.position.y,a.position.z), a.lv, a.gv)
end

local peshera_table
function init_peshera_table()
	if Actor:has_info("peshera_go") then
		xr_s.subscribe("item_take", kostya_dialog.peshera_go)
		peshera_table = xr_logic.pstor_get_custom(Actor, "peshera_clear", "peshera_clear")
	end
end

function peshera_go(obj)
	if Actor:dont_has_info("peshera_go") then
		xr_s.unsubscribe("item_take", kostya_dialog.peshera_go, true)
		return
	end
	peshera_table[obj:id()] = true
end

function peshera_start()
	local obj = AI:object("esc_inventory_box_0003")
	if obj then
		local box = level.object_by_id(obj.id)
		if box then
			shiftCheckDropItem()
			Actor:iterate_inventory(
				function(dummy,item)
					if AI:object(item:id()) == nil then return end
					if not protected_items.actor_items_keep(item:section()) then
						Actor:transfer_item(item, box)
					end
				end
			,Actor)
		--	naxac.close_lock_box(box:id(), "123123")
		end
	end
	
	create_teleport("peshera_blok_tp",vector():set(-112.609199523926,-9.9281539916992,-34.9218902587891),12288,2868)
	local pos = Actor:position()
	local t = {
		pos = {pos.x, pos.y, pos.z},
		lv = Actor:level_vertex_id(),
		gv = Actor:game_vertex_id()
	}
	amk.save_table("pesh_exit", t)

	Actor:give_info_portion("peshera_go")
	if peshera_table == nil then init_peshera_table() end
	if level.get_game_difficulty() < 2 then
		snp.invul_on()
	end
end

function peshera_end()
	snp.invul_off()
	shiftCheckDropItem()
	local obj
	Actor:iterate_inventory(
		function(dummy,item)
			if not protected_items.actor_items_keep(item:section()) then
				obj = AI:object(item:id())
				if obj then AI:release(obj, true) end
			end
		end
	,Actor)
	
	if peshera_table == nil then init_peshera_table() end
	for k,v in pairs(peshera_table) do
		obj = AI:object(k)
		if obj and obj.parent_id ~= Actor:id() and not protected_items.actor_items_keep(obj:section_name()) then
			AI:release(obj, true)
		end
	end
	xr_logic.pstor_clear_custom(Actor, "peshera_clear")

	for id,obj in pairs(db.creatures) do
		if obj and IAmAMonster[obj:clsid()] then
			del_obj_by_id(id)
		end
	end

	for i=1,65535 do
		obj = AI:object(i)
		if obj then
			if obj:section_name() == "af_part_monolit" or obj:section_name() == "m_inventory_box16" then
				AI:release(obj, true)
			end
		end
	end

	delete_teleport("peshera_blok_tp")
	Actor:disable_info_portion("peshera_go")

	local place = amk.load_table("pesh_exit")
	level.start_stop_menu(level.main_input_receiver(), true)
	level.disable_input()
	start_small_timer(2000, function()
		level.add_pp_effector ("teleport.ppe", 2006, false)
	end)
	start_small_timer(2500, function()
		level.enable_input()
		level_changers.create_teleport_on_actor(
			vector():set(unpack(place.pos)),
			place.lv,
			place.gv
		)
	end )
	amk.del_variable("pesh_exit")
end

-- Холодное оружие перенесено в hotkeys.script
function on_wpn_hit()
	local wpn = actor_active_item
	if wpn == nil then return end
	if not isMagazinedWeapon(wpn) then return end

	local cond = wpn:condition()
	-- Взрыв убитого ствола
	if cond < 0.1 and math.random() < 0.2-cond*2 and wpn:section() ~= "wpn_shmel" then
		amk_particle.amk_particle({
			particle="explosions\\explosion_fuelcan",
			pos=Actor:position(),
			sound=[[weapons\t_rgd5_explosion]]
		})
		level.add_pp_effector("amk_shoot.ppe", 2011, false)

		local h = hit()
		h.draftsman = Actor
		h.direction = vector_rotate_y(Actor:direction(), 180) 
		h:bone("bip01_spine")
		h.type = hit.explosion
		h.power = 8
		h.impulse = 200
		Actor:hit(h)

		start_small_timer( 200, del_obj_by_id, wpn:id() )
		Actor:drop_item(wpn)
	end
end
function remove_wpn(id)
	local obj = AI:object(id)
	if obj then
		AI:release(obj, true)
	end
end

-- Взносы
function vzn_begin()
	return Actor:money()>=2000000 and
		Actor:has_info("sar_monolith_destroy")
end
function vzn()
	return
		Actor:money()>=2000000 and
		Actor:has_info("vzn_begin") and 
		Actor:dont_has_info("vzn_start") and 
		not (
			Actor:has_info("vzn1") and 
			Actor:has_info("vzn2") and 
			Actor:has_info("vzn3") and 
			Actor:has_info("vzn4") and 
			Actor:has_info("vzn5") and 
			Actor:has_info("vzn6") and 
			Actor:has_info("vzn7") and 
			Actor:has_info("vzn8") and 
			Actor:has_info("vzn9") and 
			Actor:has_info("vzn10") and 
			Actor:has_info("vzn11") and 
			Actor:has_info("vzn12") and 
			Actor:has_info("vzn13") and 
			Actor:has_info("vzn14") and 
			Actor:has_info("vzn15") and 
			Actor:has_info("vzn16")
		)
end
function vzn_end()
	return
		Actor:has_info("vzn1_done") and 
		Actor:has_info("vzn2_done") and 
		Actor:has_info("vzn3_done") and 
		Actor:has_info("vzn4_done") and 
		Actor:has_info("vzn5_done") and 
		Actor:has_info("vzn6_done") and 
		Actor:has_info("vzn7_done") and 
		Actor:has_info("vzn8_done") and 
		Actor:has_info("vzn9_done") and 
		Actor:has_info("vzn10_done") and 
		Actor:has_info("vzn11_done") and 
		Actor:has_info("vzn12_done") and 
		Actor:has_info("vzn13_done") and 
		Actor:has_info("vzn14_done") and 
		Actor:has_info("vzn15_done") and 
		Actor:has_info("vzn16_done")
end

-- перенесено в spawn_teleport.script
function checking_taken_item_vzn(obj) -- взятие тайника
	local section = obj:section()
	if	section == "vzn_mogila" or
		section == "vzn_platok" or
		section == "vzn_vodka" or
		section == "vzn_prez_zapis" or
		section == "vzn_voen_zapis" or
		section == "vzn_ganteli" or
		section == "vzn_grob" or
		section == "vzn_rover" or
		section == "vzn_pesok" or
		section == "vzn_darwin" or
		section == "vzn_treasure_item" or
		section == "vzn_mladen" or
		section == "vzn_pensia" or
		section == "vzn_noty" or
		section == "vzn_kuvalda" then
			Actor:give_info_portion("vzn_have")
	end
		
	if section == "vzn_treasure_item" then
		-- лотерея
		amk.remove_item_from_inventory_by_name("vzn_treasure_item",Actor)
		amk.spawn_item_in_inv("treasure_item", Actor)
		amk.spawn_item_in_inv("vzn_medal", Actor)
		amk.spawn_item_in_inv(vzn_taynik_stvol(), Actor)
	end
	if section == "vzn_mladen" then
		-- младенец
		local snd = xr_sound.get_safe_sound_object([[characters_voice\scenario\trader\plach]])
		snd:stop()
		snd:play_no_feedback(Actor, sound_object.s2d, 1.0, vector(), 1.0)
	end
end
function vzn_fill(vzn) -- создание тайника
	if     vzn == 11 then
		-- контрик
		AI:create("vzn_stalker_kontrik",vector():set(-209.23837280273,-20.614948272705,-149.44313049316),43943,61)
		aem_manager.manage_money(450000, "out")
	elseif vzn == 12 then
		-- лотерея
		spawn_restrictor.vzn12_restr()
		aem_manager.manage_money(100000, "out")
	else
		-- спавним тайник и получаем ссылку на него
		local obj = taynik_spawn.vzn_taynik()
		
		-- Наполняем тайник
		vzn_fill_taynik(vzn_taynik_stvol(), 1, obj)
		
		if     vzn == 1 then
			vzn_fill_taynik("vzn_venok", 10, obj)
			vzn_fill_taynik("vzn_lopata", 2, obj)
			vzn_fill_taynik("vzn_mogila", 1, obj)
			aem_manager.manage_money(200000, "out")
		elseif vzn == 2 then
			vzn_fill_taynik("vzn_platok", 100, obj)
			aem_manager.manage_money(300000, "out")
		elseif vzn == 3 then
			vzn_fill_taynik("vodka", 100, obj)
			vzn_fill_taynik("vzn_vodka", 1, obj)
			aem_manager.manage_money(400000, "out")
		elseif vzn == 4 then
			if     Actor:has_info("vzn_temp1") then
				vzn_fill_taynik("vzn_prez", 1, obj)
				vzn_fill_taynik("vzn_stirka", 1, obj)
				vzn_fill_taynik("vzn_vivarka", 1, obj)
				vzn_fill_taynik("vzn_polovnik", 1, obj)
			elseif Actor:has_info("vzn_temp2") then
				vzn_fill_taynik("vzn_prez", 2, obj)
				vzn_fill_taynik("vzn_stirka", 2, obj)
				vzn_fill_taynik("vzn_vivarka", 2, obj)
				vzn_fill_taynik("vzn_polovnik", 2, obj)
			elseif Actor:has_info("vzn_temp3") then
				vzn_fill_taynik("vzn_prez", 3, obj)
				vzn_fill_taynik("vzn_stirka", 3, obj)
				vzn_fill_taynik("vzn_vivarka", 3, obj)
				vzn_fill_taynik("vzn_polovnik", 3, obj)
			end
			vzn_fill_taynik("vzn_prez_zapis", 1, obj)
			aem_manager.manage_money(650000, "out")
		elseif vzn == 5 then
			vzn_fill_taynik("voen_exo_outfit", 12, obj)
			vzn_fill_taynik("vzn_voen_zapis", 1, obj)
			aem_manager.manage_money(350000, "out")
		elseif vzn == 6 then
			vzn_fill_taynik("vzn_ganteli", 1, obj)
			vzn_fill_taynik("vzn_gira", 2, obj)
			aem_manager.manage_money(200000, "out")
		elseif vzn == 7 then
			vzn_fill_taynik("vzn_grob", 1, obj)
			aem_manager.manage_money(300000, "out")
		elseif vzn == 8 then
			vzn_fill_taynik("vzn_rover", 1, obj)
			aem_manager.manage_money(800000, "out")
		elseif vzn == 9 then
			vzn_fill_taynik("vzn_pesok", 3, obj)
			aem_manager.manage_money(500000, "out")
		elseif vzn == 10 then
			vzn_fill_taynik("vzn_darwin", 1, obj)
			vzn_fill_taynik("vzn_darwin_zapis", 1, obj)
			aem_manager.manage_money(250000, "out")
		elseif vzn == 13 then
			vzn_fill_taynik("vzn_mladen", 3, obj)
			aem_manager.manage_money(300000, "out")
			xr_sound.get_safe_sound_object([[characters_voice\scenario\trader\plach]]):play_at_pos(Actor, obj.position, 0, sound_object.s3d+sound_object.looped)
		elseif vzn == 14 then
			vzn_fill_taynik("vzn_pensia", 1, obj)
			vzn_fill_taynik("vzn_polis", 1, obj)
			aem_manager.manage_money(250000, "out")
		elseif vzn == 15 then
			vzn_fill_taynik("balalaika_a", 1, obj)
			vzn_fill_taynik("guitar_a", 1, obj)
			vzn_fill_taynik("harmonica_a", 1, obj)
			vzn_fill_taynik("vzn_torch", 1, obj)
			vzn_fill_taynik("vzn_noty", 1, obj)
			aem_manager.manage_money(400000, "out")
		elseif vzn == 16 then
			vzn_fill_taynik("vzn_kuvalda", 1, obj)
			vzn_fill_taynik("vzn_krovosos_cocoon", 1, obj)
			aem_manager.manage_money(50000, "out")
		end
	end

	Actor:give_info_portion("vzn"..tostring(vzn))
	Actor:give_info_portion("vzn_start")
end
function vzn_fill_taynik(section, cnt, obj)
	for i = 1,cnt do
		spawn_item_in_taynik(section, obj)
	end
	if section == "wpn_samopal" then
		-- добавим патроны для самопала
		spawn_item_in_taynik("ammo_samopal", obj)
	end
end
function spawn_item_in_taynik(section, box)
	local item = AI:create(section, vector():set(0,0,0), 0, 0, box.id)
	level.client_spawn_manager():add(item.id, -1, fix_spawn_item_in_taynik, box)
end
function fix_spawn_item_in_taynik(box, id, item)
	local online_box = level.object_by_id(box.id) -- к моменту выхода предмета в онлайн box уже в онлайне
    online_box:transfer_item(item, online_box)
end

function vzn_done(vzn) -- удаление уникального хабара
	if     vzn == 1 then
		inventory.out_items_all("vzn_venok")
		inventory.out_items_all("vzn_lopata")
		inventory.out_items_all("vzn_mogila")
	elseif vzn == 2 then
		inventory.out_items_all("vzn_platok")
	elseif vzn == 3 then
		inventory.out_items_all("vzn_vodka")
	elseif vzn == 4 then
		inventory.out_items_all("vzn_prez")
		inventory.out_items_all("vzn_prez_zapis")
		inventory.out_items_all("vzn_stirka")
		inventory.out_items_all("vzn_vivarka")
		inventory.out_items_all("vzn_polovnik")
	elseif vzn == 5 then
		inventory.out_items_all("vzn_voen_zapis")
	elseif vzn == 6 then
		inventory.out_items_all("vzn_ganteli")
		inventory.out_items_all("vzn_gira")
	elseif vzn == 7 then
		inventory.out_items_all("vzn_grob")
	elseif vzn == 8 then
		inventory.out_items_all("vzn_rover")
	elseif vzn == 9 then
		inventory.out_items_all("vzn_pesok")
	elseif vzn == 10 then
		play_tush()
		inventory.out_items_all("vzn_darwin")
		inventory.out_items_all("vzn_darwin_zapis")
		aem_manager.manage_money(300000, "in")
	elseif vzn == 12 then
		inventory.out_items_all("vzn_medal")
	elseif vzn == 13 then
		inventory.out_items_all("vzn_mladen")
	elseif vzn == 14 then
		inventory.out_items_all("vzn_pensia")
		inventory.out_items_all("vzn_polis")
	elseif vzn == 15 then
		inventory.out_items_all("vzn_torch")
		inventory.out_items_all("vzn_noty")
		aem_manager.manage_money(200000, "in")
	elseif vzn == 16 then
		inventory.out_items_all("vzn_kuvalda")
		inventory.out_items_all("vzn_krovosos_cocoon")
	end

	Actor:give_info_portion("vzn"..tostring(vzn).."_done")
	Actor:disable_info_portion("vzn_start")
	Actor:disable_info_portion("vzn_have")
	Actor:disable_info_portion("vzn_temp1")
	Actor:disable_info_portion("vzn_temp2")
	Actor:disable_info_portion("vzn_temp3")
	Actor:disable_info_portion("vzn_temp4")
end
function vzn_taynik_stvol()
	local vzn_stvol = {
		"wpn_benelli_m3_tactik",
		"wpn_akms_m1",
		"wpn_fn_fal_c1",
		"wpn_kord_m1",
		"wpn_vepr12_col",
		"wpn_vepr12_20",
		"wpn_svd_m3",
		"grenade_f1",
		"wpn_pm",
		"fake_wpn_crowbar",
		"wpn_samopal",
		"fake_wpn_fist_m",
		"fake_wpn_kuvalda",
		"fake_wpn_topor",
		"wpn_mp5"
	}
	local i
	-- Ищем неиспользованный ствол
	repeat
		i = math.random(#vzn_stvol)
	until Actor:dont_has_info("vzn_stvol"..tostring(i))
	
	Actor:give_info_portion("vzn_stvol"..tostring(i))
	return vzn_stvol[i]
end

for i = 1, 16 do
	this[ "vzn"..i ] = function() vzn_fill( i ) end
	this[ "vzn"..i.."_done" ] = function() vzn_done( i ) end
end

function play_tush()
	Actor:give_info_portion("sidor_tush")
	start_real_timer("stop_tush", 18.3, 0)
end
function give_ak_strelka()
	inventory.give_items("wpn_ak104t",1)
end
function play_video_strelok()
  game.start_tutorial("intro_game_2")
end
function play_video_kontrik()
  game.start_tutorial("death_machine_dream_2")
end
function play_video_good_end()
  game.start_tutorial("mov_refuse_osoznanie_2")
end
function actor_vzn_back()
	aem_manager.manage_money(5500000, "in")
	play_tush()
	Actor:give_info_portion("vzn_reset")
	Actor:disable_info_portion("vzn_reset")
end
function gg_monolit()
	Actor:set_character_community("monolith", 0, 0)
end
-- Взносы end

-- рандомная выдача редких патронов qty раз
function give_ammo(qty)
	local ammo = {
		"ammo_gauss",
		"ammo_minigun",
		"ammo_12x70_kart",
		"ammo_357_ap_mag",
		"ammo_12.7x108",
		"ammo_zhekan_izomorf",
		"ammo_9x39_izomorf",
		"ammo_5.45x39_izomorf",
		"ammo_7.62x39_k",
		"ammo_og-7b",
		"ammo_23x76_shrap",
		"ammo_7.62x54_izomorf",
		"ammo_5.56x45_gd"
	}
	for i =1,qty do
		inventory.give_items(table.random(ammo),1)
	end
end

function checking_taken_item63(obj)
	if not (string.sub(obj:section(),1,7)=="tm_docs") then return end

	for i = 1, 13 do
		if Actor:object( "tm_docs"..string.format("%02d",i) ) == nil then
			return false
		end
	end

	if Actor:dont_has_info("tm_find_all") then 
		Actor:give_info_portion("tm_find_all")
		news_manager.send_tip("tm_find_all_sms", nil, nil, 30000)
		this.tm_done1()
		spawn_tm_taynik()
		local se_obj = AI:create("tm_teleport_1",vector():set(24.6673412323,56.192798614502,-5.0582308769226),5907,2417)
		xr_logic.pstor_store(Actor, "tm_teleport_1", se_obj.id)		  
		se_obj = AI:create("tm_teleport_2",vector():set(23.798603057861,70.392623901367,45.316135406494),5395,2417)
		xr_logic.pstor_store(Actor, "tm_teleport_2", se_obj.id)		  
		spawn_restrictor.tm_sr1()
	end
end
function tm_spawn1()
	AI:create_free("z_inventory_box01",vector():set(10.472078323364,49.034076690674,-15.613767623901),3388,2417)
	AI:create_free("z_inventory_box02",vector():set(19.680177688599,48.432109832764,-4.1294741630554),4341,2417)
	AI:create_free("z_inventory_box03",vector():set(3.4836528301239,56.036026000977,35.414047241211),2518,2405)
	AI:create_free("z_inventory_box04",vector():set(60.87622833252,53.735683441162,26.076965332031),9266,2417)
	AI:create_free("z_inventory_box05",vector():set(60.85319519043,53.796840667725,21.076036453247),9788,2417)
	AI:create_free("z_inventory_box06",vector():set(61.789813995361,60.531970977783,41.451103210449),9966,2402)
	AI:create_free("z_inventory_box07",vector():set(9.1720209121704,20.386127471924,-11.211741447449),6333,2453)
	AI:create_free("z_inventory_box08",vector():set(44.268180847168,58.320827484131,-24.319999694824),8050,2417)
	AI:create_free("z_inventory_box09",vector():set(-19.819829940796,64.045745849609,-31.615013122559),591,2417)
	AI:create_free("z_inventory_box10",vector():set(80.993240356445,71.973617553711,-40.810508728027),6403,2417)
	AI:create_free("z_inventory_box11",vector():set(42.494750976563,69.035263061523,38.658748626709),4591,2417)
	AI:create_free("z_inventory_box12",vector():set(64.846755981445,67.564109802246,45.584968566895),4591,2417)
	AI:create_free("z_inventory_box13",vector():set(51.092010498047,49.359004974365,-17.654895782471),8798,2416)
end
function tm_done1()
 	amk.remove_item_from_inventory_by_name("tm_docs01",Actor)
 	amk.remove_item_from_inventory_by_name("tm_docs02",Actor)
 	amk.remove_item_from_inventory_by_name("tm_docs03",Actor)
 	amk.remove_item_from_inventory_by_name("tm_docs04",Actor)
 	amk.remove_item_from_inventory_by_name("tm_docs05",Actor)
 	amk.remove_item_from_inventory_by_name("tm_docs06",Actor)
 	amk.remove_item_from_inventory_by_name("tm_docs07",Actor)
 	amk.remove_item_from_inventory_by_name("tm_docs08",Actor)
 	amk.remove_item_from_inventory_by_name("tm_docs09",Actor)
 	amk.remove_item_from_inventory_by_name("tm_docs10",Actor)
 	amk.remove_item_from_inventory_by_name("tm_docs11",Actor)
 	amk.remove_item_from_inventory_by_name("tm_docs12",Actor)
 	amk.remove_item_from_inventory_by_name("tm_docs13",Actor)
end
-- перенесено в spawn_teleport.script
function checking_taken_item64(obj)
	if obj:section() == "tm_docs14" then
		Actor:give_info_portion("tm_find_done")
		this.delete_teleport("tm_teleport_4")
		AI:create_free("z_inventory_box15",vector():set(84.50724029541,69.478454589844,-7.1580576896667),6048,2417)
		amk.drop_item(Actor,obj)
		amk.remove_item(obj)
	end
end
function spawn_tm_taynik()
	if Actor:has_info("tm_ruck_spawned") then return end
	AI:create_free("z_inventory_box14",vector():set(23.798603057861,70.392623901367,45.316135406494),5395,2417)
	Actor:give_info_portion("tm_ruck_spawned")
end
function remove_tm_taynik()
	local obj = snp.object_by_section_offline("z_inventory_box14")
	if obj then
		AI:release(obj, true)
		Actor:disable_info_portion("tm_ruck_spawned")
	end
end

-- универсальная процедура спавна телепортов
function create_teleport(section, pos, lv, gv)
    local se_obj = AI:create(section, pos, lv, gv)
	xr_logic.pstor_store(Actor, section, se_obj.id)
	return se_obj
end
-- универсальная процедура удаления телепортов
function delete_teleport(section)
	local se_obj = AI:object(xr_logic.pstor_retrieve(Actor, section, -1, true))
	if se_obj then
		AI:release(se_obj, true)
	end
end

-- Proper71 docs
-- Вниманию оптимизаторов: в разделе docs ничего не оптимизировать! Даже не трогать порядок выполнения команд! Из-за использования disable в поршнях и некоторых глюков из-за параллельного выполнения процессов в движке не все работает так, как кажется на первый взгляд. Поэтому ничего здесь не трогайте.
function checking_taken_item61(obj)
	local sect = obj:section()
	if string.find(sect,"zonedocs") then
		Actor:give_info_portion("zonedocs_have"..string.sub(sect,10))

		local total = 60
		if     Actor:has_info("voronin_docs1_start_as") then
			total = 24
		elseif Actor:has_info("voronin_docs1_start_yan") then
			total = 23
		elseif Actor:has_info("voronin_docs1_start_dt") then
			total = 22
		elseif Actor:has_info("voronin_docs1_start_atp") then
			total = 15
		elseif Actor:has_info("voronin_docs1_start_td") then
			total = 30
		elseif Actor:has_info("voronin_docs1_start_puzir") then
			total = 6
		elseif Actor:has_info("voronin_docs1_start_agro") then
			total = 26
		elseif Actor:has_info("voronin_docs1_start_marsh") then
			total = 30
		elseif Actor:has_info("voronin_docs1_start_esc") then
			total = 60
		elseif Actor:has_info("voronin_docs1_start_garbage") then
			total = 60
		elseif Actor:has_info("voronin_docs1_start_bar") then
			total = 60
		end
		
		if     inventory.search("zone_docs",total-1) then
			Actor:give_info_portion("voronin_docs1_have")
		elseif inventory.search("zone_docs",total-3) then
			Actor:give_info_portion("voronin_docs1_almost_have")
		end
		
		amk.remove_item_from_inventory(obj,Actor)
		-- удаляем дубликаты
		local lname = level.name()
		if  (sect=="zonedocs_26" and lname == "l03u_agr_underground") or 
			(sect=="zonedocs_22" and (lname == "l06_rostok" or lname == "l05_bar"))
		then
			local sobj
			for i = 1,65534 do
				sobj = AI:object(i)
				if sobj then
					sect = sobj:section_name()
					if sect == "zonedocs_26" or sect == "zonedocs_22" then
						AI:release(sobj,true)
						break
					end
				end
			end
		end
		
		inventory.give_items("zone_docs",1)
	end
end

function zonedocs_buy()
	inventory.give_items("zonedocs_0",1)
	Actor:give_info_portion("acv_docs_fail")
end

function voronin_docs1_done()
	inventory.out_items_all("zone_docs")
	if Actor:dont_has_info("voronin_docs1_have") then -- удаляем ненайденные части
		local sobj
		for i = 1,65534 do
			sobj = AI:object(i)
			if sobj and string.find(sobj:name(),"zonedocs") then
				AI:release(sobj,true)
			end
		end
	end
	
	if     Actor:has_info("voronin_docs1_start_as") then
		if Actor:has_info("voronin_docs1_have") then
			Actor:give_info_portion("voronin_docs1_done_as")
		else
			Actor:give_info_portion("voronin_docs1_fail_as")
			Actor:give_info_portion("acv_docs_fail")
		end
	elseif Actor:has_info("voronin_docs1_start_yan") then
		if Actor:has_info("voronin_docs1_have") then
			Actor:give_info_portion("voronin_docs1_done_yan")
		else
			Actor:give_info_portion("voronin_docs1_fail_yan")
			Actor:give_info_portion("acv_docs_fail")
		end
	elseif Actor:has_info("voronin_docs1_start_dt") then
		if Actor:has_info("voronin_docs1_have") then
			Actor:give_info_portion("voronin_docs1_done_dt")
		else
			Actor:give_info_portion("voronin_docs1_fail_dt")
			Actor:give_info_portion("acv_docs_fail")
		end
	elseif Actor:has_info("voronin_docs1_start_atp") then
		if Actor:has_info("voronin_docs1_have") then
			Actor:give_info_portion("voronin_docs1_done_atp")
		else
			Actor:give_info_portion("voronin_docs1_fail_atp")
			Actor:give_info_portion("acv_docs_fail")
		end
	elseif Actor:has_info("voronin_docs1_start_td") then
		if Actor:has_info("voronin_docs1_have") then
			Actor:give_info_portion("voronin_docs1_done_td")
		else
			Actor:give_info_portion("voronin_docs1_fail_td")
			Actor:give_info_portion("acv_docs_fail")
		end
	elseif Actor:has_info("voronin_docs1_start_puzir") then
		if Actor:has_info("voronin_docs1_have") then
			Actor:give_info_portion("voronin_docs1_done_puzir")
		else
			Actor:give_info_portion("voronin_docs1_fail_puzir")
			Actor:give_info_portion("acv_docs_fail")
		end
	elseif Actor:has_info("voronin_docs1_start_agro") then
		if Actor:has_info("voronin_docs1_have") then
			Actor:give_info_portion("voronin_docs1_done_agro")
		else
			Actor:give_info_portion("voronin_docs1_fail_agro")
			Actor:give_info_portion("acv_docs_fail")
		end
	elseif Actor:has_info("voronin_docs1_start_marsh") then
		if Actor:has_info("voronin_docs1_have") then
			Actor:give_info_portion("voronin_docs1_done_marsh")
		else
			Actor:give_info_portion("voronin_docs1_fail_marsh")
			Actor:give_info_portion("acv_docs_fail")
		end
	elseif Actor:has_info("voronin_docs1_start_esc") then
		if Actor:has_info("voronin_docs1_have") then
			Actor:give_info_portion("voronin_docs1_done_esc")
		else
			Actor:give_info_portion("voronin_docs1_fail_esc")
			Actor:give_info_portion("acv_docs_fail")
		end
	elseif Actor:has_info("voronin_docs1_start_garbage") then
		if Actor:has_info("voronin_docs1_have") then
			Actor:give_info_portion("voronin_docs1_done_garbage")
		else
			Actor:give_info_portion("voronin_docs1_fail_garbage")
			Actor:give_info_portion("acv_docs_fail")
		end
	elseif Actor:has_info("voronin_docs1_start_bar") then
		if Actor:has_info("voronin_docs1_have") then
			Actor:give_info_portion("voronin_docs1_done_bar")
		else
			Actor:give_info_portion("voronin_docs1_fail_bar")
			Actor:give_info_portion("acv_docs_fail")
		end
	end
	
	if Actor:has_info("zonedocs_have0") then
		Actor:give_info_portion("acv_docs_fail")
	end
	if Actor:has_info("voronin_docs1_have") then
		this.give_ammo(3)
	end
	Actor:give_info_portion("voronin_docs1_reset")
end

function t_zonedocs_bar()
	taynik_spawn.t_zonedocs("bar")
end
function t_zonedocs_garbage()
	taynik_spawn.t_zonedocs("garbage")
end
function t_zonedocs_esc()
	taynik_spawn.t_zonedocs("esc")
end
function t_zonedocs_marsh()
	taynik_spawn.t_zonedocs("marsh")
end
function t_zonedocs_agro()
	taynik_spawn.t_zonedocs("agro")
end
function t_zonedocs_puzir()
	taynik_spawn.t_zonedocs("puzir")
end
function t_zonedocs_td()
	taynik_spawn.t_zonedocs("td")
end
function t_zonedocs_atp()
	taynik_spawn.t_zonedocs("atp")
end
function t_zonedocs_dt()
	taynik_spawn.t_zonedocs("dt")
end
function t_zonedocs_yan()
	taynik_spawn.t_zonedocs("yan")
end
function t_zonedocs_as()
	taynik_spawn.t_zonedocs("as")
end

function zonedocs_give_info_2()
	if Actor:has_info("zonedocs_have1") then
		Actor:give_info_portion("zonedocs_have2")
	end
end
function zonedocs_dolg_vrag()
	Actor:give_info_portion("voronin_docs1_end_fail")
	relation_registry.set_community_goodwill ("dolg", Actor:id(), -5000)
end
function zonedocs_gg_death()
	Actor:give_info_portion("voronin_docs1_end_fail")
	start_real_timer("zonedocs_gg_kill",15,0)
	level.add_cam_effector("camera_effects\\radar_stop.anm", 2506, false, "")
end
function zonedocs_gg_kill()
	Actor:kill(Actor)
end
function zonedocs_gg_reward()
	this.give_ammo(30)
	inventory.give_items("wpn_svt40",1)
	inventory.give_items("wpn_pps43",1)
	inventory.give_items("wpn_mkb_42",1)
	inventory.give_items("wpn_kedr",1)
	inventory.give_items("wpn_sig_m2",1)
	inventory.give_items("wpn_sayga_un",1)
	inventory.give_items("wpn_mauser_red9",1)
	archievements.acv_docs()
end

function kostya_biznes1_have_all()
	return
		inventory.search("af_buliz",5)
end		
function kostya_biznes1_have()
	if kostya_biznes1_have_all() then
		Actor:give_info_portion("kostya_biznes1_have")
		return true
	else
		return false
	end
end
function kostya_biznes1_done()
		inventory.out_items("af_buliz",5)
	Actor:give_info_portion("info_amk_recipt_power_2")
end

function sidor_biznes_over()
	return not (
		Actor:has_info("sidor_biznes1_done") and 
		Actor:has_info("sidor_biznes2_done") and 
		Actor:has_info("sidor_biznes3_done") and 
		Actor:has_info("sidor_biznes4_done") and
		Actor:has_info("sidor_biznes5_done") and
		Actor:has_info("sidor_biznes6_done") and
		Actor:has_info("sidor_biznes7_done")
	)
end

function sidor_biznes1_have_all()
	return Actor:has_info("sidor_biznes1_start") and
		inventory.search("mutant_spider_gland",2) and
		inventory.search("mutant_rotan_heart",2) and
		inventory.search("mutant_plague_hand",2) and
		inventory.search("mutant_carlic_hand",2) and
		inventory.search("mutant_raptor_kogot",2) and
		inventory.search("mutant_zanoza_leg",2) and
		inventory.search("mutant_flesh_eye",2) and
		inventory.search("mutant_boar_leg",2) and
		inventory.search("mutant_dog_tail",2) and
		inventory.search("mutant_psevdodog_tail",2) and
		inventory.search("mutant_krovosos_jaw",2) and
		inventory.search("mutant_burer_hand",2) and
		inventory.search("mutant_zombie_hand",2) and
		inventory.search("mutant_snork_leg",2) and
		inventory.search("mutant_face_tushkano",2) and
		inventory.search("mutant_hand_kontroler",2) and
		inventory.search("mutant_poltergeist_glas",2) and
		inventory.search("mutant_psevdogigant_hand",2) and
		inventory.search("mutant_tail_cat",2) and
		inventory.search("mutant_chimera_kogot",2) and
		inventory.search("mutant_fracture_hand",2) and
		inventory.search("mutant_deathclaw_antler",2) and
		inventory.search("part_digitis_biblio",2) and
		inventory.search("mutant_vypolzen_hrebet",2) and
		inventory.search("part_tarakan",2) and
		inventory.search("part_tarakan_strong",2) and
		inventory.search("mutant_zombie_teeth",2) and
		inventory.search("mutant_spleen_rat",2) and
		inventory.search("mutant_krovosos_red_jaw",1) and
		inventory.search("mutant_burer_red_hand",1) and
		inventory.search("bezoar",2) and
		inventory.search("mushroom",2) and
		inventory.search("bread_a",2)
end		
function sidor_biznes1_have()
	if sidor_biznes1_have_all() then
		Actor:give_info_portion("sidor_biznes1_have")
		return true
	else
		return false
	end
end
function sidor_biznes1_done()
		inventory.out_items("mutant_spider_gland",2)
		inventory.out_items("mutant_rotan_heart",2)
		inventory.out_items("mutant_plague_hand",2)
		inventory.out_items("mutant_carlic_hand",2)
		inventory.out_items("mutant_raptor_kogot",2)
		inventory.out_items("mutant_zanoza_leg",2)
		inventory.out_items("mutant_flesh_eye",2)
		inventory.out_items("mutant_boar_leg",2)
		inventory.out_items("mutant_dog_tail",2)
		inventory.out_items("mutant_psevdodog_tail",2)
		inventory.out_items("mutant_krovosos_jaw",2)
		inventory.out_items("mutant_burer_hand",2)
		inventory.out_items("mutant_zombie_hand",2)
		inventory.out_items("mutant_snork_leg",2)
		inventory.out_items("mutant_face_tushkano",2)
		inventory.out_items("mutant_hand_kontroler",2)
		inventory.out_items("mutant_poltergeist_glas",2)
		inventory.out_items("mutant_psevdogigant_hand",2)
		inventory.out_items("mutant_tail_cat",2)
		inventory.out_items("mutant_chimera_kogot",2)
		inventory.out_items("mutant_fracture_hand",2)
		inventory.out_items("mutant_deathclaw_antler",2)
		inventory.out_items("part_digitis_biblio",2)
		inventory.out_items("mutant_vypolzen_hrebet",2)
		inventory.out_items("part_tarakan",2)
		inventory.out_items("part_tarakan_strong",2)
		inventory.out_items("mutant_zombie_teeth",2)
		inventory.out_items("mutant_spleen_rat",2)
		inventory.out_items("mutant_krovosos_red_jaw",1)
		inventory.out_items("mutant_burer_red_hand",1)
		inventory.out_items("bezoar",2)
		inventory.out_items("mushroom",2)
		inventory.out_items("bread_a",2)
	this.give_ammo(10)
	inventory.give_items("af_power",1)
	inventory.give_items("cube_chip",1)
end

function sidor_biznes2_have_all()
	return Actor:has_info("sidor_biznes2_start") and
		inventory.search("af_dummy_battery_red",3) and
		inventory.search("af_dummy_spring_red",3) and
		inventory.search("af_dummy_pellicle_red",3) and
		inventory.search("af_caterpillar",4) and
		inventory.search("af_simbion",2) and
		inventory.search("af_arhara_globus",1) and
		inventory.search("bread_a",3)
end
function sidor_biznes2_have()
	if sidor_biznes2_have_all() then
		Actor:give_info_portion("sidor_biznes2_have")
		return true
	else
		return false
	end
end
function sidor_biznes2_done()
		inventory.out_items("af_dummy_battery_red",3)
		inventory.out_items("af_dummy_spring_red",3)
		inventory.out_items("af_dummy_pellicle_red",3)
		inventory.out_items("af_caterpillar",4)
		inventory.out_items("af_simbion",2)
		inventory.out_items("af_arhara_globus",1)
		inventory.out_items("bread_a",3)
	this.give_ammo(5)
	inventory.give_items("cube_chip",1)
	Actor:give_info_portion("info_amk_recipt_power_3")
end

function sidor_biznes3_have_all()
	return Actor:has_info("sidor_biznes3_start") and
		inventory.search("af_buliz",15) and
		inventory.search("af_drops",1) and
		inventory.search("af_cry_1",1) and
		inventory.search("af_cry_2",1) and
		inventory.search("af_cry_3",2) and
		inventory.search("af_cry_4",2) and
		inventory.search("af_dummy_glassbeads",1) and
		inventory.search("af_babka_1",1) and
		inventory.search("af_babka_2",1) and
		inventory.search("af_babka_3",2) and
		inventory.search("af_babka_4",2) and
		inventory.search("af_rusty_sea-urchin",1) and
		inventory.search("af_dik_1",1) and
		inventory.search("af_dik_2",1) and
		inventory.search("af_dik_3",2) and
		inventory.search("af_dik_4",2) and
		inventory.search("af_soul",1) and
		inventory.search("af_spirit_1",1) and
		inventory.search("af_spirit_2",1) and
		inventory.search("af_spirit_3",2) and
		inventory.search("af_spirit_4",2) and
		inventory.search("af_dummy_pellicle",1) and
		inventory.search("af_armor_1",1) and
		inventory.search("af_armor_2",1) and
		inventory.search("af_armor_3",2) and
		inventory.search("af_armor_4",2) and
		inventory.search("af_dummy_dummy",1) and
		inventory.search("af_pudd_1",1) and
		inventory.search("af_pudd_2",1) and
		inventory.search("af_pudd_3",2) and
		inventory.search("af_pudd_4",2) and
		inventory.search("af_fuzz_kolobok",1) and
		inventory.search("af_kol_1",1) and
		inventory.search("af_kol_2",1) and
		inventory.search("af_kol_3",2) and
		inventory.search("af_kol_4",2)
end
function sidor_biznes3_have()
	if sidor_biznes3_have_all()	then
		Actor:give_info_portion("sidor_biznes3_have")
		return true
	else
		return false
	end
end
function sidor_biznes3_done()
		inventory.out_items("af_buliz",15)
		inventory.out_items("af_drops",1)
		inventory.out_items("af_cry_1",1)
		inventory.out_items("af_cry_2",1)
		inventory.out_items("af_cry_3",2)
		inventory.out_items("af_cry_4",2)
		inventory.out_items("af_dummy_glassbeads",1)
		inventory.out_items("af_babka_1",1)
		inventory.out_items("af_babka_2",1)
		inventory.out_items("af_babka_3",2)
		inventory.out_items("af_babka_4",2)
		inventory.out_items("af_rusty_sea-urchin",1)
		inventory.out_items("af_dik_1",1)
		inventory.out_items("af_dik_2",1)
		inventory.out_items("af_dik_3",2)
		inventory.out_items("af_dik_4",2)
		inventory.out_items("af_soul",1)
		inventory.out_items("af_spirit_1",1)
		inventory.out_items("af_spirit_2",1)
		inventory.out_items("af_spirit_3",2)
		inventory.out_items("af_spirit_4",2)
		inventory.out_items("af_dummy_pellicle",1)
		inventory.out_items("af_armor_1",1)
		inventory.out_items("af_armor_2",1)
		inventory.out_items("af_armor_3",2)
		inventory.out_items("af_armor_4",2)
		inventory.out_items("af_dummy_dummy",1)
		inventory.out_items("af_pudd_1",1)
		inventory.out_items("af_pudd_2",1)
		inventory.out_items("af_pudd_3",2)
		inventory.out_items("af_pudd_4",2)
		inventory.out_items("af_fuzz_kolobok",1)
		inventory.out_items("af_kol_1",1)
		inventory.out_items("af_kol_2",1)
		inventory.out_items("af_kol_3",2)
		inventory.out_items("af_kol_4",2)
	this.give_ammo(30)
	inventory.give_items("wpn_m_134",1)
	inventory.give_items("wpn_pkm",1)
	inventory.give_items("cube_chip",1)
end

function sidor_biznes4_have_all()
	return Actor:has_info("sidor_biznes4_start") and
		inventory.search("wpn_gauss",6,true) and
		inventory.search_ammo("ammo_gauss",100) and
		inventory.search_ammo("ammo_super_gauss",45) and
		inventory.search("wpn_rpg7",3, true) and
		inventory.search_ammo("ammo_og-7b",30)
end
function sidor_biznes4_have()
	if sidor_biznes4_have_all() then
		Actor:give_info_portion("sidor_biznes4_have")
		return true
	else
		return false
	end
end
function sidor_biznes4_done()
		inventory.out_items("wpn_gauss",6,true)
		inventory.out_ammo("ammo_gauss",100)
		inventory.out_ammo("ammo_super_gauss",45)
		inventory.out_items("wpn_rpg7",3,true)
		inventory.out_ammo("ammo_og-7b",30)
	this.give_ammo(10)
	inventory.give_items("wpn_m_134",1)
	inventory.give_items("wpn_pkm",1)
	inventory.give_items("scientist_suit_white",1)
	inventory.give_items("cube_chip",1)
end

function sidor_biznes5_have_all()
	return Actor:has_info("sidor_biznes5_start") and
		inventory.search("broken_exoskeleton",2, true) and
		inventory.search("voen_exo_outfit",2, true) and
		inventory.search("exo_outfit",2, true) and
		inventory.search("killer_blue_exoskeleton",2, true) and
		inventory.search("monolit_exoskeleton",2, true) and
		inventory.search("svoboda_exoskeleton",2, true) and
		inventory.search("dolg_black_exoskeleton",2, true) and
		inventory.search("nebo_exo_outfit",2, true) and
		inventory.search("exo_bandit_outfit",2, true) and
		inventory.search("exo_scientist_outfit",2, true) and
		inventory.search("nano_outfit",1, true)
end
function sidor_biznes5_have()
	if sidor_biznes5_have_all() then
		Actor:give_info_portion("sidor_biznes5_have")
		return true
	else
		return false
	end
end
function sidor_biznes5_done()
		inventory.out_items("broken_exoskeleton",2,true)
		inventory.out_items("voen_exo_outfit",2,true)
		inventory.out_items("exo_outfit",2,true)
		inventory.out_items("killer_blue_exoskeleton",2,true)
		inventory.out_items("monolit_exoskeleton",2,true)
		inventory.out_items("svoboda_exoskeleton",2,true)
		inventory.out_items("dolg_black_exoskeleton",2,true)
		inventory.out_items("nebo_exo_outfit",2,true)
		inventory.out_items("exo_bandit_outfit",2,true)
		inventory.out_items("exo_scientist_outfit",2,true)
		inventory.out_items("nano_outfit",1,true)
	this.give_ammo(10)
	inventory.give_items("wpn_m_134",1)
	inventory.give_items("wpn_vepr12_m1",1)
	inventory.give_items("cube_chip",1)
end

function sidor_biznes6_have_all()
	return Actor:has_info("sidor_biznes6_start") and
		inventory.search("wpn_crossbow",5, true) and
		inventory.search_ammo("ammo_arbolt",30) and
		inventory.search("wpn_awm",5, true) and
		inventory.search_ammo("ammo_igl",525) and
		inventory.search("wpn_svd",2, true) and
		inventory.search("wpn_svu",2, true) and
		inventory.search_ammo("ammo_7.62x54_7h1",160) and
		inventory.search_ammo("ammo_7.62x54_7h14",160) and
		inventory.search_ammo("ammo_7.62x54_ap",160) and
		inventory.search("wpn_vintorez",5, true) and
		inventory.search_ammo("ammo_9x39_sp5",150) and
		inventory.search_ammo("ammo_9x39_ap",150) and
		inventory.search_ammo("ammo_9x39_pab9",150)
end
function sidor_biznes6_have()
	if sidor_biznes6_have_all() then
		Actor:give_info_portion("sidor_biznes6_have")
		return true
	else
		return false
	end
end
function sidor_biznes6_done()
		inventory.out_items("wpn_crossbow",5,true)
		inventory.out_ammo("ammo_arbolt",30)
		inventory.out_items("wpn_awm",5,true)
		inventory.out_ammo("ammo_igl",525)
		inventory.out_items("wpn_svd",2,true)
		inventory.out_items("wpn_svu",2,true)
		inventory.out_ammo("ammo_7.62x54_7h1",160)
		inventory.out_ammo("ammo_7.62x54_7h14",160)
		inventory.out_ammo("ammo_7.62x54_ap",160)
		inventory.out_items("wpn_vintorez",5,true)
		inventory.out_ammo("ammo_9x39_sp5",150)
		inventory.out_ammo("ammo_9x39_ap",150)
		inventory.out_ammo("ammo_9x39_pab9",150)
	this.give_ammo(10)
	inventory.give_items("wpn_m_134",1)
	inventory.give_items("wpn_aks74_m2",1)
	inventory.give_items("cube_chip",1)
end
function sidor_biznes7_have_all()
	return Actor:has_info("sidor_biznes7_start") and
		inventory.search("mutant_spider_gland",2) and
		inventory.search("mutant_rotan_heart",2) and
		inventory.search("mutant_plague_hand",2) and
		inventory.search("mutant_carlic_hand",2) and
		inventory.search("mutant_raptor_kogot",2) and
		inventory.search("mutant_zanoza_leg",2) and
		inventory.search("mutant_boar_leg",10) and
		inventory.search("mutant_dog_tail",10) and
		inventory.search("mutant_psevdodog_tail",20) and
		inventory.search("mutant_krovosos_jaw",10) and
		inventory.search("mutant_zombie_hand",20) and
		inventory.search("mutant_snork_leg",10) and
		inventory.search("mutant_face_tushkano",20) and
		inventory.search("mutant_hand_kontroler",20) and
		inventory.search("mutant_psevdogigant_hand",10) and
		inventory.search("mutant_tail_cat",10) and
		inventory.search("mutant_chimera_kogot",20) and
		inventory.search("mutant_fracture_hand",20) and
		inventory.search("mutant_deathclaw_antler",10) and
		inventory.search("part_digitis_biblio",10) and
		inventory.search("mutant_vypolzen_hrebet",10) and
		inventory.search("part_tarakan",6) and
		inventory.search("part_tarakan_strong",20) and
		inventory.search("mutant_zombie_teeth",10) and
		inventory.search("rudiment_big",3) and
		inventory.search("mutant_spleen_rat",20) and
		inventory.search("mozg",6) and
		inventory.search("bezoar",6) and
		inventory.search("bread_a",8)
end		
function sidor_biznes7_have()
	if sidor_biznes7_have_all() then
		Actor:give_info_portion("sidor_biznes7_have")
		return true
	else
		return false
	end
end
function sidor_biznes7_done()
		inventory.out_items("mutant_spider_gland",2)
		inventory.out_items("mutant_rotan_heart",2)
		inventory.out_items("mutant_plague_hand",2)
		inventory.out_items("mutant_carlic_hand",2)
		inventory.out_items("mutant_raptor_kogot",2)
		inventory.out_items("mutant_zanoza_leg",2)
		inventory.out_items("mutant_boar_leg",10)
		inventory.out_items("mutant_dog_tail",10)
		inventory.out_items("mutant_psevdodog_tail",20)
		inventory.out_items("mutant_krovosos_jaw",10)
		inventory.out_items("mutant_zombie_hand",20)
		inventory.out_items("mutant_snork_leg",10)
		inventory.out_items("mutant_face_tushkano",20)
		inventory.out_items("mutant_hand_kontroler",20)
		inventory.out_items("mutant_psevdogigant_hand",10)
		inventory.out_items("mutant_tail_cat",10)
		inventory.out_items("mutant_chimera_kogot",20)
		inventory.out_items("mutant_fracture_hand",20)
		inventory.out_items("mutant_deathclaw_antler",10)
		inventory.out_items("part_digitis_biblio",10)
		inventory.out_items("mutant_vypolzen_hrebet",10)
		inventory.out_items("part_tarakan",6)
		inventory.out_items("part_tarakan_strong",20)
		inventory.out_items("mutant_zombie_teeth",10)
		inventory.out_items("rudiment_big",3)
		inventory.out_items("mutant_spleen_rat",20)
		inventory.out_items("mozg",6)
		inventory.out_items("bezoar",6)
		inventory.out_items("bread_a",8)
	this.give_ammo(25)
	inventory.give_items("vodka",100)
end

function kuznetsov_biznes1_have_all()
	return
		inventory.search("wpn_ak47",30) and
		inventory.search_ammo("ammo_7.62x39_fmj",1200) and
		inventory.search_ammo("ammo_7.62x39_ap",600)
end		
function kuznetsov_biznes1_have()
	if kuznetsov_biznes1_have_all() then
		Actor:give_info_portion("kuznetsov_biznes1_have")
		return true
	else
		return false
	end
end
function kuznetsov_biznes1_done()
		inventory.out_items("wpn_ak47",30)
		inventory.out_ammo("ammo_7.62x39_fmj",1200)
		inventory.out_ammo("ammo_7.62x39_ap",600)
	inventory.give_items("sigaret",100)
	inventory.give_items("cube_chip",1)
end

function adrenalin_biznes1_have_all1()
	return
		inventory.search("wpn_pkm",7, true) and
		inventory.search("wpn_m_134",14, true) and
		inventory.search("wpn_mg42",1, true)
end		
function adrenalin_biznes1_have1()
	if adrenalin_biznes1_have_all1() then
		Actor:give_info_portion("adrenalin_biznes1_have1")
		return true
	else
		return false
	end
end
function adrenalin_biznes1_done1()
		inventory.out_items("wpn_pkm",7)
		inventory.out_items("wpn_m_134",14)
		inventory.out_items("wpn_mg42",1)
		this.adrenalin_biznes1_done()
end
function adrenalin_biznes1_have_all2()
	return
		inventory.search_ammo("ammo_7.62x54r",2000) and
		inventory.search_ammo("ammo_minigun",3600) and
		inventory.search_ammo("ammo_7.62x51box",1500)
end		
function adrenalin_biznes1_have2()
	if adrenalin_biznes1_have_all2() then
		Actor:give_info_portion("adrenalin_biznes1_have2")
		return true
	else
		return false
	end
end
function adrenalin_biznes1_done2()
		inventory.out_ammo("ammo_7.62x54r",2000)
		inventory.out_ammo("ammo_minigun",3600)
		inventory.out_ammo("ammo_7.62x51box",1500)
		this.adrenalin_biznes1_done()
end
function adrenalin_biznes1_have_all3()
	return	
		inventory.search("treasure_item",60) and
		inventory.search("zamok",30)
end		
function adrenalin_biznes1_have3()
	if adrenalin_biznes1_have_all3() then
		Actor:give_info_portion("adrenalin_biznes1_have3")
		return true
	else
		return false
	end
end
function adrenalin_biznes1_done3()
		shiftCheckDropItem()
		inventory.out_items("treasure_item",60)
		inventory.out_items("zamok",30)
		this.adrenalin_biznes1_done()
end
function adrenalin_biznes1_done()
	if Actor:has_info("adrenalin_biznes1_done1") and Actor:has_info("adrenalin_biznes1_done2") and Actor:has_info("adrenalin_biznes1_done3") then
		inventory.give_items("ammo_12.7x108",30)
		inventory.give_items("ammo_7.62x39_k",10)
		inventory.give_items("ammo_5.56x45_gd",10)
		inventory.give_items("ammo_12x70_kart",30)
		inventory.give_items("ammo_gauss",30)
		inventory.give_items("ammo_super_gauss",30)
		inventory.give_items("ammo_balon",10)
		inventory.give_items("grenade_f1_double",30)
		inventory.give_items("cube_chip",1)
		Actor:give_info_portion("adrenalin_biznes1_done")
	end
end

function zahar_biznes1_have_all()
	return
		inventory.search("amk_metka",10) and
		inventory.search("wpn_saiga12c",10, true) and
		inventory.search_ammo("ammo_12x70_buck",300) and
		inventory.search_ammo("ammo_12x76_dart",200) and
		inventory.search_ammo("ammo_12x76_zhekan",150) and
		inventory.search_ammo("ammo_12x70_kart",500)
end		
function zahar_biznes1_have()
	if zahar_biznes1_have_all() then
		Actor:give_info_portion("zahar_biznes1_have")
		return true
	else
		return false
	end
end
function zahar_biznes1_done()
		shiftCheckDropItem()
		inventory.out_items("amk_metka",10)
		inventory.out_items("wpn_saiga12c",10)
		inventory.out_ammo("ammo_12x70_buck",300)
		inventory.out_ammo("ammo_12x76_dart",200)
		inventory.out_ammo("ammo_12x76_zhekan",150)
		inventory.out_ammo("ammo_12x70_kart",500)
	this.give_ammo(10)
	inventory.give_items("wpn_m_134",1)
	inventory.give_items("wpn_pkm",1)
	inventory.give_items("cube_chip",1)
end

function barman_biznes1_have_all()
	return
		inventory.search("sweetness",20) and
		inventory.search("beer_a",20) and
		inventory.search("cigara",50) and
		inventory.search("sigaret",100) and
		inventory.search("vodka",200)
end		
function barman_biznes1_have()
	if barman_biznes1_have_all() then
		Actor:give_info_portion("barman_biznes1_have")
		return true
	else
		return false
	end
end
function barman_biznes1_done()
		inventory.out_items("sweetness",20)
		inventory.out_items("beer_a",20)
		inventory.out_items("cigara",50)
		inventory.out_items("sigaret",100)
		inventory.out_items("vodka",200)
	Actor:give_info_portion("info_amk_recipt_power_1")
	inventory.give_items("cube_chip",1)
end

function kruglov_biznes1_have_all()
	return
		inventory.search("nebo_scientific_outfit",1, true) and
		inventory.search("af_dik_1",2) and
		inventory.search("af_dik_2",2) and
		inventory.search("af_dik_3",2) and
		inventory.search("af_dik_4",2) and
		inventory.search("af_spirit_4",1)
end		
function kruglov_biznes1_have()
	if kruglov_biznes1_have_all() then
		Actor:give_info_portion("kruglov_biznes1_have")
		return true
	else
		return false
	end
end
function kruglov_biznes1_done()
		inventory.out_items("nebo_scientific_outfit",1)
		inventory.out_items("af_dik_1",2)
		inventory.out_items("af_dik_2",2)
		inventory.out_items("af_dik_3",2)
		inventory.out_items("af_dik_4",2)
		inventory.out_items("af_spirit_4",1)
	inventory.give_items("wpn_m_134",1)
	inventory.give_items("cube_chip",1)
end
function kruglov_biznes1_done1()
	inventory.give_items("arc_art_box_6",1)
end

function yakut_biznes1_have_all()
	return
		inventory.search("af_simbion",6) and
		inventory.search("af_armor_4",6) and
		inventory.search("antizombie",3)
end		
function yakut_biznes1_have()
	if yakut_biznes1_have_all() then
		Actor:give_info_portion("yakut_biznes1_have")
		return true
	else
		return false
	end
end
function yakut_biznes1_done()
		inventory.out_items("af_simbion",6)
		inventory.out_items("af_armor_4",6)
		inventory.out_items("antizombie",3)
	inventory.give_items("wpn_m_134",1)
	inventory.give_items("cube_chip",1)
end

function voron_biznes1_have_all()
	return
		inventory.search("wpn_peceneg",8, true) and
		inventory.search_ammo("ammo_7.62x54r",1200) and
		inventory.search("military_outfit",4, true) and
		inventory.search("militaryspec_outfit",4, true) and
		inventory.search("medkit_army",20)
end		
function voron_biznes1_have()
	if voron_biznes1_have_all() then
		Actor:give_info_portion("voron_biznes1_have")
		return true
	else
		return false
	end
end
function voron_biznes1_done()
		inventory.out_items("wpn_peceneg",8)
		inventory.out_ammo("ammo_7.62x54r",1200)
		inventory.out_items("military_outfit",4)
		inventory.out_items("militaryspec_outfit",4)
		inventory.out_items("medkit_army",20)
	inventory.give_items("wpn_m_134",1)
	inventory.give_items("wpn_rpk47_sk1",1)
	inventory.give_items("cube_chip",1)
end

function lukash_biznes1_have_all()
	return
		inventory.search("grenade_f1",20) and
		inventory.search("grenade_f1_double",5) and
		inventory.search("grenade_rgd5",20) and
		inventory.search("grenade_gd-05",20) and
		inventory.search("wpn_rg-6",1, true) and
		inventory.search_ammo("ammo_vog-25",20) and
		inventory.search_ammo("ammo_vog-25p",20) and
		inventory.search("wpn_groza",4, true) and
		inventory.search("medkit_army",10) and
		inventory.search("antirad",10) and
		inventory.search("energy_drink",20) and
		inventory.search("amk_metka",5) and
		inventory.search("treasure_item",5) and
		inventory.search("detector_elite",1)
end		
function lukash_biznes1_have()
	if lukash_biznes1_have_all() then
		Actor:give_info_portion("lukash_biznes1_have")
		return true
	else
		return false
	end
end
function lukash_biznes1_done()
		inventory.out_items("grenade_f1",20)
		inventory.out_items("grenade_f1_double",5)
		inventory.out_items("grenade_rgd5",20)
		inventory.out_items("grenade_gd-05",20)
		inventory.out_items("wpn_rg-6",1)
		inventory.out_ammo("ammo_vog-25",20)
		inventory.out_ammo("ammo_vog-25p",20)
		inventory.out_items("wpn_groza",4)
		inventory.out_items("antirad",10)
		inventory.out_items("medkit_army",10)
		inventory.out_items("detector_elite",1)

		shiftCheckDropItem()
		inventory.out_items("amk_metka",5)
		inventory.out_items("treasure_item",5)
		inventory.out_items("energy_drink",20)

	this.give_ammo(10)
	inventory.give_items("wpn_m_134",1)
	inventory.give_items("cube_chip",1)
end

function sakharov_biznes1_have_all()
	return
		inventory.search("caps_mosquito_bald",3) and
		inventory.search("caps_gravi",3) and
		inventory.search("caps_mincer",3) and
		inventory.search("caps_electra",3) and
		inventory.search("caps_zharka",3) and
		inventory.search("caps_ameba",3) and
		inventory.search("caps_ice",3) and
		inventory.search("mutant_krovosos_cocoon",1) and
		inventory.search("mutant_burer_cocoon",1) and
		inventory.search("mutant_zombie_cocoon",1) and
		inventory.search("mutant_snork_cocoon",1) and
		inventory.search("mutant_flesh_cocoon",1) and
		inventory.search("mutant_gigant_cocoon",1) and
		inventory.search("mutant_poltergeist_cocoon",1) and
		inventory.search("mutant_psevdodog_cocoon",1) and
		inventory.search("mutant_dog_cocoon",1) and
		inventory.search("mutant_controller_cocoon",1) and
		inventory.search("mutant_chimera_cocoon",1) and
		inventory.search("mutant_boar_cocoon",1) and
		inventory.search("mutant_tushkano_cocoon",1) and
		inventory.search("mutant_psydog_cocoon",1) and
		inventory.search("mutant_cat_cocoon",1) and
		inventory.search("bezoar",5)
end		
function sakharov_biznes1_have()
	if sakharov_biznes1_have_all() then
		Actor:give_info_portion("sakharov_biznes1_have")
		return true
	else
		return false
	end
end
function sakharov_biznes1_done()
		inventory.out_items("caps_mosquito_bald",3)
		inventory.out_items("caps_gravi",3)
		inventory.out_items("caps_mincer",3)
		inventory.out_items("caps_electra",3)
		inventory.out_items("caps_zharka",3)
		inventory.out_items("caps_ameba",3)
		inventory.out_items("caps_ice",3)
		inventory.out_items("mutant_krovosos_cocoon",1)
		inventory.out_items("mutant_burer_cocoon",1)
		inventory.out_items("mutant_zombie_cocoon",1)
		inventory.out_items("mutant_snork_cocoon",1)
		inventory.out_items("mutant_flesh_cocoon",1)
		inventory.out_items("mutant_gigant_cocoon",1)
		inventory.out_items("mutant_poltergeist_cocoon",1)
		inventory.out_items("mutant_psevdodog_cocoon",1)
		inventory.out_items("mutant_dog_cocoon",1)
		inventory.out_items("mutant_controller_cocoon",1)
		inventory.out_items("mutant_chimera_cocoon",1)
		inventory.out_items("mutant_boar_cocoon",1)
		inventory.out_items("mutant_tushkano_cocoon",1)
		inventory.out_items("mutant_psydog_cocoon",1)
		inventory.out_items("mutant_cat_cocoon",1)
		inventory.out_items("bezoar",5)
	inventory.give_items("af_power",1)
	inventory.give_items("cube_chip",1)
end

function sak_biznes1_have_all()
	return
		inventory.search("af_medusa",8) and
		inventory.search("af_cristall_flower",6) and
		inventory.search("af_night_star",6) and
		inventory.search("af_vyvert",7) and
		inventory.search("af_gravi",12) and
		inventory.search("af_gold_fish",4) and
		inventory.search("af_blood",4) and
		inventory.search("af_mincer_meat",3) and
		inventory.search("af_soul",7) and
		inventory.search("af_electra_sparkler",5) and
		inventory.search("af_electra_flash",5) and
		inventory.search("af_electra_moonlight",6) and
		inventory.search("af_rusty_thorn",6) and
		inventory.search("af_rusty_kristall",8) and
		inventory.search("af_rusty_sea-urchin",4) and
		inventory.search("af_ameba_slime",5) and
		inventory.search("af_ameba_slug",10) and
		inventory.search("af_ameba_mica",8) and
		inventory.search("af_drops",9) and
		inventory.search("af_fireball",4) and
		inventory.search("af_cristall",4) and
		inventory.search("af_dummy_glassbeads",6) and
		inventory.search("af_dummy_pellicle",5) and
		inventory.search("af_dummy_battery",9) and
		inventory.search("af_dummy_dummy",6) and
		inventory.search("af_dummy_spring",7) and
		inventory.search("af_fuzz_kolobok",4) and
		inventory.search("af_cry_2",3) and
		inventory.search("af_arhara_globus",1) and
		inventory.search("arc_art_box_1basic",3) and
		inventory.search("arc_art_box_basic",3) and
		inventory.search("arc_art_box_8basic",3) and
		inventory.search("zamok",1) and
		inventory.search("treasure_item",1) and
		inventory.search("amk_metka",1)
end		
function sak_biznes1_have()
	if sak_biznes1_have_all() then
		Actor:give_info_portion("sak_biznes1_have")
		return true
	else
		return false
	end
end
function sak_biznes1_done()
		inventory.out_items("af_medusa",8)
		inventory.out_items("af_cristall_flower",6)
		inventory.out_items("af_night_star",6)
		inventory.out_items("af_vyvert",7)
		inventory.out_items("af_gravi",12)
		inventory.out_items("af_gold_fish",4)
		inventory.out_items("af_blood",4)
		inventory.out_items("af_mincer_meat",3)
		inventory.out_items("af_soul",7)
		inventory.out_items("af_electra_sparkler",5)
		inventory.out_items("af_electra_flash",5)
		inventory.out_items("af_electra_moonlight",6)
		inventory.out_items("af_rusty_thorn",6)
		inventory.out_items("af_rusty_kristall",8)
		inventory.out_items("af_rusty_sea-urchin",4)
		inventory.out_items("af_ameba_slime",5)
		inventory.out_items("af_ameba_slug",10)
		inventory.out_items("af_ameba_mica",8)
		inventory.out_items("af_drops",9)
		inventory.out_items("af_fireball",4)
		inventory.out_items("af_cristall",4)
		inventory.out_items("af_dummy_glassbeads",6)
		inventory.out_items("af_dummy_pellicle",5)
		inventory.out_items("af_dummy_battery",9)
		inventory.out_items("af_dummy_dummy",6)
		inventory.out_items("af_dummy_spring",7)
		inventory.out_items("af_fuzz_kolobok",4)
		inventory.out_items("af_cry_2",3)
		inventory.out_items("af_arhara_globus",1)

		shiftCheckDropItem()
		inventory.out_items("amk_metka",1)
		inventory.out_items("arc_art_box_1basic",3)
		inventory.out_items("arc_art_box_basic",3)
		inventory.out_items("arc_art_box_8basic",3)
		inventory.out_items("zamok",1)
		inventory.out_items("treasure_item",1)

	this.give_ammo(10)
	inventory.give_items("wpn_m_134",1)
	inventory.give_items("cube_chip",1)
end

function skraga_biznes1_have_all()
	return Actor:money()>=2000000	
end		
function skraga_biznes1_have()
	if skraga_biznes1_have_all() then
		Actor:give_info_portion("skraga_biznes1_have")
		return true
	else
		return false
	end
end
function skraga_biznes1_done()
	inventory.give_items("wpn_m_134",1)
	inventory.give_items("cube_chip",1)
end

function doktor_biznes1_have_all()
	return
		inventory.search("medkit",20) and
		inventory.search("medkit_army",30) and
		inventory.search("medkit_scientic",40) and
		inventory.search("bandage",100) and
		inventory.search("antirad",50) and
		inventory.search("antizombie",10) and
		inventory.search("vodka",20) and
		inventory.search("suvorotka",5) and
		inventory.search("af_life_heart",5) and
		inventory.search("maz",15) and
		inventory.search("matras",10) and
		inventory.search("zamok",10) and
		inventory.search("treasure_item",10) and
		inventory.search("amk_metka",1)
end		
function doktor_biznes1_have()
	if doktor_biznes1_have_all() then
		Actor:give_info_portion("doktor_biznes1_have")
		return true
	else
		return false
	end
end
function doktor_biznes1_done()
		inventory.out_items("medkit",20)
		inventory.out_items("medkit_army",30)
		inventory.out_items("medkit_scientic",40)
		inventory.out_items("bandage",100)
		inventory.out_items("antirad",50)
		inventory.out_items("antizombie",10)
		inventory.out_items("vodka",20)
		inventory.out_items("suvorotka",5)
		inventory.out_items("af_life_heart",5)
		inventory.out_items("maz",15)

		shiftCheckDropItem()
		inventory.out_items("amk_metka",1)
		inventory.out_items("matras",10)
		inventory.out_items("zamok",10)
		inventory.out_items("treasure_item",10)

	this.give_ammo(10)
	inventory.give_items("wpn_m_134",1)
	inventory.give_items("cube_chip",1)
end

function borov_biznes1_have_all()
	return
		inventory.search("wpn_mp5sd",2,true) and
		inventory.search("wpn_mp5",10,true) and
		inventory.search_ammo("ammo_9x19_pbp",1000) and
		inventory.search("medkit",20) and
		inventory.search("bandage",30) and
		inventory.search("bread",20) and
		inventory.search("kolbasa",10) and
		inventory.search("conserva",10) and
		inventory.search("af_medusa",2) and
		inventory.search("af_gravi",3) and
		inventory.search("af_drops",3) and
		inventory.search("af_blood",5) and
		inventory.search("af_fuzz_kolobok",2) and
		inventory.search("af_soul",1) and
		inventory.search("af_cry_1",2)
end		
function borov_biznes1_have()
	if borov_biznes1_have_all() then
		Actor:give_info_portion("borov_biznes1_have")
		return true
	else
		return false
	end
end
function borov_biznes1_done()
		inventory.out_items("wpn_mp5sd",2)
		inventory.out_items("wpn_mp5",10)
		inventory.out_ammo("ammo_9x19_pbp",1000)
		inventory.out_items("medkit",20)
		inventory.out_items("bandage",30)
		inventory.out_items("bread",20)
		inventory.out_items("kolbasa",10)
		inventory.out_items("conserva",10)
		inventory.out_items("af_medusa",2)
		inventory.out_items("af_gravi",3)
		inventory.out_items("af_drops",3)
		inventory.out_items("af_blood",5)
		inventory.out_items("af_fuzz_kolobok",2)
		inventory.out_items("af_soul",1)
		inventory.out_items("af_cry_1",2)
	this.give_ammo(10)
	inventory.give_items("wpn_m_134",1)
	inventory.give_items("cube_chip",1)
end

function doktor_lekar1_have()
	if Actor:dont_has_info("doktor_lekar1_start") or Actor:has_info("acv_lekar2") then return end

	local cnt = amk.load_variable("lekar",0)
	cnt = cnt+1
	
	if cnt == 1 then
		news_manager.send_tip("doktor_lekar1_have_sms1", nil, nil, 30000)
		-- Звуковое сопровождение
		local snd_obj = xr_sound.get_safe_sound_object([[device\pda\pda_tip]])
		snd_obj:play_no_feedback(Actor, sound_object.s2d, 0, vector(), 1.0)
	elseif cnt == 4 then
		news_manager.send_tip("doktor_lekar1_have_sms2", nil, nil, 30000)
		-- Звуковое сопровождение
		local snd_obj = xr_sound.get_safe_sound_object([[device\pda\pda_tip]])
		snd_obj:play_no_feedback(Actor, sound_object.s2d, 0, vector(), 1.0)
	elseif cnt == 7 then
		news_manager.send_tip("doktor_lekar1_have_sms3", nil, nil, 30000)
		-- Звуковое сопровождение
		local snd_obj = xr_sound.get_safe_sound_object([[device\pda\pda_tip]])
		snd_obj:play_no_feedback(Actor, sound_object.s2d, 0, vector(), 1.0)
	elseif cnt == 10 then
		news_manager.send_tip("doktor_lekar1_have_sms4", nil, nil, 30000)
		-- Звуковое сопровождение
		local snd_obj = xr_sound.get_safe_sound_object([[device\pda\pda_tip]])
		snd_obj:play_no_feedback(Actor, sound_object.s2d, 0, vector(), 1.0)
		Actor:give_info_portion("doktor_lekar1_have")
	elseif cnt == 20 then
		archievements.send_archievement("acv_lekar")
	elseif cnt == 30 then
		archievements.send_archievement("acv_lekar2")
		amk.del_variable("lekar")
		return
	end
	
	amk.save_variable("lekar",cnt)
end

function doktor_lekar1_money()
	if Actor:has_info("acv_lekar2") then
		aem_manager.manage_money(math.random(100,200), "in")
	end
end

-- Убийство контролеров в онлайне, чтобы не было зацикливания пения
local unbind_comms = {
	["quit"]       = key_bindings.kQUIT,
	["jump"]       = key_bindings.kJUMP,
	["quick_load"] = key_bindings.kQUICK_LOAD
}
function kill_online_kontroller(no_msg)
	if se_monster.off_online_kontroller then
		return true
	end

	local result = false
	for id,obj in pairs(db.creatures) do
		if obj and obj:clsid() == clsid.controller_s and obj:alive() then
			se_monster.off_online_kontroller = true
			if no_msg then
				return true
			else
				result = true
				break
			end
		end
	end

	if not result then
		return false
	end

	for k, v in pairs(unbind_comms) do
		unbind_comms[k] = bind_to_dik(v)
		get_console():execute( "unbind "..k )
	end
	local cs = get_hud():AddCustomStatic( "cs_reminder", true )
	local w = cs:wnd()
	w:SetFont( GetFontGraffiti32Russian() )
	w:SetTextST( "kill_online_kontroller" )
	w:SetWndPos( (512-w:GetWidth()/2), 50 )
	w:SetTextAlign( CGameFont.alCenter )
	start_small_timer(7000,
		function ()
		--	log("~ work binding")
			local key
			for k, v in pairs(unbind_comms) do
				key = hotkeys.dik2key( v )
				if not key:find("MOUSE") then key = "k"..key end
				get_console():execute( "bind "..k.." "..string.lower( key ) )
				unbind_comms[k] = dik_to_bind(v)
			end
			if get_hud():GetCustomStatic( "cs_reminder" ) then
				get_hud():RemoveCustomStatic( "cs_reminder" )
			end
		end
	)
	return true
end

function s_inventory_box1()
  local obj = AI:create_free("s_inventory_box1",vector():set(126.61811828613,15.248512268066,90.880737304688),225170,2143)
  this.create_teleport("s_teleport1_1",vector():set(122.58910369873,4.5209398269653,87.757598876953),229491,2143)
  spawn_restrictor.strelok_taynik_pda1_sr1()
end

function s_inventory_box2()
  taynik_spawn.s_new_inventory2_1()
  local obj = AI:create_free("s_inventory_box2_2",vector():set(-77.04369354248,-7.4020524024963,-20.482629776001),90914,892)
end

function s_inventory_box30()
  local obj = AI:create_free("s_inventory_box30",vector():set(73.863845825195,-0.0094784200191498,121.16677093506),29686,1221)
end

function s_inventory_box3()
  local obj = AI:create_free("s_inventory_box3",vector():set(16.393283843994,37.914726257324,2.0604181289673),6342,2453)
end

function s_inventory_box4()
  local obj = AI:create_free("s_inventory_box4",vector():set(596.83740234375,-49.984550476074,-24.092365264893),214270,1899)
  this.spawn_s_teleport4_1()
  spawn_restrictor.strelok_taynik_pda4_sr1()
  obj = AI:create_free("af_dummy_spring_red",vector():set(664.32122802734,-44.515979766846,-37.01086807251),227163,1896)
  obj = AI:create_free("af_dummy_battery_red",vector():set(664.32122802734,-44.515979766846,-37.01086807251),227163,1896)
  obj = AI:create_free("af_dummy_pellicle_red",vector():set(664.32122802734,-44.515979766846,-37.01086807251),227163,1896)
end

function s_inventory_box5()
  local obj = AI:create_free("s_inventory_box5",vector():set(984.81433105469,11.019639015198,245.36875915527),261708,2646)
end

function s_inventory_box6()
  spawn_restrictor.strelok_taynik_pda6_sr1()
  spawn_restrictor.strelok_taynik_pda6_sr2()
  spawn_restrictor.strelok_taynik_pda6_sr3()
end

function s_inventory_box7()
  local obj = AI:create_free("s_inventory_box7",vector():set(-17.708236694336,17.989824295044,-4.267804145813),5646,2026)
  spawn_restrictor.strelok_taynik_pda7_sr1()
  spawn_restrictor.strelok_taynik_pda7_sr2()
end

function strelok_taynik_pda1_have(task, objective)
    return Actor:has_info("strelok_taynik_pda1_found") and inventory.search("strelok_taynik_pda1", 1)
end
function strelok_taynik_pda1_done(first_speaker, second_speaker)
  dialogs.relocate_item_section(second_speaker, "strelok_taynik_pda1", "out")
  this.delete_s_teleport1_2()
end

function strelok_taynik_pda2_have(task, objective)
	return inventory.search("strelok_taynik_pda2_1", 1)
		and inventory.search("strelok_taynik_pda2_2", 1)
end
function strelok_taynik_pda2_done(first_speaker, second_speaker)
	dialogs.relocate_item_section(second_speaker, "strelok_taynik_pda2_1", "out")
	dialogs.relocate_item_section(second_speaker, "strelok_taynik_pda2_2", "out")
end

function strelok_taynik_pda30_have(task, objective)
  return inventory.search("strelok_taynik_pda30", 1)
end
function strelok_taynik_pda30_done(first_speaker, second_speaker)
  dialogs.relocate_item_section(second_speaker, "strelok_taynik_pda30", "out")
end

function strelok_taynik_pda3_have(task, objective)
  return inventory.search("strelok_taynik_pda3", 1)
end
function strelok_taynik_pda3_done(first_speaker, second_speaker)
  dialogs.relocate_item_section(second_speaker, "strelok_taynik_pda3", "out")
end
function strelok_taynik_pda3_drop()
    this.delete_s_teleport3_2()
	local se_obj = Actor:object("strelok_taynik_pda3_1")
	amk.drop_item(Actor,se_obj)
	amk.remove_item(se_obj)
	se_obj = Actor:object("strelok_taynik_pda3_2")
	amk.drop_item(Actor,se_obj)
	amk.remove_item(se_obj)
	se_obj = Actor:object("strelok_taynik_pda3_3")
	amk.drop_item(Actor,se_obj)
	amk.remove_item(se_obj)
end

function strelok_taynik_pda4_have(task, objective)
	return Actor:has_info("strelok_taynik_pda4_found")
		and inventory.search("strelok_taynik_pda4", 1)
end
function strelok_taynik_pda4_done(first_speaker, second_speaker)
  dialogs.relocate_item_section(second_speaker, "strelok_taynik_pda4", "out")
end

function strelok_taynik_pda5_have(task, objective)
	return inventory.search("strelok_taynik_pda5", 1)
end
function strelok_taynik_pda5_done(first_speaker, second_speaker)
  dialogs.relocate_item_section(second_speaker, "strelok_taynik_pda5", "out")
end

function strelok_taynik_pda6_have(task, objective)
	return Actor:has_info("strelok_taynik_pda6_found")
		and inventory.search("strelok_taynik_pda6", 1)
end
function strelok_taynik_pda6_done(first_speaker, second_speaker)
  dialogs.relocate_item_section(second_speaker, "strelok_taynik_pda6", "out")
end

function strelok_taynik_pda7_have(task, objective)
	return Actor:has_info("strelok_taynik_pda7_found") 
		and inventory.search("strelok_taynik_pda7", 1)
end

function spawn_s_teleport1_2()
    local se_obj = AI:create("s_teleport1_2",vector():set(207.23626708984,17.963800430298,48.94217300415),260660,2145)
	xr_logic.pstor_store(Actor, "s_teleport1_2", se_obj.id)		  
end
function delete_s_teleport1_2()
	local obj_id = xr_logic.pstor_retrieve(Actor, "s_teleport1_2", -1, true)
	local se_obj = AI : object(obj_id)
	if se_obj then
		AI:release(se_obj, true)
	end
end
function spawn_s_teleport1_3_1()
    local se_obj = AI:create("s_teleport1_3_1",vector():set(98.162727355957,28.547431945801,38.083969116211),225595,2143)
	xr_logic.pstor_store(Actor, "s_teleport1_3_1", se_obj.id)		  
end
function spawn_s_teleport1_3_2()
    local se_obj = AI:create("s_teleport1_3_2",vector():set(-17.820304870605,13.85008430481,11.088830947876),81517,2160)
	xr_logic.pstor_store(Actor, "s_teleport1_3_2", se_obj.id)		  
end
function spawn_s_teleport1_4()
    local se_obj = AI:create("s_teleport1_4",vector():set(-90.959411621094,13.623492240906,28.934303283691),7528,2253)
	xr_logic.pstor_store(Actor, "s_teleport1_4", se_obj.id)		  
end
function spawn_s_teleport1_5()
    local se_obj = AI:create("s_teleport1_5",vector():set(43.850486755371,11.828426361084,37.138198852539),155631,2225)
	-- нигде не используется, лишний мусор в псторе
	--xr_logic.pstor_store(Actor, "s_teleport1_5", se_obj.id)		  
end

function spawn_s_teleport3_2()
    local se_obj = AI:create("s_teleport3_2",vector():set(-150.38586425781,-5.7839937210083,-278.90524291992),6896,3238)
	xr_logic.pstor_store(Actor, "s_teleport3_2", se_obj.id)		  
end
function delete_s_teleport3_2()
	local obj_id = xr_logic.pstor_retrieve(Actor, "s_teleport3_2", -1, true)
	local se_obj = AI:object(obj_id)
	if se_obj then
	  AI:release(se_obj, true)
	end
end

function spawn_s_teleport4_1()
    local se_obj = AI:create("s_teleport4_1",vector():set(308.16702270508,-37.625602722168,-21.087753295898),69058,1930)
	xr_logic.pstor_store(Actor, "s_teleport4_1", se_obj.id)		  
end
function delete_s_teleport4_1()
	local obj_id = xr_logic.pstor_retrieve(Actor, "s_teleport4_1", -1, true)
	local se_obj = AI:object(obj_id)
	if se_obj then
	  AI:release(se_obj, true)
	end
end

function spawn_s_teleport0_1()
    local se_obj = AI:create("s_teleport0_1",vector():set(-1.5840334892273,5.1518805027008,-44.498065948486),10089,1961)
--	xr_logic.pstor_store(Actor, "s_teleport0_1", se_obj.id)		  
end
function delete_s_teleport0_1()
	local obj_id = xr_logic.pstor_retrieve(Actor, "s_teleport0_1", -1, true)
	local se_obj = AI : object(obj_id)
	if se_obj then
	  AI:release(se_obj, true)
	end
end

function checking_taken_item59(obj)
  local obj_sect = obj:section()
  if string.find(obj_sect,"kostya_taynik_pda1_") then
	Actor:give_info_portion("kostya_taynik_pda_have_1_"..string.sub(obj_sect,string.find(obj_sect,"1_")+2))
	if Actor:dont_has_info("kostya_taynik_pda1_tele") then 
	  news_manager.send_tip("kostya_taynik_pda1_tele_sms", nil, nil, 30000)
	  this.spawn_t_teleport1_1()
	  Actor:give_info_portion("kostya_taynik_pda1_tele")
	end
	if obj_sect=="kostya_taynik_pda1_2" then 
	  if Actor:dont_has_info("kostya_taynik_pda1_2_xvatit_spawn") then 
	    news_manager.send_tip("kostya_taynik_pda1_2_xvatit_spawn_sms", nil, nil, 30000)
	    Actor:give_info_portion("kostya_taynik_pda1_2_xvatit_spawn")
	  end
	end
    if Actor:has_info("kostya_taynik_pda_have_1_1") and Actor:has_info("kostya_taynik_pda_have_1_2") and Actor:has_info("kostya_taynik_pda_have_1_3") and Actor:has_info("kostya_taynik_pda_have_1_4") and Actor:has_info("kostya_taynik_pda_have_1_5") then
	  if Actor:dont_has_info("kostya_taynik_pda1_have") then 
	    this.delete_t_teleport1_1()
	    this.spawn_t_teleport1_2()
	    news_manager.send_tip("kostya_taynik_pda1_have_sms", nil, nil, 30000)
        Actor:give_info_portion("kostya_taynik_pda1_have")
	  end
	end
  end
end

function t_inventory_box1()
  spawn_restrictor.kostya_taynik_pda1_sr1()
end
function kostya_taynik_pda1_have(task, objective)
    return Actor:has_info("kostya_taynik_pda1_have")
end
function kostya_taynik_pda1_done(first_speaker, second_speaker)
  dialogs.relocate_item_section(second_speaker, "kostya_taynik_pda1_1", "out")
  dialogs.relocate_item_section(second_speaker, "kostya_taynik_pda1_2", "out")
  dialogs.relocate_item_section(second_speaker, "kostya_taynik_pda1_3", "out")
  dialogs.relocate_item_section(second_speaker, "kostya_taynik_pda1_4", "out")
  dialogs.relocate_item_section(second_speaker, "kostya_taynik_pda1_5", "out")
end

function t_inventory_box21()
  taynik_spawn.t_new_inventory21()
end
function kostya_taynik_pda21_have(task, objective)
	if inventory.search("kostya_taynik_pda21",18) then
		Actor:give_info_portion("kostya_taynik_pda21_have")
		return true
	else
		return false
	end
end
function kostya_taynik_pda21_done(task, objective)
	inventory.out_items("kostya_taynik_pda21",18)

	-- спавним порталы и переходы
	local obj, params
	local portals = {
		{eh={x=-95.833763122559,y=-20.12349319458,z=73.946479797363,gv=3838,lv=1098},
		 lc={x=-94.074142456055,y=-18.931434631348,z=73.887977600098,gv=3838,lv=1289},
		 to={x=-5.1342377662659,y=-8.7591800689697,z=-43.163402557373,gv=2694,lv=5035},
		 dir={x=0,y=-1.57,z=0},
		 level="labx8"
		},
		{eh={x=0.057874165475369,y=-9.2725133895874,z=-43.226726531982,gv=2694,lv=5869},
		 lc={x=1.7423397302628,y=-8.0805139541626,z=-43.251842498779,gv=2694,lv=6289},
		 to={x=96.647491455078,y=5.50750207901,z=-15.555990219116,gv=1539,lv=6547},
		 dir={x=0,y=-1.57,z=0},
		 level="l10u_bunker"
		},
		{eh={x=102.00410461426,y=5.56742811203,z=-15.614800453186,gv=1544,lv=6771},
		 lc={x=103.65747070313,y=6.7574377059937,z=-15.629001617432,gv=1544,lv=6820},
		 to={x=8.3273286819458,y=-12.429878234863,z=23.948041915894,gv=1155,lv=3980},
		 dir={x=0,y=-1.57,z=0},
		 level="l08u_brainlab"
		},
		{eh={x=13.632986068726,y=-12.430124282837,z=23.89408493042,gv=1155,lv=4797},
		 lc={x=15.552788734436,y=-11.238062858582,z=23.86653137207,gv=1155,lv=5156},
		 to={x=-87.99201965332,y=-20.119352340698,z=73.813842773438,gv=3838,lv=1899},
		 dir={x=0,y=1.57,z=0},
		 level="l04u_labx18"
		}
	}
	
	for i,a in pairs(portals) do
 		obj = AI:create("event_horisont",vector():set(a.eh.x,a.eh.y,a.eh.z),a.eh.lv,a.eh.gv)
		params = {}
		params.object_flags = -198		-- 0xffffff3a object_flags
		params.visual_flags = 1			-- 0x1 visual_flags
		params.skeleton_name = "idle"
		params.skeleton_flags = 1
		params.physic_type = 3		-- 0x3
		params.mass = 100
		params.fixed_bones = "joint1"
		netpk:modify(obj, params, netpk.fState)
	
		AI:create("zone_event_horisont",vector():set(a.eh.x,a.eh.y+1.7,a.eh.z),a.eh.lv,a.eh.gv)

		obj = AI:create("space_restrictor", vector():set(a.lc.x,a.lc.y,a.lc.z), a.lc.lv, a.lc.gv)
		params = {}
		params.object_flags	= bit_not(193)
		params.story_id = 220000 + i
		params.shapes = {
			{
				shtype = 0,
				center = vector():set(0,0,0),
				radius = 0.7
			}
		}
		params.restrictor_type = 3
		local cd = {
			logic = {
				active = "sr_level_changer"
			},
			sr_level_changer = {
				dest_game_vertex_id = tostring(a.to.gv),
				dest_level_vertex_id = tostring(a.to.lv),
				dest_position = string.format("%s,%s,%s", a.to.x, a.to.y, a.to.z),
				dest_direction = string.format("%s,%s,%s", a.dir.x, a.dir.y, a.dir.z)
			}
		}
		params.custom_data = netpk:gen_custom_data(cd)
		netpk:modify(obj, params, netpk.fState)
	end
end

function t_inventory_box2()
  taynik_spawn.t_new_inventory2()
end
function kostya_taynik_pda2_have(task, objective)
	if inventory.search("kostya_taynik_pda2", 1) then
		Actor:give_info_portion("kostya_taynik_pda2_have")
		return true
	else
		return false
	end
end
function kostya_taynik_pda2_done(first_speaker, second_speaker)
  dialogs.relocate_item_section(second_speaker, "kostya_taynik_pda2", "out")
end

function t_inventory_box3()
  taynik_spawn.t_new_inventory3_1()
  taynik_spawn.t_new_inventory3_2()
  local obj = AI:create_free("t_inventory_box3_3",vector():set(4.5460352897644,31.063150405884,67.978546142578),27143,2659)
  obj = AI:create_free("t_inventory_box3_4",vector():set(242.60501098633,73.895149230957,138.61387634277),76288,2573)
end
function kostya_taynik_pda3_have(task, objective)
	for i=1,4 do
		if not inventory.search("kostya_taynik_pda3_"..i) then
			return false
		end
	end
	Actor:give_info_portion("kostya_taynik_pda3_have")
	return true
end
function kostya_taynik_pda3_done(first_speaker, second_speaker)
  dialogs.relocate_item_section(second_speaker, "kostya_taynik_pda3_1", "out")
  dialogs.relocate_item_section(second_speaker, "kostya_taynik_pda3_2", "out")
  dialogs.relocate_item_section(second_speaker, "kostya_taynik_pda3_3", "out")
  dialogs.relocate_item_section(second_speaker, "kostya_taynik_pda3_4", "out")
end

function t_inventory_box4()
  local obj = AI:create_free("t_inventory_box4",vector():set(316.57379150391,-12.273648262024,-261.89810180664),1431070,2903)
end
function kostya_taynik_pda4_have(task, objective)
	if inventory.search("kostya_taynik_pda4", 1) then
		Actor:give_info_portion("kostya_taynik_pda4_have")
		return true
	else
		return false
	end
end
function kostya_taynik_pda4_done(first_speaker, second_speaker)
  dialogs.relocate_item_section(second_speaker, "kostya_taynik_pda4", "out")
end

function t_inventory_box5()
  taynik_spawn.t_new_inventory5()
end
function kostya_taynik_pda5_have(task, objective)
	if inventory.search("kostya_taynik_pda5", 1) then
		Actor:give_info_portion("kostya_taynik_pda5_have")
		return true
	else
		return false
	end
end
function kostya_taynik_pda5_done(first_speaker, second_speaker)
  dialogs.relocate_item_section(second_speaker, "kostya_taynik_pda5", "out")
end

function t_inventory_box6()
  taynik_spawn.t_new_inventory6_1()
  taynik_spawn.t_new_inventory6_2()
end
function kostya_taynik_pda6_have(task, objective)
	if inventory.search("kostya_taynik_pda6_1", 1)
		and inventory.search("kostya_taynik_pda6_2", 1)
	then
		Actor:give_info_portion("kostya_taynik_pda6_have")
		return true
	end
	return false
end
function kostya_taynik_pda6_done(first_speaker, second_speaker)
  dialogs.relocate_item_section(second_speaker, "kostya_taynik_pda6_1", "out")
  dialogs.relocate_item_section(second_speaker, "kostya_taynik_pda6_2", "out")
end

function t_inventory_box7()
  local obj = AI:create_free("t_inventory_box7",vector():set(94.308715820313,14.254689216614,50.491359710693),40199,3336)
end
function kostya_taynik_pda7_have(task, objective)
	if inventory.search("kostya_taynik_pda7", 1) then
		Actor:give_info_portion("kostya_taynik_pda7_have")
		return true
	else
		return false
	end
end
function kostya_taynik_pda7_done(first_speaker, second_speaker)
  dialogs.relocate_item_section(second_speaker, "kostya_taynik_pda7", "out")
end

function t_inventory_box8()
  taynik_spawn.t_new_inventory8()
end
function kostya_taynik_pda8_have(task, objective)
	if inventory.search("kostya_taynik_pda8", 1) then
		Actor:give_info_portion("kostya_taynik_pda8_have")
		return true
	end
	return false
end
function kostya_taynik_pda8_done(first_speaker, second_speaker)
  dialogs.relocate_item_section(second_speaker, "kostya_taynik_pda8", "out")
end

function t_inventory_box9()
  taynik_spawn.t_new_inventory9_1()
  local obj = AI:create_free("t_inventory_box9_2",vector():set(-108.54,0.61,-244.63),11031,3241)
  taynik_spawn.t_new_inventory9_3()
end
function kostya_taynik_pda9_have(task, objective)
	if inventory.search("kostya_taynik_pda9_1")
		and inventory.search("kostya_taynik_pda9_2")
		and inventory.search("kostya_taynik_pda9_3")
	then
		Actor:give_info_portion("kostya_taynik_pda9_have")
		return true
	else
		return false
	end
end
function kostya_taynik_pda9_done(first_speaker, second_speaker)
  dialogs.relocate_item_section(second_speaker, "kostya_taynik_pda9_1", "out")
  dialogs.relocate_item_section(second_speaker, "kostya_taynik_pda9_2", "out")
  dialogs.relocate_item_section(second_speaker, "kostya_taynik_pda9_3", "out")
end

function t_inventory_box10()
  local obj = AI:create_free("t_inventory_box10_1",vector():set(-116.87435913086,4.8685846328735,-149.80033874512),89560,562)
  obj = AI:create_free("t_inventory_box10_2",vector():set(-26.37,-0.58,-25.53),280608,1593)
  obj = AI:create_free("t_inventory_box10_3",vector():set(27.953716278076,20.462240219116,684.33978271484),307284,208)
  obj = AI:create_free("t_inventory_box10_4",vector():set(106.7265625,13.199247360229,153.22033691406),272568,374)
  spawn_restrictor.kostya_taynik_pda10_sr1()
end
function kostya_taynik_pda10_have(task, objective)
	if inventory.search("kostya_taynik_pda10_1")
		and inventory.search("kostya_taynik_pda10_2")
		and inventory.search("kostya_taynik_pda10_3")
		and inventory.search("kostya_taynik_pda10_4")
	then
		Actor:give_info_portion("kostya_taynik_pda10_have")
		return true
	else
		return false
	end
end
function kostya_taynik_pda10_done(first_speaker, second_speaker)
  dialogs.relocate_item_section(second_speaker, "kostya_taynik_pda10_1", "out")
  dialogs.relocate_item_section(second_speaker, "kostya_taynik_pda10_2", "out")
  dialogs.relocate_item_section(second_speaker, "kostya_taynik_pda10_3", "out")
  dialogs.relocate_item_section(second_speaker, "kostya_taynik_pda10_4", "out")
end

function t_inventory_box11()
  local obj = AI:create_free("t_inventory_box11_1",vector():set(192.18560791016,12.331077575684,101.35523986816),260351,2221)
  taynik_spawn.t_new_inventory11_2()
  obj = AI:create_free("t_inventory_box11_3",vector():set(6.5773458480835,8.061222076416,138.07514953613),109702,2147)
end
function kostya_taynik_pda11_have(task, objective)
	if inventory.search("kostya_taynik_pda11_1")
		and inventory.search("kostya_taynik_pda11_2")
		and inventory.search("kostya_taynik_pda11_3")
	then
		Actor:give_info_portion("kostya_taynik_pda11_have")
		return true
	else
		return false
	end
end
function kostya_taynik_pda11_done(first_speaker, second_speaker)
  Actor:give_info_portion("ktdt1")
  this.spawn_x_teleport1()
  dialogs.relocate_item_section(second_speaker, "kostya_taynik_pda11_1", "out")
  dialogs.relocate_item_section(second_speaker, "kostya_taynik_pda11_2", "out")
  dialogs.relocate_item_section(second_speaker, "kostya_taynik_pda11_3", "out")
end

function spawn_t_teleport1_1()
    local se_obj = AI:create("t_teleport1_1",vector():set(190.83657836914,2.7860803604126,217.42588806152),260274,2219)
	xr_logic.pstor_store(Actor, "t_teleport1_1", se_obj.id)		  
end
function delete_t_teleport1_1()
	local obj_id = xr_logic.pstor_retrieve(Actor, "t_teleport1_1", -1, true)
	local se_obj = AI:object(obj_id)
	if se_obj then
	  AI:release(se_obj, true)
	end
end
function spawn_t_teleport1_2()
    local se_obj = AI:create("t_teleport1_2",vector():set(23.953285217285,10.699913024902,162.15838623047),131398,2199)
	-- нигде не используется, лишний мусор в псторе
--	xr_logic.pstor_store(Actor, "t_teleport1_2", se_obj.id)		  
end

function spawn_t_teleport4_1()
    local se_obj = AI:create("t_teleport4_1",vector():set(-50.95,-29.72,-139.41),796684,2897)
	-- нигде не используется, лишний мусор в псторе
--	xr_logic.pstor_store(Actor, "t_teleport4_1", se_obj.id)		  
end

function spawn_x_teleport1()
    local se_obj = AI:create("x_teleport1",vector():set(9.4039793014526,11.447186470032,90.041458129883),114619,2142)
	xr_logic.pstor_store(Actor, "x_teleport1", se_obj.id)
	spawn_restrictor.ktdt1_sr1()
end
function spawn_x_teleport2()
    local se_obj = AI:create("x_teleport2",vector():set(-15.461825370789,-3.8673331737518,-5.0735273361206),283384,1593)
	xr_logic.pstor_store(Actor, "x_teleport2", se_obj.id)
	spawn_restrictor.ktdt2_sr1()
end
function spawn_x_teleport3()
    local se_obj = AI:create("x_teleport3",vector():set(47.420116424561,-2.4642562866211,-209.0924987793),63669,1469)
	xr_logic.pstor_store(Actor, "x_teleport3", se_obj.id)
    se_obj = AI:create("x_teleport3_1",vector():set(-47.345569610596,0.74647736549377,-160.83731079102),16808,1490)
	xr_logic.pstor_store(Actor, "x_teleport3_1", se_obj.id)
    se_obj = AI:create("x_teleport3_2",vector():set(-25.791805267334,0.7459944486618,-150.2300567627),16808,1490)
	xr_logic.pstor_store(Actor, "x_teleport3_2", se_obj.id)
    se_obj = AI:create("x_teleport3_3",vector():set(-67.088394165039,1.2463047504425,-154.01571655273),15216,1490)
	xr_logic.pstor_store(Actor, "x_teleport3_3", se_obj.id)
    se_obj = AI:create("x_inventory_box3",vector():set(-27.107929229736,0.74637401103973,-160.10646057129),16808,1490)
	spawn_restrictor.ktdt3_sr1()
end


function taynik_kostya2_call()
    if Actor:has_info("kostya_sacharov_done") and Actor:has_info("sahar_sumka_done") and Actor:has_info("kostya_biznes1_done") then 
	  news_manager.send_tip("taynik_kostya2_call_sms", 7, nil, 30000)
	  -- Звуковое сопровождение
	  local snd_obj = xr_sound.get_safe_sound_object([[device\pda\pda_tip]])
      snd_obj:play_no_feedback(Actor, sound_object.s2d, 0, vector(), 1.0)
	end
end

function esc_pda_have(task, objective)
	return inventory.search("kostya_pda")
end

function esc_pda_done(first_speaker, second_speaker)
	dialogs.relocate_item_section(first_speaker, "kostya_pda", "out")
	second_speaker:set_relation(game_object.friend, first_speaker) 
end

function esc_art_have(task, objective)
	return inventory.search("kostya_af_gold_fish")
end

function esc_art_done(first_speaker, second_speaker)
	dialogs.relocate_item_section(second_speaker, "kostya_af_gold_fish", "out")
	second_speaker:set_relation(game_object.friend, first_speaker) 
end


function esc_pda2_have(task, objective)
	return inventory.search("kostya_pda2")
end

function esc_pda2_done(first_speaker, second_speaker)
	dialogs.relocate_item_section(second_speaker, "kostya_pda2", "out")
end


function esc_pda3_have(task, objective)
	return inventory.search("kostya_pda3")
end

function esc_pda3_done(first_speaker, second_speaker)
	dialogs.relocate_item_section(second_speaker, "kostya_pda3", "out")
end


function esc_pda4_have(task, objective)
	return inventory.search("kostya_pda4")
end

function esc_pda4_done(first_speaker, second_speaker)
	dialogs.relocate_item_section(second_speaker, "kostya_pda4", "out")
end


function esc_pda5_have(task, objective)
	return inventory.search("kostya_pda5")
end

function esc_pda5_done(first_speaker, second_speaker)
	dialogs.relocate_item_section(second_speaker, "kostya_pda5", "out")
end


function esc_pda6_have(task, objective)
	return inventory.search("kostya_pda6")
end

function esc_pda6_done(first_speaker, second_speaker)
	dialogs.relocate_item_section(second_speaker, "kostya_pda6", "out")
end


function esc_pda7_have(task, objective)
	return inventory.search("kostya_pda7")
end

function esc_pda7_done(first_speaker, second_speaker)
dialogs.relocate_item_section(second_speaker, "kostya_pda7", "out")
end


function esc_pda8_have(task, objective)
	return inventory.search("kostya_pda8", 1)
end

function esc_pda8_done(first_speaker, second_speaker)
	dialogs.relocate_item_section(second_speaker, "kostya_pda8", "out")
end


function esc_pda9_have(task, objective)
	return inventory.search("kostya_pda9", 1)
end

function esc_pda9_done(first_speaker, second_speaker)
dialogs.relocate_item_section(second_speaker, "kostya_pda9", "out")
end


function sacharov_pda_have(task, objective)
	return inventory.search("pda_vasilyev", 1)
end

function sacharov_pda_done(first_speaker, second_speaker)
	inventory.out_items("pda_vasilyev",1)
end

function kostya_art2_have(task, objective)
	return Actor:object("af_dummy_battery") ~= nil
end

function kostya_teleport_have(task, objective)
	return inventory.search("af_dummy_battery", 1)
		and Actor:money() >= 40000
end
function kostya_teleport_havent()
	return not kostya_teleport_have()
end

function kostya_art2_done(first_speaker, second_speaker)
	dialogs.relocate_item_section(second_speaker, "af_dummy_battery", "out")
end

function document_done(first_speaker, second_speaker)
	inventory.out_items("kostya_documents",1)
end

function kostya_teleport(first_speaker, second_speaker)
	dialogs.relocate_item_section(second_speaker, "science_teleport", "in")
end

function kostya_teleport2(first_speaker, second_speaker)
	dialogs.relocate_item_section(second_speaker, "science_teleport2", "in")
end

function kostya_teleport3(first_speaker, second_speaker)
	dialogs.relocate_item_section(second_speaker, "science_teleport3", "in")
end

function kostya_teleport4(first_speaker, second_speaker)
	dialogs.relocate_item_section(second_speaker, "device_teleport", "in")
end

function info_recieved() end

-- Вероятности появления фраз в диалогах
function probability_05()
	return math.random() <= 0.05
end

function actor_has_money_100000()
  return Actor:money()>=100000
end
function give_money_100000(t1,t2)
  local npc=t1
  if npc:id()==0 then
    npc=t2
  end
  dialogs.relocate_money(npc,100000,"out")
end

function actor_has_money_40000()
  return Actor:money()>=40000
end
function give_money_40000(t1,t2)
  local npc=t1
  if npc:id()==0 then
    npc=t2
  end
  dialogs.relocate_money(npc,40000,"out")
end

function actor_has_money_20000()
  return Actor:money()>=20000
end
function give_money_20000(t1,t2)
  local npc=t1
  if npc:id()==0 then
    npc=t2
  end
  dialogs.relocate_money(npc,20000,"out")
end

function actor_out_money_190000()
	aem_manager.manage_money(190000, "out")
end
function actor_in_money_190000()
	aem_manager.manage_money(190000, "in")
end

function actor_has_money_200000()
  return Actor:money() >= 200000
end
function actor_dont_has_money_200000()
  return Actor:money() < 200000
end
function give_money_200000(t1,t2)
  local npc=t1
  if npc:id()==0 then
    npc=t2
  end
  dialogs.relocate_money(npc,200000,"out")
end

function actor_has_money_20000()
  return Actor:money() >= 20000
end
function actor_dont_has_money_20000()
  return Actor:money() < 20000
end
function give_money_20000(t1,t2)
  local npc=t1
  if npc:id()==0 then
    npc=t2
  end
  dialogs.relocate_money(npc,20000,"out")
end

function actor_has_money_25000()
  return Actor:money() >= 25000
end
function actor_dont_has_money_25000()
  return Actor:money() < 25000
end
function give_money_25000(t1,t2)
  local npc=t1
  if npc:id()==0 then
    npc=t2
  end
  dialogs.relocate_money(npc,25000,"out")
end
