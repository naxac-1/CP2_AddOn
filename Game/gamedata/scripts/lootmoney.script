-- -*- mode: lua; encoding: windows-1251 -*-

function lootmoney(npc)
	if not npc then return end
	-- автообыск трупа
	if game_options.AutoGrab then
		this.start_transfer_all_desired(npc)
	end

	if Actor:has_info("haker_soft_pda")
		and (not string.find(npc:section(),"arena"))
		and npc:character_community()~="arena_enemy"
		and npc:character_community()~="vermaht"
	then
		local money = npc:money()

		if money == nil or money == 0 then return end

		local deadmoney = money

		if not game_options.RealMoney then
			local npc_rank = ranks.get_obj_rank_name(npc)
			if npc_rank ~= nil then
				if npc_rank == "novice" and money >=150 then deadmoney=math.random(100,150)
				elseif npc_rank == "experienced" and money >=300 then deadmoney=math.random(200,300)
				elseif npc_rank == "veteran" and money >=450 then deadmoney=math.random(380,450)
				elseif npc_rank == "master" and money >=600 then deadmoney=math.random(500,600)
				end
			end
		end

		local news_texti =	"%c[green]PDA: %c[default]["..npc:character_name().."]\\n"..
							"%c[green]Found money: %c[default]["..deadmoney.."]"
		Actor:give_game_news(news_texti, "ui\\ui_iconsTotal", Frect():set(0,0,83,47), 1, 4000)
		Actor:give_money(deadmoney)
		npc:give_money(-money)
		archievements.acv_count_event("acv_mar", 50000, deadmoney)
		archievements.acv_money()
	end
end
	
-- автообыск трупа. список переносимых предметов. поиск по частичному совпадению.
local favorites = {
	"ammo",
	"money_loot",
	"device_pda_npc",
	"army_counter",
	"grenade_f1",
	"grenade_m61",
	"grenade_7643b",
	"grenade_he",
	"grenade_sg",
	"grenade_fb",
	"medkit",
	"bandage",
	"antirad",
	"suvorotka",
	"vodka"
}

local out_object = nil

function start_transfer_all_desired(npc)
	out_object = npc
	xr_s.subscribe( "update", this.transfer_all_desired, { timeout = 500, once = true } )
end

function transfer_all_desired()
	if has_alife_info("ui_car_body") then
		shiftCheckDropItem()
		out_object:inventory_for_each(transfer_favorite)
	end
	out_object = nil
end

function transfer_favorite(item)
	for k,v in ipairs(favorites) do
		if string.find(item:section(), v) then
			out_object:transfer_item(item, Actor)
		end
	end
end
